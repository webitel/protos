// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workflow/processing.proto

package workflow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CancelProcessingRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelProcessingRequest) Reset()         { *m = CancelProcessingRequest{} }
func (m *CancelProcessingRequest) String() string { return proto.CompactTextString(m) }
func (*CancelProcessingRequest) ProtoMessage()    {}
func (*CancelProcessingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{0}
}

func (m *CancelProcessingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelProcessingRequest.Unmarshal(m, b)
}
func (m *CancelProcessingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelProcessingRequest.Marshal(b, m, deterministic)
}
func (m *CancelProcessingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelProcessingRequest.Merge(m, src)
}
func (m *CancelProcessingRequest) XXX_Size() int {
	return xxx_messageInfo_CancelProcessingRequest.Size(m)
}
func (m *CancelProcessingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelProcessingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelProcessingRequest proto.InternalMessageInfo

func (m *CancelProcessingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CancelProcessingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelProcessingResponse) Reset()         { *m = CancelProcessingResponse{} }
func (m *CancelProcessingResponse) String() string { return proto.CompactTextString(m) }
func (*CancelProcessingResponse) ProtoMessage()    {}
func (*CancelProcessingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{1}
}

func (m *CancelProcessingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelProcessingResponse.Unmarshal(m, b)
}
func (m *CancelProcessingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelProcessingResponse.Marshal(b, m, deterministic)
}
func (m *CancelProcessingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelProcessingResponse.Merge(m, src)
}
func (m *CancelProcessingResponse) XXX_Size() int {
	return xxx_messageInfo_CancelProcessingResponse.Size(m)
}
func (m *CancelProcessingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelProcessingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelProcessingResponse proto.InternalMessageInfo

type StartProcessingRequest struct {
	SchemaId             uint32            `protobuf:"varint,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	DomainId             int64             `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Variables            map[string]string `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StartProcessingRequest) Reset()         { *m = StartProcessingRequest{} }
func (m *StartProcessingRequest) String() string { return proto.CompactTextString(m) }
func (*StartProcessingRequest) ProtoMessage()    {}
func (*StartProcessingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{2}
}

func (m *StartProcessingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartProcessingRequest.Unmarshal(m, b)
}
func (m *StartProcessingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartProcessingRequest.Marshal(b, m, deterministic)
}
func (m *StartProcessingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartProcessingRequest.Merge(m, src)
}
func (m *StartProcessingRequest) XXX_Size() int {
	return xxx_messageInfo_StartProcessingRequest.Size(m)
}
func (m *StartProcessingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartProcessingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartProcessingRequest proto.InternalMessageInfo

func (m *StartProcessingRequest) GetSchemaId() uint32 {
	if m != nil {
		return m.SchemaId
	}
	return 0
}

func (m *StartProcessingRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *StartProcessingRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type FormActionRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64             `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Action               string            `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Variables            map[string]string `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FormActionRequest) Reset()         { *m = FormActionRequest{} }
func (m *FormActionRequest) String() string { return proto.CompactTextString(m) }
func (*FormActionRequest) ProtoMessage()    {}
func (*FormActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{3}
}

func (m *FormActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormActionRequest.Unmarshal(m, b)
}
func (m *FormActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormActionRequest.Marshal(b, m, deterministic)
}
func (m *FormActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormActionRequest.Merge(m, src)
}
func (m *FormActionRequest) XXX_Size() int {
	return xxx_messageInfo_FormActionRequest.Size(m)
}
func (m *FormActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FormActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FormActionRequest proto.InternalMessageInfo

func (m *FormActionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FormActionRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *FormActionRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *FormActionRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ErrorForm struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorForm) Reset()         { *m = ErrorForm{} }
func (m *ErrorForm) String() string { return proto.CompactTextString(m) }
func (*ErrorForm) ProtoMessage()    {}
func (*ErrorForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{4}
}

func (m *ErrorForm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorForm.Unmarshal(m, b)
}
func (m *ErrorForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorForm.Marshal(b, m, deterministic)
}
func (m *ErrorForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorForm.Merge(m, src)
}
func (m *ErrorForm) XXX_Size() int {
	return xxx_messageInfo_ErrorForm.Size(m)
}
func (m *ErrorForm) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorForm.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorForm proto.InternalMessageInfo

func (m *ErrorForm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ErrorForm) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Form struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId                string     `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Form                 []byte     `protobuf:"bytes,3,opt,name=form,proto3" json:"form,omitempty"`
	Timeout              uint64     `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Stop                 bool       `protobuf:"varint,5,opt,name=stop,proto3" json:"stop,omitempty"`
	Error                *ErrorForm `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Form) Reset()         { *m = Form{} }
func (m *Form) String() string { return proto.CompactTextString(m) }
func (*Form) ProtoMessage()    {}
func (*Form) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c1dbb24fadcb1c, []int{5}
}

func (m *Form) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Form.Unmarshal(m, b)
}
func (m *Form) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Form.Marshal(b, m, deterministic)
}
func (m *Form) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Form.Merge(m, src)
}
func (m *Form) XXX_Size() int {
	return xxx_messageInfo_Form.Size(m)
}
func (m *Form) XXX_DiscardUnknown() {
	xxx_messageInfo_Form.DiscardUnknown(m)
}

var xxx_messageInfo_Form proto.InternalMessageInfo

func (m *Form) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Form) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Form) GetForm() []byte {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *Form) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Form) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

func (m *Form) GetError() *ErrorForm {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*CancelProcessingRequest)(nil), "workflow.CancelProcessingRequest")
	proto.RegisterType((*CancelProcessingResponse)(nil), "workflow.CancelProcessingResponse")
	proto.RegisterType((*StartProcessingRequest)(nil), "workflow.StartProcessingRequest")
	proto.RegisterMapType((map[string]string)(nil), "workflow.StartProcessingRequest.VariablesEntry")
	proto.RegisterType((*FormActionRequest)(nil), "workflow.FormActionRequest")
	proto.RegisterMapType((map[string]string)(nil), "workflow.FormActionRequest.VariablesEntry")
	proto.RegisterType((*ErrorForm)(nil), "workflow.ErrorForm")
	proto.RegisterType((*Form)(nil), "workflow.Form")
}

func init() { proto.RegisterFile("workflow/processing.proto", fileDescriptor_00c1dbb24fadcb1c) }

var fileDescriptor_00c1dbb24fadcb1c = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x9f, 0x9b, 0xb4, 0x34, 0x6f, 0x50, 0x86, 0x61, 0x23, 0x74, 0x97, 0x10, 0x71, 0xc8, 0x38,
	0x24, 0x52, 0x11, 0x12, 0x02, 0x2e, 0x80, 0x3a, 0xd1, 0x03, 0x12, 0xf2, 0x24, 0x0e, 0x70, 0x40,
	0x6e, 0xe2, 0x75, 0xd6, 0x92, 0x38, 0xd8, 0x6e, 0xab, 0x7d, 0x15, 0xbe, 0x1c, 0x7c, 0x0c, 0x8e,
	0x28, 0x6e, 0xbd, 0xb0, 0xa5, 0x2b, 0xa7, 0xdd, 0xfc, 0xfc, 0x7e, 0xbf, 0xe7, 0xf7, 0x7b, 0x7f,
	0x0c, 0x4f, 0x96, 0x42, 0x9e, 0x9f, 0xe6, 0x62, 0x99, 0x54, 0x52, 0xa4, 0x4c, 0x29, 0x5e, 0xce,
	0xe2, 0x4a, 0x0a, 0x2d, 0x70, 0xdf, 0xba, 0xc2, 0x23, 0x78, 0xfc, 0x81, 0x96, 0x29, 0xcb, 0x3f,
	0x5f, 0x62, 0x08, 0xfb, 0x31, 0x67, 0x4a, 0xe3, 0x01, 0x74, 0x78, 0xe6, 0xa3, 0x00, 0x45, 0x1e,
	0xe9, 0xf0, 0x2c, 0x1c, 0x82, 0xdf, 0x86, 0xaa, 0x4a, 0x94, 0x8a, 0x85, 0xbf, 0x10, 0x1c, 0x9c,
	0x68, 0x2a, 0x75, 0x3b, 0xcc, 0x21, 0x78, 0x2a, 0x3d, 0x63, 0x05, 0xfd, 0xbe, 0x8e, 0x76, 0x8f,
	0xf4, 0x57, 0x17, 0x93, 0xac, 0x76, 0x66, 0xa2, 0xa0, 0xbc, 0xac, 0x9d, 0x9d, 0x00, 0x45, 0x0e,
	0xe9, 0xaf, 0x2e, 0x26, 0x19, 0xfe, 0x04, 0xde, 0x82, 0x4a, 0x4e, 0xa7, 0x39, 0x53, 0xbe, 0x13,
	0x38, 0xd1, 0xee, 0x28, 0x89, 0x6d, 0xe6, 0xf1, 0xe6, 0xe7, 0xe2, 0x2f, 0x96, 0x31, 0x2e, 0xb5,
	0xbc, 0x20, 0x4d, 0x84, 0xe1, 0x5b, 0x18, 0x5c, 0x75, 0xe2, 0x3d, 0x70, 0xce, 0xd9, 0xc5, 0x5a,
	0x62, 0x7d, 0xc4, 0x8f, 0xa0, 0xbb, 0xa0, 0xf9, 0x9c, 0x99, 0x5c, 0x3c, 0xb2, 0x32, 0x5e, 0x77,
	0x5e, 0xa1, 0xf0, 0x37, 0x82, 0x07, 0xc7, 0x42, 0x16, 0xef, 0x52, 0xcd, 0x45, 0x79, 0x43, 0x8d,
	0xb6, 0xeb, 0x39, 0x80, 0x1e, 0x35, 0x6c, 0xdf, 0x31, 0x84, 0xb5, 0x85, 0x3f, 0xfe, 0xab, 0xd3,
	0x35, 0x3a, 0x9f, 0x37, 0x3a, 0x5b, 0x8f, 0xde, 0x9a, 0xc4, 0x97, 0xe0, 0x8d, 0xa5, 0x14, 0xb2,
	0x7e, 0xb1, 0xa5, 0xcc, 0x87, 0x3b, 0x05, 0x53, 0x8a, 0xce, 0x2c, 0xd1, 0x9a, 0xe1, 0x4f, 0x04,
	0xee, 0x46, 0xca, 0x3e, 0xf4, 0x68, 0x55, 0xd9, 0x4a, 0x78, 0xa4, 0x4b, 0xab, 0x6a, 0x92, 0x61,
	0x0c, 0xee, 0xa9, 0x90, 0x85, 0x29, 0xc2, 0x5d, 0x62, 0xce, 0x75, 0x74, 0xcd, 0x0b, 0x26, 0xe6,
	0xda, 0x77, 0x03, 0x14, 0xb9, 0xc4, 0x9a, 0x35, 0x5a, 0x69, 0x51, 0xf9, 0xdd, 0x00, 0x45, 0x7d,
	0x62, 0xce, 0xf8, 0x08, 0xba, 0xac, 0x4e, 0xd4, 0xef, 0x05, 0x28, 0xda, 0x1d, 0x3d, 0x6c, 0x8a,
	0x75, 0x99, 0x3f, 0x59, 0x21, 0x46, 0x7f, 0x10, 0xec, 0x1f, 0xe7, 0x62, 0xd9, 0x0c, 0xca, 0x09,
	0x93, 0x0b, 0x9e, 0x32, 0x3c, 0x86, 0xfb, 0xd7, 0x46, 0x08, 0x07, 0xff, 0x9b, 0xae, 0xe1, 0xe0,
	0x6a, 0x5f, 0xc2, 0x1d, 0xfc, 0x06, 0xa0, 0xe9, 0x10, 0x3e, 0xdc, 0xd2, 0xb7, 0x0d, 0xe4, 0x6f,
	0xb0, 0x77, 0x7d, 0xa5, 0xf0, 0xd3, 0x06, 0x75, 0xc3, 0x66, 0x0e, 0xc3, 0x6d, 0x90, 0xf5, 0x46,
	0xee, 0xbc, 0x7f, 0xf6, 0x35, 0x9c, 0x71, 0x7d, 0x36, 0x9f, 0xc6, 0xa9, 0x28, 0x92, 0x25, 0x9b,
	0x72, 0xcd, 0xf2, 0xc4, 0x7c, 0x00, 0x2a, 0xb1, 0x01, 0xa6, 0x3d, 0x73, 0xf1, 0xe2, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x49, 0xcb, 0xd6, 0x5d, 0x2e, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlowProcessingServiceClient is the client API for FlowProcessingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowProcessingServiceClient interface {
	StartProcessing(ctx context.Context, in *StartProcessingRequest, opts ...grpc.CallOption) (*Form, error)
	FormAction(ctx context.Context, in *FormActionRequest, opts ...grpc.CallOption) (*Form, error)
	CancelProcessing(ctx context.Context, in *CancelProcessingRequest, opts ...grpc.CallOption) (*CancelProcessingResponse, error)
}

type flowProcessingServiceClient struct {
	cc *grpc.ClientConn
}

func NewFlowProcessingServiceClient(cc *grpc.ClientConn) FlowProcessingServiceClient {
	return &flowProcessingServiceClient{cc}
}

func (c *flowProcessingServiceClient) StartProcessing(ctx context.Context, in *StartProcessingRequest, opts ...grpc.CallOption) (*Form, error) {
	out := new(Form)
	err := c.cc.Invoke(ctx, "/workflow.FlowProcessingService/StartProcessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowProcessingServiceClient) FormAction(ctx context.Context, in *FormActionRequest, opts ...grpc.CallOption) (*Form, error) {
	out := new(Form)
	err := c.cc.Invoke(ctx, "/workflow.FlowProcessingService/FormAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flowProcessingServiceClient) CancelProcessing(ctx context.Context, in *CancelProcessingRequest, opts ...grpc.CallOption) (*CancelProcessingResponse, error) {
	out := new(CancelProcessingResponse)
	err := c.cc.Invoke(ctx, "/workflow.FlowProcessingService/CancelProcessing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlowProcessingServiceServer is the server API for FlowProcessingService service.
type FlowProcessingServiceServer interface {
	StartProcessing(context.Context, *StartProcessingRequest) (*Form, error)
	FormAction(context.Context, *FormActionRequest) (*Form, error)
	CancelProcessing(context.Context, *CancelProcessingRequest) (*CancelProcessingResponse, error)
}

// UnimplementedFlowProcessingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlowProcessingServiceServer struct {
}

func (*UnimplementedFlowProcessingServiceServer) StartProcessing(ctx context.Context, req *StartProcessingRequest) (*Form, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartProcessing not implemented")
}
func (*UnimplementedFlowProcessingServiceServer) FormAction(ctx context.Context, req *FormActionRequest) (*Form, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FormAction not implemented")
}
func (*UnimplementedFlowProcessingServiceServer) CancelProcessing(ctx context.Context, req *CancelProcessingRequest) (*CancelProcessingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelProcessing not implemented")
}

func RegisterFlowProcessingServiceServer(s *grpc.Server, srv FlowProcessingServiceServer) {
	s.RegisterService(&_FlowProcessingService_serviceDesc, srv)
}

func _FlowProcessingService_StartProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartProcessingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowProcessingServiceServer).StartProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.FlowProcessingService/StartProcessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowProcessingServiceServer).StartProcessing(ctx, req.(*StartProcessingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowProcessingService_FormAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowProcessingServiceServer).FormAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.FlowProcessingService/FormAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowProcessingServiceServer).FormAction(ctx, req.(*FormActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FlowProcessingService_CancelProcessing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelProcessingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowProcessingServiceServer).CancelProcessing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.FlowProcessingService/CancelProcessing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowProcessingServiceServer).CancelProcessing(ctx, req.(*CancelProcessingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlowProcessingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "workflow.FlowProcessingService",
	HandlerType: (*FlowProcessingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartProcessing",
			Handler:    _FlowProcessingService_StartProcessing_Handler,
		},
		{
			MethodName: "FormAction",
			Handler:    _FlowProcessingService_FormAction_Handler,
		},
		{
			MethodName: "CancelProcessing",
			Handler:    _FlowProcessingService_CancelProcessing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workflow/processing.proto",
}
