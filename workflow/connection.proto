
syntax = "proto3";

package workflow;

option go_package = "github.com/webitel/protos/workflow";

service FlowService {
    rpc DistributeAttempt(DistributeAttemptRequest) returns (DistributeAttemptResponse) {}
    rpc ResultAttempt(ResultAttemptRequest) returns (ResultAttemptResponse) {}

    rpc StartFlow(StartFlowRequest) returns (StartFlowResponse) {}
    rpc StartSyncFlow(StartSyncFlowRequest) returns (StartSyncFlowResponse) {}
}

message FlowScope {
    string channel = 1;
    string id = 2;
}

message StartSyncFlowRequest {
    uint32 schema_id = 1;
    int64 domain_id = 2;
    uint64 timeout_sec = 3;

    map<string,string> variables = 4;
    FlowScope scope = 5;
}

message StartSyncFlowResponse {
    string id = 1;
}

message ResultAttemptRequest {
    int32 schema_id = 1;
    int64 domain_id = 2;

    string cause = 3;

    map<string,string> variables = 4;
    FlowScope scope = 5;
}

message ResultAttemptResponse {
    message Success {

    }

    message Abandoned {
        string status = 1;
        uint32 max_attempts = 2;
        uint32 wait_between_retries = 3;
        bool exclude_current_communication = 4;
        bool redial = 5;
        int32 agent_id = 6;
        bool display = 7;
        string description = 8;
    }

    message Retry {
        bool next_resource = 1;
        int32 sleep = 2;
        int32 resource_id = 3;
    }

    oneof result {
        Success success = 1;
        Abandoned abandoned = 2;
        Retry retry = 5;
    }

    map<string,string> variables = 3;
    string id = 4;
}

message StartFlowRequest {
    uint32 schema_id = 1;
    int64 domain_id = 2;

    map<string,string> variables = 3;
    FlowScope scope = 4;
}

message StartFlowResponse {
    string id = 1;
}

message DistributeAttemptRequest {
    int32 schema_id = 1;
    int64 domain_id = 2;

    string destination = 3;
    string display = 4;

    map<string,string> variables = 5;

}

message DistributeAttemptResponse {
    message Cancel {
        string description = 1;
        uint32 next_distribute_sec = 2;
        bool stop = 3;
    }

    message Confirm {
        string destination = 1;
        string display = 2;
    }

    oneof result {
        Cancel cancel = 1;
        Confirm confirm = 2;
    }

    map<string,string> variables = 3;
    string id = 4;
}
