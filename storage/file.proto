syntax = "proto3";

option go_package = "github.com/webitel/protos/storage";

package storage;

import "const.proto";
import "google/api/annotations.proto";

service FileService {
    rpc UploadFile (stream UploadFileRequest) returns (UploadFileResponse) {}
    rpc SafeUploadFile (stream SafeUploadFileRequest) returns (stream SafeUploadFileResponse){}
    rpc DownloadFile (DownloadFileRequest) returns (stream StreamFile) {}
    rpc UploadFileUrl (UploadFileUrlRequest) returns (UploadFileUrlResponse) {}
    rpc GenerateFileLink (GenerateFileLinkRequest) returns (GenerateFileLinkResponse) {}
    rpc BulkGenerateFileLink (BulkGenerateFileLinkRequest) returns (BulkGenerateFileLinkResponse) {}

    rpc DeleteFiles (DeleteFilesRequest) returns (DeleteFilesResponse) {
        option (google.api.http) = {
            delete: "/storage/file"
            body: "*"
        };
    }

    rpc SearchFiles(SearchFilesRequest) returns (ListFile) {
        option (google.api.http) = {
            get: "/storage/file"
        };
    }

    rpc SearchScreenRecordings (SearchScreenRecordingsRequest) returns (ListFile) {
        option (google.api.http) = {
            get: "/storage/users/{user_id}/screenrecordings"
        };
    }
}

message SearchScreenRecordingsRequest {
    int64 user_id = 1;
    int32 page = 2;
    int32 size = 3;
    string q = 4;

    string sort = 5;
    repeated string fields = 6;

    repeated int64 id = 7;
    engine.FilterBetween uploaded_at = 8;
    repeated string reference_id = 9;
    engine.FilterBetween retention_until = 10;
}

message ICEServers {
    repeated string urls = 1;
    string username = 2;
    int32 credentialType = 3;
    bytes credential = 4;
}

message UploadP2PVideoRequest {
    string sdp_offer = 1;
    string name = 2;
    string uuid = 3;
    repeated ICEServers ice_servers = 4;
}

message UploadP2PVideoResponse {
    string sdp_answer = 1;
    string id = 2;
}

message StopP2PVideoRequest {
    string id = 1;
}

message StopP2PVideoResponse {
}

message RenegotiateP2PVideoRequest {
    string id = 1;
    string sdp_offer = 2;
}

message RenegotiateP2PVideoResponse {
    string sdp_answer = 1;
}

message BulkGenerateFileLinkRequest {
    repeated GenerateFileLinkRequest files = 1;
}

message BulkGenerateFileLinkResponse {
    repeated GenerateFileLinkResponse links = 1;
}

message SearchFilesRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;

    string sort = 4;
    repeated string fields = 5;

    repeated int64 id = 6;
    engine.FilterBetween uploaded_at = 7;
    repeated int64 uploaded_by = 8;
    repeated string reference_id = 9;
    repeated UploadFileChannel channel = 10;
    engine.FilterBetween retention_until = 11;
}

message ListFile {
    bool next = 1;
    repeated File items = 2;
}

message File {
    int64 id = 1;
    int64 uploaded_at = 2;
    engine.Lookup uploaded_by = 3;
    string name = 4;
    string mime_type = 5;
    string reference_id = 6;
    int64 size = 7;
    string sha256sum = 8;
    Thumbnail thumbnail = 9;
    string view_name = 10;
    UploadFileChannel channel = 11;
    int64 retention_until = 12;

    string uuid = 20; // deprecated use reference_id
}

enum UploadStatusCode {
    Unknown = 0;
    Ok = 1;
    Failed = 2;
}

enum UploadFileChannel {
    UnknownChannel = 0;
    ChatChannel = 1;
    MailChannel = 2;
    CallChannel = 3;
    LogChannel = 4;
    MediaChannel = 5;
    KnowledgebaseChannel = 6;
    CasesChannel = 7;
    ScreenshotChannel = 8;
    ScreenSharingChannel = 9;
}

message Thumbnail {
    string mime_type = 1;
    int64 size = 2;
    string scale = 3;
}

message GenerateFileLinkRequest {
    int64 domain_id = 1;
    int64 file_id = 2;
    string source = 3;
    string action = 4;
    map<string, string> query = 5;
    bool metadata = 6;
}

message GenerateFileLinkResponse {
    message Metadata {
        int64 id = 1;
        string name = 2;
        string mime_type = 3;
        string uuid = 4;
        int64 size = 5;
    }

    string url = 1; // deprecated
    string base_url = 2;
    Metadata metadata = 3;
}

message DownloadFileRequest {
    int64 id = 1;
    int64 domain_id = 2;
    bool metadata = 3;
    int64 offset = 4;
    int64 buffer_size = 5;
    bool fetch_thumbnail = 6;
}

message StreamFile {

    message Metadata {
        int64 id = 1;
        string name = 2;
        string mime_type = 3;
        string uuid = 4;
        int64 size = 5;
        string sha256sum = 6;
        Thumbnail thumbnail = 7;
    }

    oneof data {
        Metadata metadata = 1;
        bytes chunk = 2;
    };

}

message DeleteFilesRequest {
    repeated int64 id = 1;
}

message DeleteFilesResponse {

}

message UploadFileUrlRequest {
    int64 domain_id = 1;
    string uuid = 2;
    string name = 3;
    string url = 4;
    string mime = 5;
    UploadFileChannel channel = 6;
    bool generate_thumbnail = 7;
}

message UploadFileUrlResponse {
    int64 id = 1;
    string url = 2;
    string mime = 4;
    int64 size = 5;
    UploadStatusCode code = 6;
    string sha256sum = 7;
    Thumbnail thumbnail = 8;
    string server = 9;
}

message UploadFileRequest {

    message Metadata {
        int64 domain_id = 1;
        string name = 2;
        string mime_type = 3;
        string uuid = 4;
        bool stream_response = 5;
        int64 profile_id = 6;
        UploadFileChannel channel = 7;
        bool generate_thumbnail = 8;
        int64 uploaded_by = 9;
        int64 created_at = 10;
    }

    oneof data {
        Metadata metadata = 1;
        bytes chunk = 2;
    };

}

message SafeUploadCancelRequest {
    string upload_id = 1;
}

message SafeUploadCancelResponse {

}

message SafeUploadFileRequest {

    message Metadata {
        int64 domain_id = 1;
        string name = 2;
        string mime_type = 3;
        string uuid = 4;
        bool stream_response = 5;
        int64 profile_id = 6;
        bool progress = 7;
        UploadFileChannel channel = 8;
        bool generate_thumbnail = 9;
    }

    oneof data {
        string upload_id = 1;
        Metadata metadata = 2;
        bytes chunk = 3;
        bool cancel = 4;
    };

}

message SafeUploadFileResponse {

    message Metadata {
        int64 file_id = 1;
        string file_url = 2;
        int64 size = 3;
        UploadStatusCode code = 4;
        string server = 5;
        string sha256sum = 6;
        string name = 7;
        string mime_type = 8;
        string uuid = 9;
        Thumbnail thumbnail = 10;
    }

    message Part {
        string upload_id = 1;
        int64 size = 2;
    }

    message Progress {
        int64 uploaded = 1;
    }

    oneof data {
        Part part = 1;
        Metadata metadata = 2;
        Progress progress = 3;
    };
}

message UploadFileResponse {
    int64 file_id = 1;
    string file_url = 2;
    int64 size = 3;
    UploadStatusCode code = 4;
    string server = 5;
    string sha256sum = 6;
    Thumbnail thumbnail = 7;
}