syntax = "proto3";
package webitel.cases;

option go_package = "github.com/webitel/cases/api/cases;cases";

import "general.proto";
import "google/api/visibility.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/webitel/option.proto";  // Added import

// SLACondition message represents an SLACondition entity with metadata
message SLACondition {
  // Unique identifier of the SLACondition
  int64 id = 1;
  // Name of the SLACondition - required
  string name = 2;
  // Priorities associated with the SLACondition - fetched as Lookup entities [ Priority name + ID ]
  repeated general.Lookup priorities = 3;
  // Reaction time - required
  int64 reaction_time = 4;
  // Resolution time - required
  int64 resolution_time = 5;
  // SLA ID associated with the SLACondition
  int64 sla_id = 6;
  // CreatedAt timestamp of the SLACondition
  int64 created_at = 20;
  // UpdatedAt timestamp of the SLACondition
  int64 updated_at = 21;
  // CreatedBy user of the SLACondition
  general.Lookup created_by = 22;
  // UpdatedBy user of the SLACondition
  general.Lookup updated_by = 23;
}

// InputSLACondition message for inputting SLACondition data
message InputSLACondition {
  string name = 2;
  // List of priority IDs for creation
  repeated general.Lookup priorities = 3;
  int64 reaction_time = 4;
  int64 resolution_time = 5;
}

// SLAConditionList message contains a list of SLACondition items with pagination
message SLAConditionList {
  int32 page = 1;
  bool next = 2;
  repeated SLACondition items = 3;
}

// CreateSLAConditionRequest message for creating a new SLACondition
message CreateSLAConditionRequest {
    InputSLACondition input = 1;
    int64 sla_id = 2;
    repeated string fields = 3;
}

// UpdateSLAConditionRequest message for updating an existing SLACondition
message UpdateSLAConditionRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };

  int64 id = 1;
  int64 sla_id = 2;
  InputSLACondition input = 3;
  repeated string fields = 4;

  // ---- JSON PATCH fields mask ----
  // List of JPath fields specified in body(input).
  repeated string x_json_mask = 5
  [(google.api.field_visibility) = {
    restriction: "PREVIEW" // "INTERNAL"
  },
  (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true
    pattern: "^$"
  }];
}

// DeleteSLAConditionRequest message for deleting an existing SLACondition
message DeleteSLAConditionRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["sla_condition_id"]
    }
  };
  int64 sla_id = 1;
  int64 id = 2;
}

// ListSLAConditionRequest message for listing or searching SLAConditions
message ListSLAConditionRequest {
  // Page number of result dataset records. offset = (page*size)
  int32 page = 1;
  // Size count of records on result page. limit = (size++)
  int32 size = 2;
  // Fields to be retrieved as a result.
  repeated string fields = 3;
  // Sort the result according to fields.
  string sort = 4;
  // Filter by unique IDs.
  repeated int64 id = 5;
  // Search query string for filtering by name. Supports:
  // - Wildcards (*) for substring matching
  // - Placeholder (?) for single character substitution
  // - Exact match for full names
  string q = 6;
  // Filter by SLACondition Id.
  int64 sla_condition_id = 7;
  //Filter by SLA Id
  int64 sla_id = 8;
  //filter by priority id
  int64 priority_id = 9;
}

// LocateSLAConditionRequest message for locating a specific SLACondition by ID
message LocateSLAConditionRequest {
  // Unique identifier of the SLACondition
  int64 sla_id = 1;
  // Unique identifier of the SLACondition
  int64 id = 2;
  // Fields to be retrieved as a result.
  repeated string fields = 3;
}

// LocateSLAConditionResponse message contains a single SLACondition entity
message LocateSLAConditionResponse {
  SLACondition sla_condition = 1;
}

// SLAConditions service definition with RPC methods for managing SLAConditions
service SLAConditions {
  option (option.objclass) = "dictionaries";  // Added option for the service

  // RPC method to list or search SLAConditions
  rpc ListSLAConditions(ListSLAConditionRequest) returns (SLAConditionList) {
    option (google.api.http) = {
      get: "/slas/{sla_id}/sla_conditions"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Retrieve a list of SLAConditions or search SLACondition conditions"
    };
    option (option.access) = ACTION_READ;  // Added option for method access
  }

  // RPC method to create a new SLACondition
  rpc CreateSLACondition(CreateSLAConditionRequest) returns (SLACondition) {
    option (google.api.http) = {
      post: "/slas/{sla_id}/sla_condition"
      body: "input"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a new SLACondition"
    };
    option (option.access) = ACTION_UPDATE;  // Added option for method access
  }

  // RPC method to update an existing SLACondition
  rpc UpdateSLACondition(UpdateSLAConditionRequest) returns (SLACondition) {
    option (google.api.http) = {
      put: "/slas/{sla_id}/sla_condition/{id}"
      body: "input"
      additional_bindings {
        patch: "/slas/{sla_id}/sla_condition/{id}"
        body: "input"
      }
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update an existing SLACondition"
    };
    option (option.access) = ACTION_UPDATE;  // Added option for method access
  }

  // RPC method to delete an existing SLACondition
  rpc DeleteSLACondition(DeleteSLAConditionRequest) returns (SLACondition) {
    option (google.api.http) = {
      delete: "/slas/{sla_id}/sla_condition/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete an SLACondition"
    };
    option (option.access) = ACTION_UPDATE;  // Added option for method access
  }

  // RPC method to locate a specific SLACondition by ID
  rpc LocateSLACondition(LocateSLAConditionRequest) returns (LocateSLAConditionResponse) {
    option (google.api.http) = {
      get: "/slas/{sla_id}/sla_condition/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Locate an SLACondition by ID"
    };
    option (option.access) = ACTION_READ;  // Added option for method access
  }
}
