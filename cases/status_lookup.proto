syntax = "proto3";
package cases;

import "cases_import.proto";

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


// StatusLookup message represents a status lookup entity with metadata
message StatusLookup {
  string id = 1;
  string name = 2;
  string description = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
  Lookup created_by = 7;
  Lookup updated_by = 8;
}

// StatusLookupList message contains a list of StatusLookup items with pagination
message StatusLookupList {
  int32 page = 1;
  bool next = 2;
  repeated StatusLookup items = 3;
}

// CreateStatusLookupRequest message for creating a new status lookup
message CreateStatusLookupRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["name"]
    }
  };

  string name = 1;
  string description = 3;
}

// UpdateStatusLookupRequest message for updating an existing status lookup
message UpdateStatusLookupRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };

  string id = 1;
  string name = 2;
  string description = 4;
}

// DeleteStatusLookupRequest message for deleting an existing status lookup
message DeleteStatusLookupRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };

  string id = 1;
}

// ListStatusLookupsRequest message for listing or searching status lookups
message ListStatusLookupsRequest {
  // Page number of result dataset records. offset = (page*size)
  int32 page = 1;

  // Size count of records on result page. limit = (size++)
  int32 size = 2;

  // Fields to be retrieved as a result.
  repeated string fields = 3;

  // Sort the result according to fields.
  repeated string sort = 4;

  // Filter by unique IDs.
  repeated string id = 5;

  // Search term: lookup name;
  // `?` - matches any one character
  // `*` - matches 0 or more characters
  string q = 6;

  // Filter by lookup name.
  string name = 7;
}

// LocateStatusLookupRequest message for locating a specific status lookup by ID
message LocateStatusLookupRequest {
  string id = 1;
  repeated string fields = 2;
}

// LocateStatusLookupResponse message contains a single status lookup entity
message LocateStatusLookupResponse {
  StatusLookup group = 1;
}

// StatusLookups service definition with RPC methods for managing status lookups
service StatusLookups {
  // RPC method to list or search status lookups
  rpc ListStatusLookups(ListStatusLookupsRequest) returns (StatusLookupList) {
    option (google.api.http) = {
      get: "/cases/statusLookups"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Retrieve a list of status lookups or search status lookups"
    };
  }

  // RPC method to create a new status lookup
  rpc CreateStatusLookup(CreateStatusLookupRequest) returns (StatusLookup) {
    option (google.api.http) = {
      post: "/cases/statusLookups"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a new status lookup"
    };
  }

  // RPC method to update an existing status lookup
  rpc UpdateStatusLookup(UpdateStatusLookupRequest) returns (StatusLookup) {
    option (google.api.http) = {
      put: "/cases/statusLookups/{id}"
      body: "*"
      additional_bindings {
        patch: "/cases/statusLookups/{id}"
        body: "*"
      }
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update an existing status lookup"
    };
  }

  // RPC method to delete an existing status lookup
  rpc DeleteStatusLookup(DeleteStatusLookupRequest) returns (StatusLookup) {
    option (google.api.http) = {
      delete: "/cases/statusLookups/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a status lookup"
    };
  }

  // RPC method to locate a specific status lookup by ID
  rpc LocateStatusLookup(LocateStatusLookupRequest) returns (LocateStatusLookupResponse) {
    option (google.api.http) = {
      get: "/cases/statusLookups/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Locate a status lookup by ID"
    };
  }
}
