syntax = "proto3";

package webitel.cases;
option go_package = "github.com/webitel/cases/api/cases;cases";

import "general.proto";
import "google/api/annotations.proto";
import "proto/webitel/option.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


// Contains a list of case files with pagination.
message CaseFileList {
  // Current page number.
  int64 page = 1;

  // Indicator if there is a next page.
  bool next = 2;

  // List of case files.
  repeated File items = 3;
}

// Metadata for a file associated with a case.
message File {
  // Storage file ID.
  int64 id = 1;

  // Creator of the file.
  general.ExtendedLookup created_by = 2;

  // Creation timestamp in Unix milliseconds.
  int64 created_at = 3;

  // File size in bytes.
  int64 size = 4;

  // MIME type of the file.
  string mime = 5;

  // File name.
  string name = 6;


  string url = 8;

  string source = 9;
}

// Request message for deleting a file.
message DeleteFileRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };

  // The unique ID of the file to delete.
  int64 id = 1;

  string case_etag = 2;
}


// Service for managing files associated with cases.
service CaseFiles {
  option (option.objclass) = "cases";

  // Retrieves a list of files associated with a specific case.
  rpc ListFiles(ListFilesRequest) returns (CaseFileList) {
    option (option.access) = ACTION_READ;
    option (google.api.http) = {
      get: "/cases/{case_etag}/files"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Retrieve a list of files associated with a case",
    };
  }

    // RPC method to delete a file.
    rpc DeleteFile(DeleteFileRequest) returns (File) {
      option (google.api.http) = {
        delete: "/cases/{case_etag}/files/{id}"
      };

      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Delete a file"
      };
      option (option.access) = ACTION_UPDATE;  // Added access option for delete action
    }
}

// Request message for listing files associated with a case.
message ListFilesRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["case_etag"]
    }
  };

  // ID of the case to fetch files for (required).
  string case_etag = 1;

  // The page number to retrieve.
  int32 page = 2;

  // Number of items per page.
  int32 size = 3;

  // Search term.
  string q = 4;

  // Fields to include in the response.
  repeated string fields = 5;

  // Array of requested id.
  repeated string ids = 6;

  // Sorting
  string sort = 7;

}
