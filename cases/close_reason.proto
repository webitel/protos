syntax = "proto3";
package webitel.cases;

option go_package = "github.com/webitel/cases/api/cases;cases";

import "general.proto";
import "google/api/visibility.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/webitel/option.proto";

// CloseReason message represents a close reason entity with metadata
message CloseReason {
  // Unique identifier of the close reason
  int64 id = 1;
  // Name of the close reason
  string name = 2;
  // Description of the close reason
  string description = 3;
  // Close Reason Group ID of the close reason
  int64 close_reason_group_id = 6;
  // CreatedAt timestamp of the close reason
  int64 created_at = 20;
  // UpdatedAt timestamp of the close reason
  int64 updated_at = 21;
  // CreatedBy user of the close reason
  general.Lookup created_by = 22;
  // UpdatedBy user of the close reason
  general.Lookup updated_by = 23;
}

// InputCloseReason message for inputting close reason data
message InputCloseReason {
  // Name of the close reason
  string name = 2;
  // Description of the close reason
  string description = 3;
}

// CloseReasonList message contains a list of CloseReason items with pagination
message CloseReasonList {
  int32 page = 1;
  bool next = 2;
  repeated CloseReason items = 3;
}

// CreateCloseReasonRequest message for creating a new close reason
message CreateCloseReasonRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["name", "lookup_id"]
    }
  };

  int64 close_reason_group_id = 1;
  string name = 2;
  string description = 3;
}

// UpdateCloseReasonRequest message for updating an existing close reason
message UpdateCloseReasonRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["id"]
    }
  };

  int64 close_reason_group_id = 1;
  int64 id = 2;
  InputCloseReason input = 3;

  // JSON PATCH fields mask.
  // List of JPath fields specified in body(input).
  repeated string x_json_mask = 4
  [(google.api.field_visibility) = {
    restriction: "PREVIEW" // "INTERNAL"
  },
  (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true
    pattern: "^$"
  }];
}

// DeleteCloseReasonRequest message for deleting an existing close reason
message DeleteCloseReasonRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["close_reason_group_id"]
    }
  };
  int64 id = 1;
  int64 close_reason_group_id = 2;
}

// ListCloseReasonRequest message for listing or searching close reasons
message ListCloseReasonRequest {
  // Page number of result dataset records. offset = (page*size)
  int32 page = 1;
  // Size count of records on result page. limit = (size++)
  int32 size = 2;
  // Fields to be retrieved as a result.
  repeated string fields = 3;
  // Sort the result according to fields.
  string sort = 4;
  repeated int64 id = 5;
  // Search query string for filtering by name. Supports:
  // - Wildcards (*) for substring matching
  // - Placeholder (?) for single character substitution
  // - Exact match for full names
  string q = 6;
  // Close reason group ID filter
  int64 close_reason_group_id = 7;
}

// LocateCloseReasonRequest message for locating a specific close reason by ID
message LocateCloseReasonRequest {
  int64 id = 1;
  int64 close_reason_group_id = 2;
  repeated string fields = 3;
}

// LocateCloseReasonResponse message contains a single close reason entity
message LocateCloseReasonResponse {
  CloseReason close_reason = 1;
}

// CloseReasons service definition with RPC methods for managing close reasons
service CloseReasons {
  option (option.objclass) = "dictionaries";
  // RPC method to list or search close reasons
  rpc ListCloseReasons(ListCloseReasonRequest) returns (CloseReasonList) {
    option (google.api.http) = {
      get: "/close_reason_groups/{close_reason_group_id}/close_reasons"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Retrieve a list of close reasons or search close reasons"
    };

    option (option.access) = ACTION_READ;
  }

  // RPC method to create a new close reason
  rpc CreateCloseReason(CreateCloseReasonRequest) returns (CloseReason) {
    option (google.api.http) = {
      post: "/close_reason_groups/{close_reason_group_id}/close_reasons"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a new close reason"
    };

    option (option.access) = ACTION_UPDATE;
  }

  // RPC method to update an existing close reason
  rpc UpdateCloseReason(UpdateCloseReasonRequest) returns (CloseReason) {
    option (google.api.http) = {
      put: "/close_reason_groups/{close_reason_group_id}/close_reasons/{id}"
      body: "input"
      additional_bindings {
        patch: "/close_reason_groups/{close_reason_group_id}/close_reasons/{id}"
        body: "input"
      }
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update an existing close reason"
    };

    option (option.access) = ACTION_UPDATE;
  }

  // RPC method to delete an existing close reason
  rpc DeleteCloseReason(DeleteCloseReasonRequest) returns (CloseReason) {
    option (google.api.http) = {
      delete: "/close_reason_groups/{close_reason_group_id}/close_reasons/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a close reason"
    };

    option (option.access) = ACTION_UPDATE;
  }

  // RPC method to locate a specific close reason by ID
  rpc LocateCloseReason(LocateCloseReasonRequest) returns (LocateCloseReasonResponse) {
    option (google.api.http) = {
      get: "/close_reason_groups/{close_reason_group_id}/close_reasons/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Locate a close reason by ID"
    };

    option (option.access) = ACTION_READ;
  }
}
