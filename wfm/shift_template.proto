syntax = "proto3";

package wfm;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "proto/webitel/option.proto";
import "lookup.proto";

option go_package = "github.com/webitel/protos/wfm;api";

service ShiftTemplateService {
  option (option.objclass) = "shift_templates";
  rpc CreateShiftTemplate(CreateShiftTemplateRequest) returns (CreateShiftTemplateResponse) {
    option (option.access) = ACTION_CREATE;
    option (google.api.http) = {
      post: "/wfm/lookups/shift_templates"
      body: "*"
    };
  }

  rpc ReadShiftTemplate(ReadShiftTemplateRequest) returns (ReadShiftTemplateResponse) {
    option (option.access) = ACTION_READ;
    option (google.api.http) = {get: "/wfm/lookups/shift_templates/{id}"};
  }

  rpc SearchShiftTemplate(SearchShiftTemplateRequest) returns (SearchShiftTemplateResponse) {
    option (option.access) = ACTION_READ;
    option (google.api.http) = {get: "/wfm/lookups/shift_templates"};
  }

  // UpdateShiftTemplate updates a shift template with a list times.
  // Update existing time, create that not exists in database and delete that not exists in the list.
  rpc UpdateShiftTemplate(UpdateShiftTemplateRequest) returns (UpdateShiftTemplateResponse) {
    option (option.access) = ACTION_UPDATE;
    option (google.api.http) = {
      put: "/wfm/lookups/shift_templates/{item.id}"
      body: "*"
    };
  }

  rpc DeleteShiftTemplate(DeleteShiftTemplateRequest) returns (DeleteShiftTemplateResponse) {
    option (option.access) = ACTION_DELETE;
    option (google.api.http) = {delete: "/wfm/lookups/shift_templates/{id}"};
  }
}

message CreateShiftTemplateRequest {
  ShiftTemplate item = 1 [(buf.validate.field).required = true];
}

message CreateShiftTemplateResponse {
  ShiftTemplate item = 1;
}

message ReadShiftTemplateRequest {
  int64 id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gt = 0
  ];

  repeated string fields = 2 [(buf.validate.field).repeated = {
    unique: true,
    items {
      string {
        min_len: 1,
        in: [
          'id',
          'domain_id',
          'name',
          'description',
          'times',
          'created_at',
          'created_by',
          'updated_at',
          'updated_by'
        ]
      }
    }
  }];
}

message ReadShiftTemplateResponse {
  ShiftTemplate item = 1;
}

message SearchShiftTemplateRequest {
  optional string q = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 250
  ];

  optional int32 page = 2 [(buf.validate.field).int32.gt = 0];
  optional int32 size = 3 [(buf.validate.field).int32.gt = 0];

  optional string sort = 4 [(buf.validate.field).string = {
    in: [
      'id',
      'domain_id',
      'name',
      'description',
      'times',
      'created_at',
      'created_by',
      'updated_at',
      'updated_by'
    ]
  }];

  repeated string fields = 5 [(buf.validate.field).repeated = {
    unique: true,
    items {
      string {
        min_len: 1,
        in: [
          'id',
          'domain_id',
          'name',
          'description',
          'times',
          'created_at',
          'created_by',
          'updated_at',
          'updated_by'
        ]
      }
    }
  }];
}

message SearchShiftTemplateResponse {
  repeated ShiftTemplate items = 1;
  bool next = 2;
}

message UpdateShiftTemplateRequest {
  ShiftTemplate item = 1 [(buf.validate.field).required = true];
}

message UpdateShiftTemplateResponse {
  ShiftTemplate item = 1;
}

message DeleteShiftTemplateRequest {
  int64 id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gt = 0
  ];
}

message DeleteShiftTemplateResponse {
  int64 id = 1;
}

message ShiftTemplateTime {
  option (buf.validate.message).cel = {
    id: "time",
    message: "start time cannot be earlier than end time",
    expression: "this.start < this.end"
  };

  int32 start = 1 [
    (buf.validate.field).int32.gte = 0,
    (buf.validate.field).int32.lte = 1440
  ];

  int32 end = 2 [
    (buf.validate.field).int32.gte = 0,
    (buf.validate.field).int32.lte = 1440
  ];
}

message ShiftTemplate {
  int64 id = 1;
  int64 domain_id = 2;
  string name = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 250
  ];

  optional string description = 4 [(buf.validate.field).string.max_len = 250];

  repeated ShiftTemplateTime times = 5 [(buf.validate.field).repeated.min_items = 1];

  int64 created_at = 6;
  LookupEntity created_by = 7;
  int64 updated_at = 8;
  LookupEntity updated_by = 9;
}