syntax = "proto3";
package webitel.contacts;
option go_package = "webitel.go/api/contacts;contacts";

import "contacts/fields.proto";

// import "google/api/visibility.proto";
// import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// A contact's physical mailing address.
// May be a P.O. box or street address.
// All fields are optional.
//
// Inspired:
// https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim
// https://developers.google.com/people/api/rest/v1/people#address
message Address {
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    // GET /contacts/{source.id}/emails/{id}
    example: ""
  };

  // [TUPLE]: --------------------------------------

  // The unique ID of the association. Never changes.
  string id = 1;

  // Revision sequence number.
  // Version of the latest update.
  // Take part in ETag encoding.
  int32 ver = 2;

  // Unique ID of the latest version of the update.
  // This ID changes after any update to the underlying value(s).
  string etag = 3;

  // // The Contact source associated with.
  // // Return within global /labels lookup.
  // webitel.contacts.Lookup contact = 4;

  // The user who created this Field.
  int64 created_at = 5;

  // Timestamp(milli) of the Field creation.
  webitel.contacts.Lookup created_by = 6;
  
  // Timestamp(milli) of the last Field update.
  // Take part in Etag generation.
  int64 updated_at = 7;
  
  // The user who performed last Update.
  webitel.contacts.Lookup updated_by = 8;

  // [INPUT]: --------------------------------------

  // Indicates whether this address is default within other channels of the same type.
  bool primary = 11;

  // Indicate whether Contact, as a Person, realy owns this associated phone number.
  // In other words: whether Contact is reachable thru this 'email' communication channel ?
  bool verified = 12;

  // The type of the address.
  // Lookup value from CommunicationType dictionary.
  // The type can be custom or one of these predefined values:
  // - home
  // - work
  // - other
  webitel.contacts.Lookup type = 13;

  // The [P]ost[O]ffice Box of the address, also known as P.O.Box.
  // https://en.wikipedia.org/wiki/Post_office_box
  string po_box = 14;

  // The street address.
  // Full street address component, which MAY include house number, street name,
  // and multi-line extended street address information.
  // This field MAY contain multiple lines, separated by newlines.
  string street = 15;

  // The city of the address.
  string city = 16;
  // State, province, prefecture, or region component of the address.
  string region = 17;
  // The country name component of the address.
  string country = 18;
  // The ISO 3166-1 alpha-2 country code of the address.
  // https://www.iso.org/iso-3166-country-codes.html
  string country_code = 19;
  // Zip code or postal code component of the address.
  string postal_code = 20;

  // [OUTPUT]: --------------------------------------

  // The unstructured value of the address.
  // If this is not set by the user it will be
  // automatically constructed from structured values.
  string address = 21;
}

// Input of the Contact's email address.
message InputAddress {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    // PUT /contacts/{source.id}/emails/{etag}
    // example: "{\"etag\":\"1679792219687\",\"verified\":false,\"primary\":true,\"streetAddress\":\"st.Yrii sq. 5\",\"type\":{\"name\":\"work\"}}"
    json_schema: {
      // required: ["street"]
    }
  };

  // [TUPLE]: --------------------------------------

  // Unique ID of the latest version of an existing resorce.
  string etag = 1
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    field_configuration: {
      path_param_name: "etag"
    }
  }];

  // [INPUT]: --------------------------------------

  // Indicates whether this address is default within other channels of the same type.
  bool primary = 11;

  // Indicate whether Contact, as a Person, realy owns this associated phone number.
  // In other words: whether Contact is reachable thru this 'email' communication channel ?
  bool verified = 12;

  // The type of the address.
  // Lookup value from CommunicationType dictionary.
  // The type can be custom or one of these predefined values:
  // - home
  // - work
  // - other
  webitel.contacts.Lookup type = 13;

  // The [P]ost[O]ffice Box of the address, also known as P.O.Box.
  // https://en.wikipedia.org/wiki/Post_office_box
  string po_box = 14;

  // The street address.
  // Full street address component, which MAY include house number, street name,
  // and multi-line extended street address information.
  // This field MAY contain multiple lines, separated by newlines.
  string street = 15;

  // The city of the address.
  string city = 16;
  // State, province, prefecture, or region component of the address.
  string region = 17;
  // The country name component of the address.
  string country = 18;
  // The ISO 3166-1 alpha-2 country code of the address.
  // https://www.iso.org/iso-3166-country-codes.html
  string country_code = 19;
  // Zip code or postal code component of the address.
  string postal_code = 20;
}

// Address dataset.
message AddressList {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    // example: ""
  };

  // Addresses dataset page.
  repeated Address data = 1;
  // The page number of the partial result.
  int32 page = 2;
  // Indicates that this is a partial result.
  // More data available upon query: ?size=${data.len}&page=${page++}
  bool next = 3;
}

/*
// Contact email adresses service catalog.
service Addresses {

  // ------------------ [WITH] Domain ------------------- //

  // Search for Contacts email addresses
  rpc SearchAddresses(SearchEmailsRequest) returns (EmailList)
  {
    option (google.api.http) = {
      get: "/contacts/emails"
    };
  }

  // ------------------ [WITH] Contact ------------------- //

  // Search the Contact's email addresses
  rpc LocateAddresses(SearchEmailsRequest) returns (EmailList)
  {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/emails"
    };
  }

  // Link email address(es) with the contact
  rpc CreateAddresses(CreateEmailsRequest) returns (EmailList)
  {
    option (google.api.http) = {
      post: "/contacts/{contact_id}/emails"
      body: "data"
    };
  }
  // Reset the contact's email addresses to fit given data set. 
  rpc UpdateAddresses(UpdateEmailsRequest) returns (EmailList)
  {
    option (google.api.http) = {
      put: "/contacts/{contact_id}/emails"
      body: "data"
    };
  }

  // Remove the contact's email address link(s)
  rpc DeleteAddresses(DeleteEmailsRequest) returns (EmailList)
  {
    option (google.api.http) = {
      delete: "/contacts/{contact_id}/emails"
      response_body: "data"
    };
  }

  // ------------------ [WITH] Record ------------------- //

  // Locate the email address link.
  rpc LocateAddress(LocateEmailRequest) returns (EmailAddress) {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/emails/{id}"
    };
  }

  // Update the contact's email address link details
  rpc UpdateAddress(UpdateEmailRequest) returns (EmailAddress)
  {
    option (google.api.http) = {
      put: "/contacts/{contact_id}/emails/{data.etag}"
      body: "data"
      additional_bindings: {
        patch: "/contacts/{contact_id}/emails/{data.etag}"
        body: "data"
      }
    };
  }
  
  // Remove the contact's email address link
  rpc DeleteAddress(DeleteEmailRequest) returns (EmailAddress)
  {
    option (google.api.http) = {
      delete: "/contacts/{contact_id}/emails/{etag}"
    };
  }
}

// Locate single Link by unique IDentifier.
message LocateEmailRequest {

  // ------- Locate Options ------ //
  
  // Link contact ID.
  string contact_id = 1;
  // Link unique ID.
  string id = 2
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    format: "int64"
    // pattern: "^[1-9](\\d){0,19}$"
    required: ["id"]
  }];

  // ------- Result Options ------

  // Fields to be retrieved into result.
  repeated string fields = 3;
}


message SearchEmailsRequest {
  
  // ------- Search Options ------
  
  // Page number of result dataset records. offset = (page*size)
  int32 page = 1;
  // Size count of records on result page. limit = (size++)
  int32 size = 2;
  // Fields to be retrieved into result.
  repeated string fields = 3;
  // Sort the result according to fields.
  repeated string sort = 4;
  
  // ------- Record's Filters ------
  
  // The Contact ID linked with.
  string contact_id = 10;
  // Primary email address only. REQUIRE: contact_id.
  bool primary = 11;
  // Link(s) with unique ID only.
  repeated string id = 12;
  // Search term: email address.
  // `?` - matches any one character
  // `*` - matches 0 or more characters
  string q = 13;

}

message CreateEmailsRequest {

  // ------- Create Options -------

  // Link contact ID.
  string contact_id = 1;

  // Fixed set of email address(es) to be linked with the contact.
  // Email address(es) that conflicts(email) with already linked will be updated.
  repeated InputEmailAddress data = 2
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "[{\"verified\":false,\"primary\":true,\"email\":\"user@domain\",\"type\":{\"name\":\"personal\"}}]"
  }];

  // ------- Result Options -------

  // Fields to be retrieved into result of changes.
  repeated string fields = 3;

}

message UpdateEmailsRequest {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["data"]
    }
  };

  // ------- Reference Options ------- //

  // Link contact ID.
  string contact_id = 1;

  // --------- Update Options -------- //

  // Final set of email address(es) to be linked with the contact.
  // Email address(es) that are already linked with the contact
  // but not given in here will be removed.
  repeated InputEmailAddress data = 2
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "[{\"verified\":true,\"email\":\"johndoe_43@gmail.com\",\"type\":{\"name\":\"personal\"}},{\"primary\":true,\"etag\":\"k0WqvUn4IJGnuCyG\",\"email\":\"j.doe@x-company.org\",\"type\":{\"id\":\"11\",\"name\":\"business\"}}]"
    min_items: 1
    unique_items: true
  }];

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 3;
}

message UpdateEmailRequest {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["data"]
    }
  };

  // ------- Reference Options ------- //

  // Link contact ID.
  string contact_id = 1;

  // --------- Update Options -------- //

  // NEW Update of the email address link.
  InputEmailAddress data = 2;

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 3;

  // --------- PATCH Options -------- //

  // JSON PATCH fields mask.
  // List of JPath fields specified in body(input).
  repeated string x_json_mask = 4
  [(google.api.field_visibility) = {
    restriction: "PREVIEW"
  },
  (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true
    pattern: "^$"
  }];
}

message DeleteEmailsRequest {
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: "contact_id"
      required: "etag"
    }
  };

  // --------- Delete Options -------- //

  // Contact ID associated with.
  string contact_id = 1;

  // Set of unique ID(s) to remove.
  repeated string etag = 2
  [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      pattern: "^.+$"
      unique_items: true
      min_items: 1
    }
  ];

  // --------- Result Options -------- //

  // Fields to be retrieved as a result.
  repeated string fields = 3;

}

message DeleteEmailRequest {
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: "contact_id"
      required: "etag"
    }
  };

  // ------- Delete Options ------- //

  // Contact ID associated with.
  string contact_id = 1;

  // Unique ID to remove.
  string etag = 2
  [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      pattern: "^\\.+$"
    }
  ];

  // --------- Result Options -------- //

  // Fields to be retrieved as a result.
  repeated string fields = 3;

}
*/