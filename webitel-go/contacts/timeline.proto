syntax = "proto3";

package webitel.contacts;

option go_package = "webitel.go/api/contacts;contacts";

import "google/api/annotations.proto";
import "contacts/fields.proto";
import "chat/messages/history.proto";

service Timeline {
  rpc GetTimeline(GetTimelineRequest) returns (GetTimelineResponse) {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/timeline"
    };
  }
  rpc GetTimelineCounter(GetTimelineCounterRequest) returns (GetTimelineCounterResponse) {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/timeline/counter"
    };
  }
}


message GetTimelineRequest {
  int64 page = 1;
  int64 size = 2;
  string search = 3;
  string sort = 4;
  repeated string fields = 5;
  repeated string ids = 6;

  string contact_id = 7;
  int64 date_from = 8;
  int64 date_to = 9;
  repeated TimelineEventType type = 10;
}



message GetTimelineResponse {
  repeated DayTimeline days = 2;
  int64 page = 3;
  bool next = 4;
}


message GetTimelineCounterRequest {
  string contact_id = 1;
}

message GetTimelineCounterResponse {
  // filter dates
  int64 date_from = 1;
  int64 date_to = 2;
  // defined event types
  int64 chats_count = 3;
  int64 calls_count = 4;
  int64 emails_count = 5;
}

message CallEvent {
  string id = 1;
  int64 closed_at = 3;
  int64 duration = 4;
  bool is_inbound = 6;
  bool is_missed = 7;
  repeated Lookup participants = 9;
  Lookup gateway = 10;
  Lookup flow_scheme = 11;
  Lookup queue = 12;
  bool is_detailed = 13;
}

message ChatEvent {
  string id = 1;
  int64 closed_at = 3;
  int64 duration = 4;
  bool is_inbound = 6;
  bool is_missed = 7;
  repeated Lookup participants = 9;
  Lookup gateway = 10;
  Lookup flow_scheme = 11;
  Lookup queue = 12;
  bool is_detailed = 13;
}

message EmailEvent {
  string id = 1;
  repeated string from = 3; // array of senders (email addresses)
  repeated string to = 4; // array of receivers (email addresses)
  repeated string sender = 5; // array of receivers (email addresses)
  repeated string cc = 6; // array of ccs (email addresses)
  bool is_inbound = 7; // inbound/outbound email
  string subject = 8; //
  string body = 9; // plain text of email
  string html = 10; // html body of email
  Lookup owner = 11; // Agent who sent/accepted
  repeated Attachment attachments = 12;
  Lookup profile = 13; // email profile
  bool is_detailed = 14; // reserved for the open
}

message DayTimeline {
  repeated Event items = 1;
  int64 day_timestamp = 2;
  int64 chats_count = 3;
  int64 calls_count = 4;
  int64 emails_count = 5;

}

message Event {
  TimelineEventType type = 1;
  int64 created_at = 2;
  oneof event {
    ChatEvent chat = 3;
    CallEvent call = 4;
    EmailEvent email = 5;
  }
}

message Attachment {
  int64 id = 1;
  string url = 2;
  string mime = 3;

  string name = 4;
  int64 size = 5;
}


enum TimelineEventType{
  chat = 0;
  call = 1;
  email = 2;
}


