syntax = "proto3";

option go_package = "github.com/webitel/protos/cc";

import "const.proto";

package cc;

service MemberService {
    rpc AttemptResult(AttemptResultRequest) returns (AttemptResultResponse) {}

    rpc AttemptRenewalResult(AttemptRenewalResultRequest) returns (AttemptRenewalResultResponse) {}

    rpc CallJoinToQueue(CallJoinToQueueRequest) returns (stream QueueEvent) {}
    rpc ChatJoinToQueue(ChatJoinToQueueRequest) returns (stream QueueEvent) {}
    rpc CallJoinToAgent(CallJoinToAgentRequest) returns (stream QueueEvent) {}
    rpc OutboundCall(OutboundCallReqeust) returns (stream QueueEvent) {}
    rpc TaskJoinToAgent(TaskJoinToAgentRequest) returns (stream QueueEvent) {}

    rpc CancelAttempt(CancelAttemptRequest) returns (CancelAttemptResponse) {}
    rpc CancelAgentDistribute(CancelAgentDistributeRequest) returns (CancelAgentDistributeResponse) {}

    rpc EmailJoinToQueue(EmailJoinToQueueRequest) returns (EmailJoinToQueueResponse) {}
    rpc DirectAgentToMember(DirectAgentToMemberRequest) returns (DirectAgentToMemberResponse) {}

    rpc ProcessingFormAction(ProcessingFormActionRequest) returns (ProcessingFormActionResponse) {}
    rpc ProcessingComponentAction(ProcessingComponentActionRequest) returns (ProcessingComponentActionResponse) {}
    rpc ProcessingFormSave(ProcessingFormSaveRequest) returns (ProcessingFormSaveResponse) {}

    rpc Transfer(TransferRequest) returns (TransferResponse) {}

    rpc InterceptAttempt(InterceptAttemptRequest) returns (InterceptAttemptResponse) {}
    rpc ResumeAttempt(ResumeAttemptRequest) returns (ResumeAttemptResponse) {}
}

message ResumeAttemptRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;
}

message ResumeAttemptResponse {
    bool ok = 1;
}

message InterceptAttemptRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;
    int32 agent_id = 3;
}

message InterceptAttemptResponse {

}

message CancelAttemptRequest {
    int64 attempt_id = 1;
    string result = 2;
}

message CancelAttemptResponse {

}

message ProcessingFormActionRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;

    string app_id = 3;
    string form_id = 4;

    string action = 5;
    map<string,string> fields = 6;
}

message ProcessingFormActionResponse {

}

message ProcessingFormSaveRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;

    string app_id = 3;
    string form_id = 4;

    map<string,string> fields = 5;
    bytes form = 6;
}

message ProcessingFormSaveResponse {

}


message ProcessingComponentActionRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;

    string app_id = 3;
    string id = 4;
    string form_id = 5;
    string component_id = 6;

    string action = 7;
    map<string,string> variables = 8;
    bool sync = 9;
}

message ProcessingComponentActionResponse {

}

message TransferRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;

    int32 agent_id = 3;
    int32 queue_id = 4;

    map<string,string> form_fields = 5;
}

message TransferResponse {

}

message CancelAgentDistributeRequest {
    int32 agent_id = 1;
}

message CancelAgentDistributeResponse {

}

message MemberCommunicationType {
    int32 id = 1;
    string name = 2;
}

message MemberCommunication {
    string destination = 1;
    MemberCommunicationType type = 2;
    string description = 3;
}

message QueueFormSchema {
    int32 id = 1;
}

message TaskJoinToAgentRequest {
    message Processing {
        bool enabled = 1;
        uint32 renewal_sec = 2;
        uint32 sec = 3;
        QueueFormSchema form = 4;
    }

    int32 agent_id = 1;
    int32 timeout = 2;
    map<string,string> variables = 3;
    Processing processing = 4;
    string queue_name = 5;
    bool cancel_distribute = 6;
    MemberCommunication destination = 7;

    int64 domain_id = 100;
}

message OutboundCallReqeust {
    message Processing {
        bool enabled = 1;
        uint32 renewal_sec = 2;
        uint32 sec = 3;
        QueueFormSchema form = 4;
    }

    message Gateway {
        int32 id = 1;
        string name = 2;
    }

    message Endpoint {
        string dial_string = 1;
        Gateway gateway = 2;
        map<string,string> parameters = 3;
    }

    string call_id = 1;
    int32 timeout = 2;
    map<string,string> variables = 3;
    Processing processing = 4;
    string queue_name = 5;
    bool cancel_distribute = 6;
}

message CallJoinToAgentRequest {
    message WaitingMusic {
        int32 id = 1;
        string name = 2;
        string type = 3;
    }

    message Processing {
        bool enabled = 1;
        uint32 renewal_sec = 2;
        uint32 sec = 3;
        QueueFormSchema form = 4;
    }

    string member_call_id = 1;
    int32 agent_id = 2;
    WaitingMusic waitingMusic = 3;
    int32 timeout = 4;
    map<string,string> variables = 5;
    Processing processing = 6;
    string queue_name = 7;
    bool cancel_distribute = 8;

    int64 domain_id = 100;
}

message AttemptRenewalResultRequest {
    int64 domain_id = 1;
    int64 attempt_id = 2;
    uint32 renewal = 3;
}

message AttemptRenewalResultResponse {

}

message QueueEvent {
    string name = 1;

    message JoinedData {
        int64 attempt_id = 1;
        string app_id = 2;
    }

    message OfferingData {
        int32 agent_id = 1;
        string agent_call_id = 2;
        string agent_name = 3;
    }

    message MissedAgent {
        int64 timeout = 1;
    }

    message BridgedData {
        int32 agent_id = 1;
    }

    message LeavingData {
        string result = 1;
    }

    oneof data {
        OfferingData offering = 2;
        BridgedData bridged = 3;
        MissedAgent missed = 4;
        LeavingData leaving = 5;
        JoinedData joined = 6;
    }
}


message AnswerConversationRequest {
    string channel_id = 1;
}

message AnswerConversationResponse {

}

message ChatJoinToQueueRequest {
    message Queue {
        int32 id = 1;
        string name = 2;
    }

    string conversation_id = 1;
    Queue queue = 2;
    int32 timeout = 4;
    int32 priority = 5;
    map<string,string> variables= 6;
    int32 bucket_id = 7;
    int32 sticky_agent_id = 8;

    int64 domain_id = 100;
}

message EmailJoinToQueueRequest {
    string email_id  = 1;
    int32 queue_id = 2;

    int64 domain_id = 100; // todo
}

message EmailJoinToQueueResponse {
    string status = 1;
}

message DirectAgentToMemberRequest {
    int64 member_id = 1;
    int64 agent_id = 2;

    int32 communication_id = 3;
    int64 domain_id = 4;
}

message DirectAgentToMemberResponse {
    int64 attempt_id = 1;
}

message CallJoinToQueueRequest {
    message Queue {
        int32 id = 1;
        string name = 2;
    }
    message WaitingMusic {
        int32 id = 1;
        string name = 2;
        string type = 3;
    }

    string member_call_id = 1;
    Queue queue = 2;
    WaitingMusic waitingMusic = 3;
    int32 timeout = 4;
    int32 priority = 5;
    map<string,string> variables= 6;
    int32 bucket_id = 7;
    int32 sticky_agent_id = 8;

    int64 domain_id = 100;
}

message CallJoinToQueueResponse {
    string status = 1;
}

message MemberCommunicationCreateRequest {
    string destination = 1;
    engine.Lookup type = 2;
    int32 priority = 3;
    string description = 4;

    engine.Lookup resource = 5;
    string display = 6;
    int64 stop_at = 7;
    string dtmf = 8;
}

message AttemptResultRequest {
    int64 attempt_id = 1;
    string status = 2; // SUCCESS / CANCEL - абонент виключається з черги з цим статусом, якщо пусто то: якщо остання спроба то ABANDONED або буде очікувати наступний дзвінок

    int64 next_distribute_at = 3;
    int64 expire_at = 4;
    map<string, string> variables = 5;
    bool display = 6;
    string description = 7;
    int64 transfer_queue_id = 8;

    int32 agent_id = 9;
    bool exclude_current_communication = 10;
    bool redial = 11;
    repeated MemberCommunicationCreateRequest add_communications = 12;
    int32 wait_between_retries = 13;
    bool only_current_communication = 14;

}

message AttemptResultResponse {
    string status = 1;
}