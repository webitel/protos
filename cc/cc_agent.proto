syntax = "proto3";

package cc;

service AgentService {
    rpc Online(OnlineRequest) returns (OnlineResponse) {}
    rpc Offline(OfflineRequest) returns (OfflineResponse) {}
    rpc Pause(PauseRequest) returns (PauseResponse) {}

    rpc WaitingChannel(WaitingChannelRequest) returns (WaitingChannelResponse) {}
}

message WaitingChannelRequest {
    int32 agent_id = 1;
    string channel = 2;

    int64 domain_id = 3;
}

message WaitingChannelResponse {
    int64 timestamp = 1;
}

message Channel {
    string channel = 1;
    string state = 2;
    int64 joined_at = 3;
    bool enabled = 4;
}

message PauseRequest {
    int64 agent_id = 1;
    string payload = 2;
    int32 timeout = 3;

    int64 domain_id = 4;
}

message PauseResponse {
    int64 timestamp = 1;
}

message OfflineRequest {
    int64 agent_id = 1;
    int64 domain_id = 2;
}

message OfflineResponse {
    int64 timestamp = 1;
}

message OnlineRequest {
    int64 agent_id = 1;
    repeated string channels = 3;
    bool on_demand = 4;

    int64 domain_id = 5;
}

message OnlineResponse {
    int64 timestamp = 1;
    repeated Channel channels = 2;
}