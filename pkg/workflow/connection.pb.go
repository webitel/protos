// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: workflow/connection.proto

package workflow

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DistributeAttemptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaId    int32             `protobuf:"varint,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	DomainId    int64             `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Destination string            `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Display     string            `protobuf:"bytes,4,opt,name=display,proto3" json:"display,omitempty"`
	Variables   map[string]string `protobuf:"bytes,5,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DistributeAttemptRequest) Reset() {
	*x = DistributeAttemptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_connection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeAttemptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeAttemptRequest) ProtoMessage() {}

func (x *DistributeAttemptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_connection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeAttemptRequest.ProtoReflect.Descriptor instead.
func (*DistributeAttemptRequest) Descriptor() ([]byte, []int) {
	return file_workflow_connection_proto_rawDescGZIP(), []int{0}
}

func (x *DistributeAttemptRequest) GetSchemaId() int32 {
	if x != nil {
		return x.SchemaId
	}
	return 0
}

func (x *DistributeAttemptRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *DistributeAttemptRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *DistributeAttemptRequest) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *DistributeAttemptRequest) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type DistributeAttemptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*DistributeAttemptResponse_Cancel_
	//	*DistributeAttemptResponse_Confirm_
	Result    isDistributeAttemptResponse_Result `protobuf_oneof:"result"`
	Variables map[string]string                  `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DistributeAttemptResponse) Reset() {
	*x = DistributeAttemptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_connection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeAttemptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeAttemptResponse) ProtoMessage() {}

func (x *DistributeAttemptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_connection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeAttemptResponse.ProtoReflect.Descriptor instead.
func (*DistributeAttemptResponse) Descriptor() ([]byte, []int) {
	return file_workflow_connection_proto_rawDescGZIP(), []int{1}
}

func (m *DistributeAttemptResponse) GetResult() isDistributeAttemptResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *DistributeAttemptResponse) GetCancel() *DistributeAttemptResponse_Cancel {
	if x, ok := x.GetResult().(*DistributeAttemptResponse_Cancel_); ok {
		return x.Cancel
	}
	return nil
}

func (x *DistributeAttemptResponse) GetConfirm() *DistributeAttemptResponse_Confirm {
	if x, ok := x.GetResult().(*DistributeAttemptResponse_Confirm_); ok {
		return x.Confirm
	}
	return nil
}

func (x *DistributeAttemptResponse) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type isDistributeAttemptResponse_Result interface {
	isDistributeAttemptResponse_Result()
}

type DistributeAttemptResponse_Cancel_ struct {
	Cancel *DistributeAttemptResponse_Cancel `protobuf:"bytes,1,opt,name=cancel,proto3,oneof"`
}

type DistributeAttemptResponse_Confirm_ struct {
	Confirm *DistributeAttemptResponse_Confirm `protobuf:"bytes,2,opt,name=confirm,proto3,oneof"`
}

func (*DistributeAttemptResponse_Cancel_) isDistributeAttemptResponse_Result() {}

func (*DistributeAttemptResponse_Confirm_) isDistributeAttemptResponse_Result() {}

type DistributeAttemptResponse_Cancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description       string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	NextDistributeSec uint32 `protobuf:"varint,2,opt,name=next_distribute_sec,json=nextDistributeSec,proto3" json:"next_distribute_sec,omitempty"`
	Stop              bool   `protobuf:"varint,3,opt,name=stop,proto3" json:"stop,omitempty"`
}

func (x *DistributeAttemptResponse_Cancel) Reset() {
	*x = DistributeAttemptResponse_Cancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_connection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeAttemptResponse_Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeAttemptResponse_Cancel) ProtoMessage() {}

func (x *DistributeAttemptResponse_Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_connection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeAttemptResponse_Cancel.ProtoReflect.Descriptor instead.
func (*DistributeAttemptResponse_Cancel) Descriptor() ([]byte, []int) {
	return file_workflow_connection_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DistributeAttemptResponse_Cancel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DistributeAttemptResponse_Cancel) GetNextDistributeSec() uint32 {
	if x != nil {
		return x.NextDistributeSec
	}
	return 0
}

func (x *DistributeAttemptResponse_Cancel) GetStop() bool {
	if x != nil {
		return x.Stop
	}
	return false
}

type DistributeAttemptResponse_Confirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Display     string `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *DistributeAttemptResponse_Confirm) Reset() {
	*x = DistributeAttemptResponse_Confirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_connection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributeAttemptResponse_Confirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributeAttemptResponse_Confirm) ProtoMessage() {}

func (x *DistributeAttemptResponse_Confirm) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_connection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributeAttemptResponse_Confirm.ProtoReflect.Descriptor instead.
func (*DistributeAttemptResponse_Confirm) Descriptor() ([]byte, []int) {
	return file_workflow_connection_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DistributeAttemptResponse_Confirm) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *DistributeAttemptResponse_Confirm) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

var File_workflow_connection_proto protoreflect.FileDescriptor

var file_workflow_connection_proto_rawDesc = []byte{
	0x0a, 0x19, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x9f, 0x02, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x4f, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x03, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x47, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x50, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x6e, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x1a, 0x45, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x1a, 0x3c, 0x0a,
	0x0e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x6d, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workflow_connection_proto_rawDescOnce sync.Once
	file_workflow_connection_proto_rawDescData = file_workflow_connection_proto_rawDesc
)

func file_workflow_connection_proto_rawDescGZIP() []byte {
	file_workflow_connection_proto_rawDescOnce.Do(func() {
		file_workflow_connection_proto_rawDescData = protoimpl.X.CompressGZIP(file_workflow_connection_proto_rawDescData)
	})
	return file_workflow_connection_proto_rawDescData
}

var file_workflow_connection_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_workflow_connection_proto_goTypes = []interface{}{
	(*DistributeAttemptRequest)(nil),          // 0: workflow.DistributeAttemptRequest
	(*DistributeAttemptResponse)(nil),         // 1: workflow.DistributeAttemptResponse
	nil,                                       // 2: workflow.DistributeAttemptRequest.VariablesEntry
	(*DistributeAttemptResponse_Cancel)(nil),  // 3: workflow.DistributeAttemptResponse.Cancel
	(*DistributeAttemptResponse_Confirm)(nil), // 4: workflow.DistributeAttemptResponse.Confirm
	nil, // 5: workflow.DistributeAttemptResponse.VariablesEntry
}
var file_workflow_connection_proto_depIdxs = []int32{
	2, // 0: workflow.DistributeAttemptRequest.variables:type_name -> workflow.DistributeAttemptRequest.VariablesEntry
	3, // 1: workflow.DistributeAttemptResponse.cancel:type_name -> workflow.DistributeAttemptResponse.Cancel
	4, // 2: workflow.DistributeAttemptResponse.confirm:type_name -> workflow.DistributeAttemptResponse.Confirm
	5, // 3: workflow.DistributeAttemptResponse.variables:type_name -> workflow.DistributeAttemptResponse.VariablesEntry
	0, // 4: workflow.FlowService.DistributeAttempt:input_type -> workflow.DistributeAttemptRequest
	1, // 5: workflow.FlowService.DistributeAttempt:output_type -> workflow.DistributeAttemptResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_workflow_connection_proto_init() }
func file_workflow_connection_proto_init() {
	if File_workflow_connection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workflow_connection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeAttemptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_connection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeAttemptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_connection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeAttemptResponse_Cancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_connection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributeAttemptResponse_Confirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_workflow_connection_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*DistributeAttemptResponse_Cancel_)(nil),
		(*DistributeAttemptResponse_Confirm_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workflow_connection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workflow_connection_proto_goTypes,
		DependencyIndexes: file_workflow_connection_proto_depIdxs,
		MessageInfos:      file_workflow_connection_proto_msgTypes,
	}.Build()
	File_workflow_connection_proto = out.File
	file_workflow_connection_proto_rawDesc = nil
	file_workflow_connection_proto_goTypes = nil
	file_workflow_connection_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FlowServiceClient is the client API for FlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlowServiceClient interface {
	DistributeAttempt(ctx context.Context, in *DistributeAttemptRequest, opts ...grpc.CallOption) (*DistributeAttemptResponse, error)
}

type flowServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFlowServiceClient(cc grpc.ClientConnInterface) FlowServiceClient {
	return &flowServiceClient{cc}
}

func (c *flowServiceClient) DistributeAttempt(ctx context.Context, in *DistributeAttemptRequest, opts ...grpc.CallOption) (*DistributeAttemptResponse, error) {
	out := new(DistributeAttemptResponse)
	err := c.cc.Invoke(ctx, "/workflow.FlowService/DistributeAttempt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlowServiceServer is the server API for FlowService service.
type FlowServiceServer interface {
	DistributeAttempt(context.Context, *DistributeAttemptRequest) (*DistributeAttemptResponse, error)
}

// UnimplementedFlowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFlowServiceServer struct {
}

func (*UnimplementedFlowServiceServer) DistributeAttempt(context.Context, *DistributeAttemptRequest) (*DistributeAttemptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributeAttempt not implemented")
}

func RegisterFlowServiceServer(s *grpc.Server, srv FlowServiceServer) {
	s.RegisterService(&_FlowService_serviceDesc, srv)
}

func _FlowService_DistributeAttempt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributeAttemptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlowServiceServer).DistributeAttempt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.FlowService/DistributeAttempt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlowServiceServer).DistributeAttempt(ctx, req.(*DistributeAttemptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "workflow.FlowService",
	HandlerType: (*FlowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DistributeAttempt",
			Handler:    _FlowService_DistributeAttempt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workflow/connection.proto",
}
