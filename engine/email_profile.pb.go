// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.0
// source: email_profile.proto

package engine

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadEmailProfileRequest) Reset() {
	*x = ReadEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEmailProfileRequest) ProtoMessage() {}

func (x *ReadEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*ReadEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{0}
}

func (x *ReadEmailProfileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEmailProfileRequest) Reset() {
	*x = DeleteEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailProfileRequest) ProtoMessage() {}

func (x *DeleteEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteEmailProfileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Schema      *Lookup `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Enabled     bool    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Host        string  `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Login       string  `protobuf:"bytes,7,opt,name=login,proto3" json:"login,omitempty"`
	Mailbox     string  `protobuf:"bytes,8,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
	SmtpPort    int32   `protobuf:"varint,9,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	ImapPort    int32   `protobuf:"varint,10,opt,name=imap_port,json=imapPort,proto3" json:"imap_port,omitempty"`
	Password    string  `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UpdateEmailProfileRequest) Reset() {
	*x = UpdateEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailProfileRequest) ProtoMessage() {}

func (x *UpdateEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateEmailProfileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEmailProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEmailProfileRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateEmailProfileRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *UpdateEmailProfileRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateEmailProfileRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateEmailProfileRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UpdateEmailProfileRequest) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *UpdateEmailProfileRequest) GetSmtpPort() int32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *UpdateEmailProfileRequest) GetImapPort() int32 {
	if x != nil {
		return x.ImapPort
	}
	return 0
}

func (x *UpdateEmailProfileRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SearchEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q      string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort   string   `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchEmailProfileRequest) Reset() {
	*x = SearchEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEmailProfileRequest) ProtoMessage() {}

func (x *SearchEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*SearchEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{3}
}

func (x *SearchEmailProfileRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchEmailProfileRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchEmailProfileRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchEmailProfileRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchEmailProfileRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ListEmailProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool            `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*EmailProfile `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListEmailProfile) Reset() {
	*x = ListEmailProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEmailProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEmailProfile) ProtoMessage() {}

func (x *ListEmailProfile) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEmailProfile.ProtoReflect.Descriptor instead.
func (*ListEmailProfile) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{4}
}

func (x *ListEmailProfile) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListEmailProfile) GetItems() []*EmailProfile {
	if x != nil {
		return x.Items
	}
	return nil
}

type EmailProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   int64   `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy   *Lookup `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt   int64   `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy   *Lookup `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name        string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Schema      *Lookup `protobuf:"bytes,9,opt,name=schema,proto3" json:"schema,omitempty"`
	Enabled     bool    `protobuf:"varint,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Host        string  `protobuf:"bytes,11,opt,name=host,proto3" json:"host,omitempty"`
	Login       string  `protobuf:"bytes,12,opt,name=login,proto3" json:"login,omitempty"`
	Mailbox     string  `protobuf:"bytes,13,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
	SmtpPort    int32   `protobuf:"varint,14,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	ImapPort    int32   `protobuf:"varint,15,opt,name=imap_port,json=imapPort,proto3" json:"imap_port,omitempty"`
	Password    string  `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *EmailProfile) Reset() {
	*x = EmailProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailProfile) ProtoMessage() {}

func (x *EmailProfile) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailProfile.ProtoReflect.Descriptor instead.
func (*EmailProfile) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{5}
}

func (x *EmailProfile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmailProfile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EmailProfile) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *EmailProfile) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *EmailProfile) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *EmailProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailProfile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EmailProfile) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *EmailProfile) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EmailProfile) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *EmailProfile) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *EmailProfile) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *EmailProfile) GetSmtpPort() int32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *EmailProfile) GetImapPort() int32 {
	if x != nil {
		return x.ImapPort
	}
	return 0
}

func (x *EmailProfile) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Schema      *Lookup `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Enabled     bool    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Host        string  `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Login       string  `protobuf:"bytes,7,opt,name=login,proto3" json:"login,omitempty"`
	Password    string  `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Mailbox     string  `protobuf:"bytes,9,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
	SmtpPort    int32   `protobuf:"varint,10,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	ImapPort    int32   `protobuf:"varint,11,opt,name=imap_port,json=imapPort,proto3" json:"imap_port,omitempty"`
}

func (x *CreateEmailProfileRequest) Reset() {
	*x = CreateEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmailProfileRequest) ProtoMessage() {}

func (x *CreateEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{6}
}

func (x *CreateEmailProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *CreateEmailProfileRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateEmailProfileRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *CreateEmailProfileRequest) GetSmtpPort() int32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *CreateEmailProfileRequest) GetImapPort() int32 {
	if x != nil {
		return x.ImapPort
	}
	return 0
}

type PatchEmailProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Schema      *Lookup  `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Enabled     bool     `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Host        string   `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Login       string   `protobuf:"bytes,7,opt,name=login,proto3" json:"login,omitempty"`
	Mailbox     string   `protobuf:"bytes,8,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
	SmtpPort    int32    `protobuf:"varint,9,opt,name=smtp_port,json=smtpPort,proto3" json:"smtp_port,omitempty"`
	ImapPort    int32    `protobuf:"varint,10,opt,name=imap_port,json=imapPort,proto3" json:"imap_port,omitempty"`
	Password    string   `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	Fields      []string `protobuf:"bytes,50,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *PatchEmailProfileRequest) Reset() {
	*x = PatchEmailProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_email_profile_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchEmailProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchEmailProfileRequest) ProtoMessage() {}

func (x *PatchEmailProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_profile_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchEmailProfileRequest.ProtoReflect.Descriptor instead.
func (*PatchEmailProfileRequest) Descriptor() ([]byte, []int) {
	return file_email_profile_proto_rawDescGZIP(), []int{7}
}

func (x *PatchEmailProfileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchEmailProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *PatchEmailProfileRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PatchEmailProfileRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetMailbox() string {
	if x != nil {
		return x.Mailbox
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetSmtpPort() int32 {
	if x != nil {
		return x.SmtpPort
	}
	return 0
}

func (x *PatchEmailProfileRequest) GetImapPort() int32 {
	if x != nil {
		return x.ImapPort
	}
	return 0
}

func (x *PatchEmailProfileRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PatchEmailProfileRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_email_profile_proto protoreflect.FileDescriptor

var file_email_profile_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x3a, 0x32, 0x92, 0x41, 0x2f, 0x0a, 0x2d, 0x2a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x20, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x32, 0x12, 0x52, 0x65,
	0x61, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0xd2, 0x01, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x3a, 0x36, 0x92, 0x41, 0x33, 0x0a, 0x31, 0x2a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x32,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0xd2, 0x01, 0x02, 0x69, 0x64, 0x22, 0xd2, 0x03, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69,
	0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6d, 0x74, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x92, 0x01, 0x92, 0x41, 0x8e,
	0x01, 0x0a, 0x8b, 0x01, 0x2a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x32, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0xd2, 0x01, 0x02, 0x69, 0x64, 0xd2, 0x01,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0xd2, 0x01, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0xd2, 0x01,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0xd2, 0x01, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0xd2, 0x01, 0x07,
	0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0xd2, 0x01, 0x09, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0xd2, 0x01, 0x09, 0x69, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x7d, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x52,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xcc, 0x03, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x2d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6d, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x6d, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x70,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0xbd, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d, 0x74, 0x70, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6d, 0x74, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x3a, 0x8d, 0x01, 0x92, 0x41, 0x89, 0x01, 0x0a, 0x86, 0x01, 0x2a, 0x21, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x32, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0xd2, 0x01, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0xd2, 0x01, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0xd2, 0x01, 0x04, 0x68, 0x6f, 0x73, 0x74, 0xd2, 0x01, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0xd2,
	0x01, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0xd2, 0x01, 0x09, 0x73, 0x6d, 0x74, 0x70,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0xd2, 0x01, 0x09, 0x69, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0xa5, 0x03, 0x0a, 0x18, 0x50, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6d,
	0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x6d, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x70, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x3a, 0x4f, 0x92, 0x41, 0x4c, 0x0a, 0x4a, 0x2a,
	0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x62, 0x6f,
	0x64, 0x79, 0x32, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0xd2, 0x01, 0x02, 0x69, 0x64, 0x32, 0x9a, 0x05, 0x0a, 0x13, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x68, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b,
	0x0a, 0x11, 0x50, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x32, 0x13, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x1a, 0x13, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x2a, 0x13, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_email_profile_proto_rawDescOnce sync.Once
	file_email_profile_proto_rawDescData = file_email_profile_proto_rawDesc
)

func file_email_profile_proto_rawDescGZIP() []byte {
	file_email_profile_proto_rawDescOnce.Do(func() {
		file_email_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_email_profile_proto_rawDescData)
	})
	return file_email_profile_proto_rawDescData
}

var file_email_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_email_profile_proto_goTypes = []interface{}{
	(*ReadEmailProfileRequest)(nil),   // 0: engine.ReadEmailProfileRequest
	(*DeleteEmailProfileRequest)(nil), // 1: engine.DeleteEmailProfileRequest
	(*UpdateEmailProfileRequest)(nil), // 2: engine.UpdateEmailProfileRequest
	(*SearchEmailProfileRequest)(nil), // 3: engine.SearchEmailProfileRequest
	(*ListEmailProfile)(nil),          // 4: engine.ListEmailProfile
	(*EmailProfile)(nil),              // 5: engine.EmailProfile
	(*CreateEmailProfileRequest)(nil), // 6: engine.CreateEmailProfileRequest
	(*PatchEmailProfileRequest)(nil),  // 7: engine.PatchEmailProfileRequest
	(*Lookup)(nil),                    // 8: engine.Lookup
}
var file_email_profile_proto_depIdxs = []int32{
	8,  // 0: engine.UpdateEmailProfileRequest.schema:type_name -> engine.Lookup
	5,  // 1: engine.ListEmailProfile.items:type_name -> engine.EmailProfile
	8,  // 2: engine.EmailProfile.created_by:type_name -> engine.Lookup
	8,  // 3: engine.EmailProfile.updated_by:type_name -> engine.Lookup
	8,  // 4: engine.EmailProfile.schema:type_name -> engine.Lookup
	8,  // 5: engine.CreateEmailProfileRequest.schema:type_name -> engine.Lookup
	8,  // 6: engine.PatchEmailProfileRequest.schema:type_name -> engine.Lookup
	6,  // 7: engine.EmailProfileService.CreateEmailProfile:input_type -> engine.CreateEmailProfileRequest
	3,  // 8: engine.EmailProfileService.SearchEmailProfile:input_type -> engine.SearchEmailProfileRequest
	0,  // 9: engine.EmailProfileService.ReadEmailProfile:input_type -> engine.ReadEmailProfileRequest
	7,  // 10: engine.EmailProfileService.PatchEmailProfile:input_type -> engine.PatchEmailProfileRequest
	2,  // 11: engine.EmailProfileService.UpdateEmailProfile:input_type -> engine.UpdateEmailProfileRequest
	1,  // 12: engine.EmailProfileService.DeleteEmailProfile:input_type -> engine.DeleteEmailProfileRequest
	5,  // 13: engine.EmailProfileService.CreateEmailProfile:output_type -> engine.EmailProfile
	4,  // 14: engine.EmailProfileService.SearchEmailProfile:output_type -> engine.ListEmailProfile
	5,  // 15: engine.EmailProfileService.ReadEmailProfile:output_type -> engine.EmailProfile
	5,  // 16: engine.EmailProfileService.PatchEmailProfile:output_type -> engine.EmailProfile
	5,  // 17: engine.EmailProfileService.UpdateEmailProfile:output_type -> engine.EmailProfile
	5,  // 18: engine.EmailProfileService.DeleteEmailProfile:output_type -> engine.EmailProfile
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_email_profile_proto_init() }
func file_email_profile_proto_init() {
	if File_email_profile_proto != nil {
		return
	}
	file_const_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_email_profile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEmailProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_email_profile_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchEmailProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_email_profile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_email_profile_proto_goTypes,
		DependencyIndexes: file_email_profile_proto_depIdxs,
		MessageInfos:      file_email_profile_proto_msgTypes,
	}.Build()
	File_email_profile_proto = out.File
	file_email_profile_proto_rawDesc = nil
	file_email_profile_proto_goTypes = nil
	file_email_profile_proto_depIdxs = nil
}
