syntax = "proto3";

package engine;

option go_package = "github.com/webitel/protos/engine";

import "google/api/annotations.proto";
import "const.proto";

service TeamHookService {
  rpc CreateTeamHook (CreateTeamHookRequest) returns (TeamHook) {
    option (google.api.http) = {
      post: "/call_center/teams/{team_id}/hooks"
      body: "*"
    };
  }
  rpc SearchTeamHook (SearchTeamHookRequest) returns (ListTeamHook) {
    option (google.api.http) = {
      get: "/call_center/teams/{team_id}/hooks"
    };
  }
  rpc ReadTeamHook (ReadTeamHookRequest) returns (TeamHook) {
    option (google.api.http) = {
      get: "/call_center/teams/{team_id}/hooks/{id}"
    };
  }
  rpc UpdateTeamHook (UpdateTeamHookRequest) returns (TeamHook) {
    option (google.api.http) = {
      put: "/call_center/teams/{team_id}/hooks/{id}"
      body: "*"
    };
  }
  rpc PatchTeamHook(PatchTeamHookRequest) returns (TeamHook) {
    option (google.api.http) = {
      patch: "/call_center/teams/{team_id}/hooks/{id}"
      body: "*"
    };
  }
  rpc DeleteTeamHook(DeleteTeamHookRequest) returns (TeamHook) {
    option (google.api.http) = {
      delete: "/call_center/teams/{team_id}/hooks/{id}"
    };
  }
}

enum TeamHookEvent {
  teamHookEventUndefined = 0;
  agent_status = 1;
}

message DeleteTeamHookRequest {
  int64 team_id = 1;
  uint32 id = 2;
}

message PatchTeamHookRequest {
  repeated string fields = 1;
  int64 team_id = 2;
  uint32 id = 3;
  Lookup schema = 4;
  TeamHookEvent event = 5;
  bool enabled = 6;
  repeated string properties = 7;
}

message UpdateTeamHookRequest {
  int64 team_id = 1;
  uint32 id = 2;
  Lookup schema = 3;
  TeamHookEvent event = 4;
  bool enabled = 5;
  repeated string properties = 6;
}

message SearchTeamHookRequest {
  int64 team_id = 1;
  int32 page = 2;
  int32 size = 3;
  string q = 4;

  string sort = 5;
  repeated string fields = 6;

  repeated uint32 id = 7;
  repeated uint32 schema_id = 8;
  repeated TeamHookEvent event = 9;
}

message CreateTeamHookRequest {
  int64 team_id = 1;
  Lookup schema = 2;
  TeamHookEvent event = 3;
  bool enabled = 4;
  repeated string properties = 5;
}

message ReadTeamHookRequest {
  int64 team_id = 1;
  uint32 id = 2;
}

message TeamHook {
  uint32 id = 1;
  Lookup schema = 2;
  TeamHookEvent event = 3;
  bool enabled = 4;
  repeated string properties = 5;
}

message ListTeamHook {
  bool next = 1;
  repeated TeamHook items = 2;
}