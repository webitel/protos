syntax = "proto3";

package engine;

option go_package = "github.com/webitel/protos/engine";

import "const.proto";

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

service RoutingSchemaService {
    // Create RoutingSchema
    rpc CreateRoutingSchema(CreateRoutingSchemaRequest) returns (RoutingSchema) {
        option (google.api.http) = {
            post: "/routing/schema"
            body: "*"
        };
    }

    // List RoutingSchema
    rpc SearchRoutingSchema(SearchRoutingSchemaRequest) returns (ListRoutingSchema) {
        option (google.api.http) = {
            get: "/routing/schema"
        };
    }
    // RoutingSchema item
    rpc ReadRoutingSchema(ReadRoutingSchemaRequest) returns (RoutingSchema) {
        option (google.api.http) = {
            get: "/routing/schema/{id}"
        };
    }
    // Update RoutingSchema
    rpc UpdateRoutingSchema(UpdateRoutingSchemaRequest) returns (RoutingSchema) {
        option (google.api.http) = {
            put: "/routing/schema/{id}"
            body: "*"
        };
    }

    // Patch RoutingSchema
    rpc PatchRoutingSchema(PatchRoutingSchemaRequest) returns (RoutingSchema) {
        option (google.api.http) = {
            patch: "/routing/schema/{id}"
            body: "*"
        };
    }

    // Remove RoutingSchema
    rpc DeleteRoutingSchema(DeleteRoutingSchemaRequest) returns (RoutingSchema) {
        option (google.api.http) = {
            delete: "/routing/schema/{id}"
        };
    }

    // List RoutingSchemaTags
    rpc SearchRoutingSchemaTags(SearchRoutingSchemaTagsRequest) returns (ListRoutingSchemaTags) {
        option (google.api.http) = {
            get: "/routing/schema/tags"
        };
    }
}

enum RoutingSchemaType {
    default = 0;
    voice = 1;
    chat = 2;
    processing = 3;
    service = 4;
}

message SchemaTag {
    string name =1;
}


message PatchRoutingSchemaRequest {
    int64 id = 1;

    string name = 2;
    string description = 3;
    RoutingSchemaType type = 4;
    google.protobuf.Value schema = 5;
    google.protobuf.Value payload = 6;
    bool debug = 7;
    repeated string fields = 8;
    bool editor = 9;
    repeated SchemaTag tags = 10;
    string note = 11;
}

message DeleteRoutingSchemaRequest {
    int64 id = 1;
    int64 domain_id = 2;
}

message UpdateRoutingSchemaRequest {
    int64 id = 1;

    string name = 2;
    string description = 3;
    RoutingSchemaType type = 4;
    google.protobuf.Value schema = 5;
    google.protobuf.Value payload = 6;
    bool debug = 7;

    bool editor = 8;
    repeated SchemaTag tags = 9;
    string note = 10;
}

message ReadRoutingSchemaRequest {
    int64 id = 1;

    int64 domain_id = 2;
}

message SearchRoutingSchemaRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;

    string sort = 4;
    repeated string fields = 5;

    repeated uint32 id = 6;
    string name = 7;
    repeated RoutingSchemaType type = 8;
    bool editor = 9;
    repeated string tags = 10;
}

message CreateRoutingSchemaRequest {
    string name = 1;
    string description = 2;
    RoutingSchemaType type = 3;
    google.protobuf.Value schema = 4;
    google.protobuf.Value payload = 5;
    bool debug = 6;
    bool editor = 7;
    repeated SchemaTag tags = 8;
}

message RoutingSchema {
    int64 id = 1;

    int64 created_at = 2;
    Lookup created_by = 3;
    int64 updated_at = 4;
    Lookup updated_by = 5;
    string name = 6;
    string description = 7;
    RoutingSchemaType type = 8;
    google.protobuf.Value schema = 9;
    google.protobuf.Value payload = 10;
    bool debug = 11;
    bool editor = 12;
    repeated SchemaTag tags = 13;
}

message ListRoutingSchema {
    bool next = 1;
    repeated RoutingSchema items = 2;
}

message RoutingSchemaTag {
    string name = 1;
    uint32 count = 2;
}

message ListRoutingSchemaTags {
    bool next = 1;
    repeated RoutingSchemaTag items = 2;
}

message SearchRoutingSchemaTagsRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;

    string sort = 4;
    repeated string fields = 5;
    repeated RoutingSchemaType type = 6;
}