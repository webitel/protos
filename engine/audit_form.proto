syntax = "proto3";

package engine;

option go_package = "github.com/webitel/protos/engine";

import "const.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

service AuditFormService {
  rpc CreateAuditForm(CreateAuditFormRequest) returns (AuditForm) {
    option (google.api.http) = {
      post: "/call_center/audit/forms"
      body: "*"
    };
  }

  rpc SearchAuditForm(SearchAuditFormRequest) returns (ListAuditForm) {
    option (google.api.http) = {
      get: "/call_center/audit/forms"
    };
  }

  rpc ReadAuditForm(ReadAuditFormRequest) returns (AuditForm) {
    option (google.api.http) = {
      get: "/call_center/audit/forms/{id}"
    };
  }

  rpc UpdateAuditForm(UpdateAuditFormRequest) returns (AuditForm) {
    option (google.api.http) = {
      put: "/call_center/audit/forms/{id}"
      body: "*"
    };
  }

  rpc PatchAuditForm(PatchAuditFormRequest) returns (AuditForm) {
    option (google.api.http) = {
      patch: "/call_center/audit/forms/{id}"
      body: "*"
    };
  }

  rpc DeleteAuditForm(DeleteAuditFormRequest) returns (AuditForm) {
    option (google.api.http) = {
      delete: "/call_center/audit/forms/{id}"
    };
  }

  /* Audit rate */

  rpc CreateAuditFormRate(CreateAuditFormRateRequest) returns (AuditRate) {
    option (google.api.http) = {
      post: "/call_center/audit/rate"
      body: "*"
    };
  }

  rpc SearchAuditRate(SearchAuditRateRequest) returns (ListAuditRate) {
    option (google.api.http) = {
      get: "/call_center/audit/forms/{form_id}/rate"
    };
  }

  rpc ReadAuditRate(ReadAuditRateRequest) returns (AuditRate) {
    option (google.api.http) = {
      get: "/call_center/audit/rate/{id}"
    };
  }

  rpc UpdateAuditRate(UpdateAuditRateRequest) returns (AuditRate) {
    option (google.api.http) = {
      put: "/call_center/audit/rate/{id}"
      body: "*"
    };
  }

  rpc DeleteAuditRate(DeleteAuditRateRequest) returns (AuditRate) {
    option (google.api.http) = {
      delete: "/call_center/audit/rate/{id}"
    };
  }
}

enum AuditQuestionType {
  question_default = 0;
  question_score = 1;
  question_option = 2;
  question_yes = 3;
}

message SearchAuditRateRequest {
  int32 page = 1;
  int32 size = 2;
  string q = 3;
  string sort = 4;
  repeated string fields = 5;

  FilterBetween created_at = 6;
  repeated int32 id = 7;
  repeated string call_id = 8;
  int32 form_id = 9;
  repeated int64 rated_user = 10;
}

message ListAuditRate {
  bool next = 1;
  repeated AuditRate items = 2;
}

message CreateAuditFormRateRequest {
  Lookup form = 1;
  repeated CreateQuestionAnswerRequest answers = 2;
  string comment = 3;
  string call_id = 4;
}

message UpdateAuditRateRequest {
  int64 id = 1;
  repeated UpdateQuestionAnswerRequest answers = 2;
  string comment = 3;
}

message ReadAuditRateRequest {
  int64 id = 1;
}

message DeleteAuditRateRequest {
  int64 id = 1;
}

message QuestionAnswer {
  google.protobuf.FloatValue score = 4;
  int64 updated_at = 5;
  Lookup updated_by = 6;
  string comment = 7;
}

message CreateQuestionAnswerRequest {
  google.protobuf.FloatValue score = 1;
}

message UpdateQuestionAnswerRequest {
  google.protobuf.FloatValue score = 1;
  string comment = 2;
}

message AuditRate {
  int64 id = 1;
  int64 created_at = 2;
  Lookup created_by = 3;
  int64 updated_at = 4;
  Lookup updated_by = 5;
  Lookup form = 6;
  repeated Question questions = 7;
  repeated QuestionAnswer answers = 8;

  google.protobuf.FloatValue score_required = 9;
  google.protobuf.FloatValue score_optional = 10;

  string comment = 11;
  Lookup rated_user = 12;
  int64 select_yes_count = 13;
  int64 critical_count = 14;
}

message Question {
  message Option {
    string name = 1;
    float score = 2;
  }

  AuditQuestionType type = 1;
  bool required = 2;
  string question = 3;
  int32 min = 4;
  int32 max = 5;
  repeated Option options = 6;
  string description = 7;
  bool critical_violation = 8;
}

message PatchAuditFormRequest {
  int32 id = 1;
  repeated string fields = 2;

  string name = 3;
  string description = 4;
  bool enabled = 5;
  repeated Question questions = 6;
  repeated Lookup teams = 7;
//  bool archive = 8;
}

message DeleteAuditFormRequest {
  int32 id = 1;
}

message UpdateAuditFormRequest {
  int32 id = 1;
  string name = 2;
  string description = 3;
  bool enabled = 4;
  repeated Question questions = 5;
  repeated Lookup teams = 6;
//  bool archive = 7;
}

message ReadAuditFormRequest {
  int32 id = 1;
}

message CreateAuditFormRequest {
  string name = 1;
  string description = 2;
  bool enabled = 3;
  repeated Question questions = 4;
  repeated Lookup teams = 5;
}

message AuditForm {
  int32 id = 1;
  int64 created_at = 2;
  Lookup created_by = 3;
  int64 updated_at = 4;
  Lookup updated_by = 5;

  string name = 6;
  string description = 7;
  bool enabled = 8;
  repeated Question questions = 9;
  repeated Lookup teams = 10;
//  bool archive = 11;
  bool editable = 12;
}

message SearchAuditFormRequest {
  int32 page = 1;
  int32 size = 2;
  string q = 3;

  string sort = 4;
  repeated string fields = 5;

  repeated int32 id = 6;
  repeated int32 team_id = 7;
  bool enabled = 8;
//  bool archive = 9;
  bool editable = 10;
//  bool active = 11; // not archive

  string question = 12;
}

message ListAuditForm {
  bool next = 1;
  repeated AuditForm items = 2;
}