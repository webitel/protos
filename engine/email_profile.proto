syntax = "proto3";

package engine;

option go_package = "github.com/webitel/protos/engine";

import "const.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service EmailProfileService {
    // Create EmailProfile
    rpc CreateEmailProfile (CreateEmailProfileRequest) returns (EmailProfile) {
        option (google.api.http) = {
            post: "/email/profile"
            body: "*"
        };
    }

    // Search EmailProfile
    rpc SearchEmailProfile (SearchEmailProfileRequest) returns (ListEmailProfile) {
        option (google.api.http) = {
            get: "/email/profile"
        };
    }

    // EmailProfile item
    rpc ReadEmailProfile(ReadEmailProfileRequest) returns (EmailProfile) {
        option (google.api.http) = {
            get: "/email/profile/{id}"
        };
    }

    rpc PatchEmailProfile(PatchEmailProfileRequest) returns (EmailProfile) {
        option (google.api.http) = {
            patch: "/email/profile/{id}"
            body: "*"
        };
    }

    // Update EmailProfile
    rpc UpdateEmailProfile(UpdateEmailProfileRequest) returns (EmailProfile) {
        option (google.api.http) = {
            put: "/email/profile/{id}"
            body: "*"
        };
    }

    // Remove EmailProfile
    rpc DeleteEmailProfile(DeleteEmailProfileRequest) returns (EmailProfile) {
        option (google.api.http) = {
            delete: "/email/profile/{id}"
        };
    }
}

message ReadEmailProfileRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Read email profile"
            description: "Read email profile"
            required: ["id"]
        }
    };
    int64 id = 1;
}

message DeleteEmailProfileRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Delete email profile"
            description: "Delete email profile"
            required: ["id"]
        }
    };
    int64 id = 1;
}

message UpdateEmailProfileRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Update email profile request body"
            description: "Update email profile for gateway"
            required: ["id", "name", "schema", "host", "login", "mailbox", "smtp_port", "imap_port"]
        }
    };
    int64 id = 1;

    string name = 2;
    string description = 3;
    Lookup schema = 4;
    bool enabled = 5;
    string host = 6;
    string login = 7;
    string mailbox = 8;
    int32 smtp_port = 9;
    int32 imap_port = 10;
    string password = 11;
}

message SearchEmailProfileRequest {
    int32 page = 1;
    int32 size = 2;
    string q = 3;
    string sort = 4;
    repeated string fields = 5;

}

message ListEmailProfile {
    bool next = 1;
    repeated EmailProfile items = 2;
}

message EmailProfile {
    int64 id = 1;
    int64 created_at = 3;
    Lookup created_by = 4;
    int64 updated_at = 5;
    Lookup updated_by = 6;
    string name = 7;
    string description = 8;
    Lookup schema = 9;
    bool enabled = 10;
    string host = 11;
    string login = 12;
    string mailbox = 13;
    int32 smtp_port = 14;
    int32 imap_port = 15;
}

message CreateEmailProfileRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Create email profile request body"
            description: "Create email profile for gateway"
            required: ["name", "schema", "host", "login", "mailbox", "smtp_port", "imap_port"]
        }
    };
    string name = 2;
    string description = 3;
    Lookup schema = 4;
    bool enabled = 5;
    string host = 6;
    string login = 7;
    string password = 8;
    string mailbox = 9;
    int32 smtp_port = 10;
    int32 imap_port = 11;
}

message PatchEmailProfileRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            title: "Update email profile request body"
            description: "Update email profile for gateway"
            required: ["id"]
        }
    };
    int64 id = 1;

    string name = 2;
    string description = 3;
    Lookup schema = 4;
    bool enabled = 5;
    string host = 6;
    string login = 7;
    string mailbox = 8;
    int32 smtp_port = 9;
    int32 imap_port = 10;
    string password = 11;

    repeated string fields = 50;
}