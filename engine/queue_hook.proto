syntax = "proto3";

package engine;

option go_package = "github.com/webitel/protos/engine";

import "google/api/annotations.proto";
import "const.proto";

service QueueHookService {
    rpc CreateQueueHook (CreateQueueHookRequest) returns (QueueHook) {
        option (google.api.http) = {
            post: "/call_center/queues/{queue_id}/hooks"
            body: "*"
        };
    }
    rpc SearchQueueHook (SearchQueueHookRequest) returns (ListQueueHook) {
        option (google.api.http) = {
            get: "/call_center/queues/{queue_id}/hooks"
        };
    }
    rpc ReadQueueHook (ReadQueueHookRequest) returns (QueueHook) {
        option (google.api.http) = {
            get: "/call_center/queues/{queue_id}/hooks/{id}"
        };
    }
    rpc UpdateQueueHook (UpdateQueueHookRequest) returns (QueueHook) {
        option (google.api.http) = {
            put: "/call_center/queues/{queue_id}/hooks/{id}"
            body: "*"
        };
    }
    rpc PatchQueueHook(PatchQueueHookRequest) returns (QueueHook) {
        option (google.api.http) = {
            patch: "/call_center/queues/{queue_id}/hooks/{id}"
            body: "*"
        };
    }
    rpc DeleteQueueHook(DeleteQueueHookRequest) returns (QueueHook) {
        option (google.api.http) = {
            delete: "/call_center/queues/{queue_id}/hooks/{id}"
        };
    }
}

message DeleteQueueHookRequest {
    uint32 queue_id = 1;
    uint32 id = 2;
}

message PatchQueueHookRequest {
    repeated string fields = 1;
    uint32 queue_id = 2;
    uint32 id = 3;
    Lookup schema = 4;
    string event = 5;
    bool enabled = 6;
    repeated string properties = 7;
}

message UpdateQueueHookRequest {
    uint32 queue_id = 1;
    uint32 id = 2;
    Lookup schema = 3;
    string event = 4;
    bool enabled = 5;
    repeated string properties = 6;
}

message SearchQueueHookRequest {
    uint32 queue_id = 1;
    int32 page = 2;
    int32 size = 3;
    string q = 4;

    repeated string fields = 5;
    string sort = 6;

    repeated uint32 id = 7;
    repeated uint32 schema_id = 8;
    repeated string event = 9;
}

message CreateQueueHookRequest {
    uint32 queue_id = 1;
    Lookup schema = 2;
    string event = 3;
    bool enabled = 4;
    repeated string properties = 5;
}

message ReadQueueHookRequest {
    uint32 queue_id = 1;
    uint32 id = 2;
}

message QueueHook {
    uint32 id = 1;
    Lookup schema = 2;
    string event = 3;
    bool enabled = 4;
    repeated string properties = 5;
}

message ListQueueHook {
    bool next = 1;
    repeated QueueHook items = 2;
}