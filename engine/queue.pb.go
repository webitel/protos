// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue.proto

package engine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchQueueReportGeneralRequest struct {
	Page                 int32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	JoinedAt             *FilterBetween `protobuf:"bytes,3,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	DomainId             int64          `protobuf:"varint,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Fields               []string       `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort                 string         `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Q                    string         `protobuf:"bytes,7,opt,name=q,proto3" json:"q,omitempty"`
	QueueId              []int32        `protobuf:"varint,8,rep,packed,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	TeamId               []int32        `protobuf:"varint,9,rep,packed,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Type                 []int32        `protobuf:"varint,10,rep,packed,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchQueueReportGeneralRequest) Reset()         { *m = SearchQueueReportGeneralRequest{} }
func (m *SearchQueueReportGeneralRequest) String() string { return proto.CompactTextString(m) }
func (*SearchQueueReportGeneralRequest) ProtoMessage()    {}
func (*SearchQueueReportGeneralRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{0}
}

func (m *SearchQueueReportGeneralRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQueueReportGeneralRequest.Unmarshal(m, b)
}
func (m *SearchQueueReportGeneralRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQueueReportGeneralRequest.Marshal(b, m, deterministic)
}
func (m *SearchQueueReportGeneralRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQueueReportGeneralRequest.Merge(m, src)
}
func (m *SearchQueueReportGeneralRequest) XXX_Size() int {
	return xxx_messageInfo_SearchQueueReportGeneralRequest.Size(m)
}
func (m *SearchQueueReportGeneralRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQueueReportGeneralRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQueueReportGeneralRequest proto.InternalMessageInfo

func (m *SearchQueueReportGeneralRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchQueueReportGeneralRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SearchQueueReportGeneralRequest) GetJoinedAt() *FilterBetween {
	if m != nil {
		return m.JoinedAt
	}
	return nil
}

func (m *SearchQueueReportGeneralRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *SearchQueueReportGeneralRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *SearchQueueReportGeneralRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *SearchQueueReportGeneralRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *SearchQueueReportGeneralRequest) GetQueueId() []int32 {
	if m != nil {
		return m.QueueId
	}
	return nil
}

func (m *SearchQueueReportGeneralRequest) GetTeamId() []int32 {
	if m != nil {
		return m.TeamId
	}
	return nil
}

func (m *SearchQueueReportGeneralRequest) GetType() []int32 {
	if m != nil {
		return m.Type
	}
	return nil
}

type ListReportGeneral struct {
	Next                 bool                  `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items                []*QueueReportGeneral `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListReportGeneral) Reset()         { *m = ListReportGeneral{} }
func (m *ListReportGeneral) String() string { return proto.CompactTextString(m) }
func (*ListReportGeneral) ProtoMessage()    {}
func (*ListReportGeneral) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{1}
}

func (m *ListReportGeneral) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReportGeneral.Unmarshal(m, b)
}
func (m *ListReportGeneral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReportGeneral.Marshal(b, m, deterministic)
}
func (m *ListReportGeneral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReportGeneral.Merge(m, src)
}
func (m *ListReportGeneral) XXX_Size() int {
	return xxx_messageInfo_ListReportGeneral.Size(m)
}
func (m *ListReportGeneral) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReportGeneral.DiscardUnknown(m)
}

var xxx_messageInfo_ListReportGeneral proto.InternalMessageInfo

func (m *ListReportGeneral) GetNext() bool {
	if m != nil {
		return m.Next
	}
	return false
}

func (m *ListReportGeneral) GetItems() []*QueueReportGeneral {
	if m != nil {
		return m.Items
	}
	return nil
}

type QueueReportGeneral struct {
	Queue                *Lookup  `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Team                 *Lookup  `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Online               int32    `protobuf:"varint,3,opt,name=online,proto3" json:"online,omitempty"`
	Pause                int32    `protobuf:"varint,4,opt,name=pause,proto3" json:"pause,omitempty"`
	Bridged              float32  `protobuf:"fixed32,5,opt,name=bridged,proto3" json:"bridged,omitempty"`
	Waiting              int64    `protobuf:"varint,6,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Processed            int64    `protobuf:"varint,7,opt,name=processed,proto3" json:"processed,omitempty"`
	Count                int64    `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	Abandoned            float32  `protobuf:"fixed32,9,opt,name=abandoned,proto3" json:"abandoned,omitempty"`
	SumBillSec           float32  `protobuf:"fixed32,10,opt,name=sum_bill_sec,json=sumBillSec,proto3" json:"sum_bill_sec,omitempty"`
	AvgWrapSec           float32  `protobuf:"fixed32,11,opt,name=avg_wrap_sec,json=avgWrapSec,proto3" json:"avg_wrap_sec,omitempty"`
	AvgAwtSec            float32  `protobuf:"fixed32,12,opt,name=avg_awt_sec,json=avgAwtSec,proto3" json:"avg_awt_sec,omitempty"`
	MaxAwtSec            float32  `protobuf:"fixed32,13,opt,name=max_awt_sec,json=maxAwtSec,proto3" json:"max_awt_sec,omitempty"`
	AvgAsaSec            float32  `protobuf:"fixed32,14,opt,name=avg_asa_sec,json=avgAsaSec,proto3" json:"avg_asa_sec,omitempty"`
	AvgAhtSec            float32  `protobuf:"fixed32,15,opt,name=avg_aht_sec,json=avgAhtSec,proto3" json:"avg_aht_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueReportGeneral) Reset()         { *m = QueueReportGeneral{} }
func (m *QueueReportGeneral) String() string { return proto.CompactTextString(m) }
func (*QueueReportGeneral) ProtoMessage()    {}
func (*QueueReportGeneral) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{2}
}

func (m *QueueReportGeneral) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueReportGeneral.Unmarshal(m, b)
}
func (m *QueueReportGeneral) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueReportGeneral.Marshal(b, m, deterministic)
}
func (m *QueueReportGeneral) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueReportGeneral.Merge(m, src)
}
func (m *QueueReportGeneral) XXX_Size() int {
	return xxx_messageInfo_QueueReportGeneral.Size(m)
}
func (m *QueueReportGeneral) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueReportGeneral.DiscardUnknown(m)
}

var xxx_messageInfo_QueueReportGeneral proto.InternalMessageInfo

func (m *QueueReportGeneral) GetQueue() *Lookup {
	if m != nil {
		return m.Queue
	}
	return nil
}

func (m *QueueReportGeneral) GetTeam() *Lookup {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *QueueReportGeneral) GetOnline() int32 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *QueueReportGeneral) GetPause() int32 {
	if m != nil {
		return m.Pause
	}
	return 0
}

func (m *QueueReportGeneral) GetBridged() float32 {
	if m != nil {
		return m.Bridged
	}
	return 0
}

func (m *QueueReportGeneral) GetWaiting() int64 {
	if m != nil {
		return m.Waiting
	}
	return 0
}

func (m *QueueReportGeneral) GetProcessed() int64 {
	if m != nil {
		return m.Processed
	}
	return 0
}

func (m *QueueReportGeneral) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueueReportGeneral) GetAbandoned() float32 {
	if m != nil {
		return m.Abandoned
	}
	return 0
}

func (m *QueueReportGeneral) GetSumBillSec() float32 {
	if m != nil {
		return m.SumBillSec
	}
	return 0
}

func (m *QueueReportGeneral) GetAvgWrapSec() float32 {
	if m != nil {
		return m.AvgWrapSec
	}
	return 0
}

func (m *QueueReportGeneral) GetAvgAwtSec() float32 {
	if m != nil {
		return m.AvgAwtSec
	}
	return 0
}

func (m *QueueReportGeneral) GetMaxAwtSec() float32 {
	if m != nil {
		return m.MaxAwtSec
	}
	return 0
}

func (m *QueueReportGeneral) GetAvgAsaSec() float32 {
	if m != nil {
		return m.AvgAsaSec
	}
	return 0
}

func (m *QueueReportGeneral) GetAvgAhtSec() float32 {
	if m != nil {
		return m.AvgAhtSec
	}
	return 0
}

type PatchQueueRequest struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Strategy             string            `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Enabled              bool              `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Payload              *_struct.Value    `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Calendar             *Lookup           `protobuf:"bytes,5,opt,name=calendar,proto3" json:"calendar,omitempty"`
	Priority             int32             `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	Name                 string            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout              int32             `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DncList              *Lookup           `protobuf:"bytes,10,opt,name=dnc_list,json=dncList,proto3" json:"dnc_list,omitempty"`
	SecLocateAgent       int32             `protobuf:"varint,11,opt,name=sec_locate_agent,json=secLocateAgent,proto3" json:"sec_locate_agent,omitempty"`
	Type                 int32             `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Team                 *Lookup           `protobuf:"bytes,13,opt,name=team,proto3" json:"team,omitempty"`
	Description          string            `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	Schema               *Lookup           `protobuf:"bytes,15,opt,name=schema,proto3" json:"schema,omitempty"`
	Ringtone             *Lookup           `protobuf:"bytes,16,opt,name=ringtone,proto3" json:"ringtone,omitempty"`
	Fields               []string          `protobuf:"bytes,17,rep,name=fields,proto3" json:"fields,omitempty"`
	DomainId             int64             `protobuf:"varint,18,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DoSchema             *Lookup           `protobuf:"bytes,19,opt,name=do_schema,json=doSchema,proto3" json:"do_schema,omitempty"`
	AfterSchema          *Lookup           `protobuf:"bytes,20,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	StickyAgent          bool              `protobuf:"varint,21,opt,name=sticky_agent,json=stickyAgent,proto3" json:"sticky_agent,omitempty"`
	Processing           bool              `protobuf:"varint,22,opt,name=processing,proto3" json:"processing,omitempty"`
	ProcessingSec        uint32            `protobuf:"varint,23,opt,name=processing_sec,json=processingSec,proto3" json:"processing_sec,omitempty"`
	ProcessingRenewalSec uint32            `protobuf:"varint,24,opt,name=processing_renewal_sec,json=processingRenewalSec,proto3" json:"processing_renewal_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PatchQueueRequest) Reset()         { *m = PatchQueueRequest{} }
func (m *PatchQueueRequest) String() string { return proto.CompactTextString(m) }
func (*PatchQueueRequest) ProtoMessage()    {}
func (*PatchQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{3}
}

func (m *PatchQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatchQueueRequest.Unmarshal(m, b)
}
func (m *PatchQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatchQueueRequest.Marshal(b, m, deterministic)
}
func (m *PatchQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatchQueueRequest.Merge(m, src)
}
func (m *PatchQueueRequest) XXX_Size() int {
	return xxx_messageInfo_PatchQueueRequest.Size(m)
}
func (m *PatchQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PatchQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PatchQueueRequest proto.InternalMessageInfo

func (m *PatchQueueRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PatchQueueRequest) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *PatchQueueRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PatchQueueRequest) GetPayload() *_struct.Value {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PatchQueueRequest) GetCalendar() *Lookup {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *PatchQueueRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *PatchQueueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PatchQueueRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *PatchQueueRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *PatchQueueRequest) GetDncList() *Lookup {
	if m != nil {
		return m.DncList
	}
	return nil
}

func (m *PatchQueueRequest) GetSecLocateAgent() int32 {
	if m != nil {
		return m.SecLocateAgent
	}
	return 0
}

func (m *PatchQueueRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PatchQueueRequest) GetTeam() *Lookup {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *PatchQueueRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PatchQueueRequest) GetSchema() *Lookup {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *PatchQueueRequest) GetRingtone() *Lookup {
	if m != nil {
		return m.Ringtone
	}
	return nil
}

func (m *PatchQueueRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *PatchQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *PatchQueueRequest) GetDoSchema() *Lookup {
	if m != nil {
		return m.DoSchema
	}
	return nil
}

func (m *PatchQueueRequest) GetAfterSchema() *Lookup {
	if m != nil {
		return m.AfterSchema
	}
	return nil
}

func (m *PatchQueueRequest) GetStickyAgent() bool {
	if m != nil {
		return m.StickyAgent
	}
	return false
}

func (m *PatchQueueRequest) GetProcessing() bool {
	if m != nil {
		return m.Processing
	}
	return false
}

func (m *PatchQueueRequest) GetProcessingSec() uint32 {
	if m != nil {
		return m.ProcessingSec
	}
	return 0
}

func (m *PatchQueueRequest) GetProcessingRenewalSec() uint32 {
	if m != nil {
		return m.ProcessingRenewalSec
	}
	return 0
}

type DeleteQueueRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64    `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteQueueRequest) Reset()         { *m = DeleteQueueRequest{} }
func (m *DeleteQueueRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteQueueRequest) ProtoMessage()    {}
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{4}
}

func (m *DeleteQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteQueueRequest.Unmarshal(m, b)
}
func (m *DeleteQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteQueueRequest.Marshal(b, m, deterministic)
}
func (m *DeleteQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteQueueRequest.Merge(m, src)
}
func (m *DeleteQueueRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteQueueRequest.Size(m)
}
func (m *DeleteQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteQueueRequest proto.InternalMessageInfo

func (m *DeleteQueueRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeleteQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type UpdateQueueRequest struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Strategy             string            `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Enabled              bool              `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Payload              *_struct.Value    `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Calendar             *Lookup           `protobuf:"bytes,5,opt,name=calendar,proto3" json:"calendar,omitempty"`
	Priority             int32             `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	Name                 string            `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,8,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout              int32             `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DncList              *Lookup           `protobuf:"bytes,10,opt,name=dnc_list,json=dncList,proto3" json:"dnc_list,omitempty"`
	SecLocateAgent       int32             `protobuf:"varint,11,opt,name=sec_locate_agent,json=secLocateAgent,proto3" json:"sec_locate_agent,omitempty"`
	Type                 int32             `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Team                 *Lookup           `protobuf:"bytes,13,opt,name=team,proto3" json:"team,omitempty"`
	Description          string            `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	Schema               *Lookup           `protobuf:"bytes,15,opt,name=schema,proto3" json:"schema,omitempty"`
	Ringtone             *Lookup           `protobuf:"bytes,16,opt,name=ringtone,proto3" json:"ringtone,omitempty"`
	DomainId             int64             `protobuf:"varint,17,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DoSchema             *Lookup           `protobuf:"bytes,18,opt,name=do_schema,json=doSchema,proto3" json:"do_schema,omitempty"`
	AfterSchema          *Lookup           `protobuf:"bytes,19,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	StickyAgent          bool              `protobuf:"varint,20,opt,name=sticky_agent,json=stickyAgent,proto3" json:"sticky_agent,omitempty"`
	Processing           bool              `protobuf:"varint,21,opt,name=processing,proto3" json:"processing,omitempty"`
	ProcessingSec        uint32            `protobuf:"varint,22,opt,name=processing_sec,json=processingSec,proto3" json:"processing_sec,omitempty"`
	ProcessingRenewalSec uint32            `protobuf:"varint,23,opt,name=processing_renewal_sec,json=processingRenewalSec,proto3" json:"processing_renewal_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateQueueRequest) Reset()         { *m = UpdateQueueRequest{} }
func (m *UpdateQueueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateQueueRequest) ProtoMessage()    {}
func (*UpdateQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{5}
}

func (m *UpdateQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateQueueRequest.Unmarshal(m, b)
}
func (m *UpdateQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateQueueRequest.Marshal(b, m, deterministic)
}
func (m *UpdateQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateQueueRequest.Merge(m, src)
}
func (m *UpdateQueueRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateQueueRequest.Size(m)
}
func (m *UpdateQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateQueueRequest proto.InternalMessageInfo

func (m *UpdateQueueRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateQueueRequest) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *UpdateQueueRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *UpdateQueueRequest) GetPayload() *_struct.Value {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *UpdateQueueRequest) GetCalendar() *Lookup {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *UpdateQueueRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *UpdateQueueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateQueueRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *UpdateQueueRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *UpdateQueueRequest) GetDncList() *Lookup {
	if m != nil {
		return m.DncList
	}
	return nil
}

func (m *UpdateQueueRequest) GetSecLocateAgent() int32 {
	if m != nil {
		return m.SecLocateAgent
	}
	return 0
}

func (m *UpdateQueueRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UpdateQueueRequest) GetTeam() *Lookup {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *UpdateQueueRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateQueueRequest) GetSchema() *Lookup {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *UpdateQueueRequest) GetRingtone() *Lookup {
	if m != nil {
		return m.Ringtone
	}
	return nil
}

func (m *UpdateQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *UpdateQueueRequest) GetDoSchema() *Lookup {
	if m != nil {
		return m.DoSchema
	}
	return nil
}

func (m *UpdateQueueRequest) GetAfterSchema() *Lookup {
	if m != nil {
		return m.AfterSchema
	}
	return nil
}

func (m *UpdateQueueRequest) GetStickyAgent() bool {
	if m != nil {
		return m.StickyAgent
	}
	return false
}

func (m *UpdateQueueRequest) GetProcessing() bool {
	if m != nil {
		return m.Processing
	}
	return false
}

func (m *UpdateQueueRequest) GetProcessingSec() uint32 {
	if m != nil {
		return m.ProcessingSec
	}
	return 0
}

func (m *UpdateQueueRequest) GetProcessingRenewalSec() uint32 {
	if m != nil {
		return m.ProcessingRenewalSec
	}
	return 0
}

type ReadQueueRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64    `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadQueueRequest) Reset()         { *m = ReadQueueRequest{} }
func (m *ReadQueueRequest) String() string { return proto.CompactTextString(m) }
func (*ReadQueueRequest) ProtoMessage()    {}
func (*ReadQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{6}
}

func (m *ReadQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadQueueRequest.Unmarshal(m, b)
}
func (m *ReadQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadQueueRequest.Marshal(b, m, deterministic)
}
func (m *ReadQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadQueueRequest.Merge(m, src)
}
func (m *ReadQueueRequest) XXX_Size() int {
	return xxx_messageInfo_ReadQueueRequest.Size(m)
}
func (m *ReadQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadQueueRequest proto.InternalMessageInfo

func (m *ReadQueueRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type SearchQueueRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q                    string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	DomainId             int64    `protobuf:"varint,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Fields               []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort                 string   `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Id                   []string `protobuf:"bytes,7,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchQueueRequest) Reset()         { *m = SearchQueueRequest{} }
func (m *SearchQueueRequest) String() string { return proto.CompactTextString(m) }
func (*SearchQueueRequest) ProtoMessage()    {}
func (*SearchQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{7}
}

func (m *SearchQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQueueRequest.Unmarshal(m, b)
}
func (m *SearchQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQueueRequest.Marshal(b, m, deterministic)
}
func (m *SearchQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQueueRequest.Merge(m, src)
}
func (m *SearchQueueRequest) XXX_Size() int {
	return xxx_messageInfo_SearchQueueRequest.Size(m)
}
func (m *SearchQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQueueRequest proto.InternalMessageInfo

func (m *SearchQueueRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchQueueRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SearchQueueRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *SearchQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *SearchQueueRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *SearchQueueRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *SearchQueueRequest) GetId() []string {
	if m != nil {
		return m.Id
	}
	return nil
}

type CreateQueueRequest struct {
	Strategy             string            `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Enabled              bool              `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Payload              *_struct.Value    `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Calendar             *Lookup           `protobuf:"bytes,4,opt,name=calendar,proto3" json:"calendar,omitempty"`
	Priority             int32             `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Name                 string            `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout              int32             `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DncList              *Lookup           `protobuf:"bytes,9,opt,name=dnc_list,json=dncList,proto3" json:"dnc_list,omitempty"`
	SecLocateAgent       int32             `protobuf:"varint,10,opt,name=sec_locate_agent,json=secLocateAgent,proto3" json:"sec_locate_agent,omitempty"`
	Type                 int32             `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Team                 *Lookup           `protobuf:"bytes,12,opt,name=team,proto3" json:"team,omitempty"`
	Description          string            `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Schema               *Lookup           `protobuf:"bytes,14,opt,name=schema,proto3" json:"schema,omitempty"`
	Ringtone             *Lookup           `protobuf:"bytes,15,opt,name=ringtone,proto3" json:"ringtone,omitempty"`
	DomainId             int64             `protobuf:"varint,16,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DoSchema             *Lookup           `protobuf:"bytes,17,opt,name=do_schema,json=doSchema,proto3" json:"do_schema,omitempty"`
	AfterSchema          *Lookup           `protobuf:"bytes,18,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	StickyAgent          bool              `protobuf:"varint,19,opt,name=sticky_agent,json=stickyAgent,proto3" json:"sticky_agent,omitempty"`
	Processing           bool              `protobuf:"varint,20,opt,name=processing,proto3" json:"processing,omitempty"`
	ProcessingSec        uint32            `protobuf:"varint,21,opt,name=processing_sec,json=processingSec,proto3" json:"processing_sec,omitempty"`
	ProcessingRenewalSec uint32            `protobuf:"varint,22,opt,name=processing_renewal_sec,json=processingRenewalSec,proto3" json:"processing_renewal_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateQueueRequest) Reset()         { *m = CreateQueueRequest{} }
func (m *CreateQueueRequest) String() string { return proto.CompactTextString(m) }
func (*CreateQueueRequest) ProtoMessage()    {}
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{8}
}

func (m *CreateQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateQueueRequest.Unmarshal(m, b)
}
func (m *CreateQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateQueueRequest.Marshal(b, m, deterministic)
}
func (m *CreateQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateQueueRequest.Merge(m, src)
}
func (m *CreateQueueRequest) XXX_Size() int {
	return xxx_messageInfo_CreateQueueRequest.Size(m)
}
func (m *CreateQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateQueueRequest proto.InternalMessageInfo

func (m *CreateQueueRequest) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *CreateQueueRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *CreateQueueRequest) GetPayload() *_struct.Value {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CreateQueueRequest) GetCalendar() *Lookup {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *CreateQueueRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *CreateQueueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateQueueRequest) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *CreateQueueRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *CreateQueueRequest) GetDncList() *Lookup {
	if m != nil {
		return m.DncList
	}
	return nil
}

func (m *CreateQueueRequest) GetSecLocateAgent() int32 {
	if m != nil {
		return m.SecLocateAgent
	}
	return 0
}

func (m *CreateQueueRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateQueueRequest) GetTeam() *Lookup {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *CreateQueueRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateQueueRequest) GetSchema() *Lookup {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CreateQueueRequest) GetRingtone() *Lookup {
	if m != nil {
		return m.Ringtone
	}
	return nil
}

func (m *CreateQueueRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *CreateQueueRequest) GetDoSchema() *Lookup {
	if m != nil {
		return m.DoSchema
	}
	return nil
}

func (m *CreateQueueRequest) GetAfterSchema() *Lookup {
	if m != nil {
		return m.AfterSchema
	}
	return nil
}

func (m *CreateQueueRequest) GetStickyAgent() bool {
	if m != nil {
		return m.StickyAgent
	}
	return false
}

func (m *CreateQueueRequest) GetProcessing() bool {
	if m != nil {
		return m.Processing
	}
	return false
}

func (m *CreateQueueRequest) GetProcessingSec() uint32 {
	if m != nil {
		return m.ProcessingSec
	}
	return 0
}

func (m *CreateQueueRequest) GetProcessingRenewalSec() uint32 {
	if m != nil {
		return m.ProcessingRenewalSec
	}
	return 0
}

type Queue struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64             `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt            int64             `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *Lookup           `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt            int64             `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy            *Lookup           `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Strategy             string            `protobuf:"bytes,7,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Enabled              bool              `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Payload              *_struct.Value    `protobuf:"bytes,9,opt,name=payload,proto3" json:"payload,omitempty"`
	Calendar             *Lookup           `protobuf:"bytes,10,opt,name=calendar,proto3" json:"calendar,omitempty"`
	Priority             int32             `protobuf:"varint,11,opt,name=priority,proto3" json:"priority,omitempty"`
	Name                 string            `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Variables            map[string]string `protobuf:"bytes,13,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout              int32             `protobuf:"varint,14,opt,name=timeout,proto3" json:"timeout,omitempty"`
	DncList              *Lookup           `protobuf:"bytes,15,opt,name=dnc_list,json=dncList,proto3" json:"dnc_list,omitempty"`
	SecLocateAgent       int32             `protobuf:"varint,16,opt,name=sec_locate_agent,json=secLocateAgent,proto3" json:"sec_locate_agent,omitempty"`
	Type                 int32             `protobuf:"varint,17,opt,name=type,proto3" json:"type,omitempty"`
	Description          string            `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	Team                 *Lookup           `protobuf:"bytes,19,opt,name=team,proto3" json:"team,omitempty"`
	Schema               *Lookup           `protobuf:"bytes,20,opt,name=schema,proto3" json:"schema,omitempty"`
	Count                int32             `protobuf:"varint,21,opt,name=count,proto3" json:"count,omitempty"`
	Waiting              int32             `protobuf:"varint,22,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Active               int32             `protobuf:"varint,23,opt,name=active,proto3" json:"active,omitempty"`
	Ringtone             *Lookup           `protobuf:"bytes,24,opt,name=ringtone,proto3" json:"ringtone,omitempty"`
	DoSchema             *Lookup           `protobuf:"bytes,25,opt,name=do_schema,json=doSchema,proto3" json:"do_schema,omitempty"`
	AfterSchema          *Lookup           `protobuf:"bytes,26,opt,name=after_schema,json=afterSchema,proto3" json:"after_schema,omitempty"`
	StickyAgent          bool              `protobuf:"varint,27,opt,name=sticky_agent,json=stickyAgent,proto3" json:"sticky_agent,omitempty"`
	Processing           bool              `protobuf:"varint,28,opt,name=processing,proto3" json:"processing,omitempty"`
	ProcessingSec        uint32            `protobuf:"varint,29,opt,name=processing_sec,json=processingSec,proto3" json:"processing_sec,omitempty"`
	ProcessingRenewalSec uint32            `protobuf:"varint,30,opt,name=processing_renewal_sec,json=processingRenewalSec,proto3" json:"processing_renewal_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}
func (*Queue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{9}
}

func (m *Queue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queue.Unmarshal(m, b)
}
func (m *Queue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queue.Marshal(b, m, deterministic)
}
func (m *Queue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queue.Merge(m, src)
}
func (m *Queue) XXX_Size() int {
	return xxx_messageInfo_Queue.Size(m)
}
func (m *Queue) XXX_DiscardUnknown() {
	xxx_messageInfo_Queue.DiscardUnknown(m)
}

var xxx_messageInfo_Queue proto.InternalMessageInfo

func (m *Queue) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Queue) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

func (m *Queue) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Queue) GetCreatedBy() *Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *Queue) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Queue) GetUpdatedBy() *Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *Queue) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Queue) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Queue) GetPayload() *_struct.Value {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Queue) GetCalendar() *Lookup {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *Queue) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Queue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Queue) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *Queue) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Queue) GetDncList() *Lookup {
	if m != nil {
		return m.DncList
	}
	return nil
}

func (m *Queue) GetSecLocateAgent() int32 {
	if m != nil {
		return m.SecLocateAgent
	}
	return 0
}

func (m *Queue) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Queue) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Queue) GetTeam() *Lookup {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *Queue) GetSchema() *Lookup {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Queue) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Queue) GetWaiting() int32 {
	if m != nil {
		return m.Waiting
	}
	return 0
}

func (m *Queue) GetActive() int32 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *Queue) GetRingtone() *Lookup {
	if m != nil {
		return m.Ringtone
	}
	return nil
}

func (m *Queue) GetDoSchema() *Lookup {
	if m != nil {
		return m.DoSchema
	}
	return nil
}

func (m *Queue) GetAfterSchema() *Lookup {
	if m != nil {
		return m.AfterSchema
	}
	return nil
}

func (m *Queue) GetStickyAgent() bool {
	if m != nil {
		return m.StickyAgent
	}
	return false
}

func (m *Queue) GetProcessing() bool {
	if m != nil {
		return m.Processing
	}
	return false
}

func (m *Queue) GetProcessingSec() uint32 {
	if m != nil {
		return m.ProcessingSec
	}
	return 0
}

func (m *Queue) GetProcessingRenewalSec() uint32 {
	if m != nil {
		return m.ProcessingRenewalSec
	}
	return 0
}

type ListQueue struct {
	Next                 bool     `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items                []*Queue `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQueue) Reset()         { *m = ListQueue{} }
func (m *ListQueue) String() string { return proto.CompactTextString(m) }
func (*ListQueue) ProtoMessage()    {}
func (*ListQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{10}
}

func (m *ListQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQueue.Unmarshal(m, b)
}
func (m *ListQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQueue.Marshal(b, m, deterministic)
}
func (m *ListQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQueue.Merge(m, src)
}
func (m *ListQueue) XXX_Size() int {
	return xxx_messageInfo_ListQueue.Size(m)
}
func (m *ListQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQueue.DiscardUnknown(m)
}

var xxx_messageInfo_ListQueue proto.InternalMessageInfo

func (m *ListQueue) GetNext() bool {
	if m != nil {
		return m.Next
	}
	return false
}

func (m *ListQueue) GetItems() []*Queue {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchQueueReportGeneralRequest)(nil), "engine.SearchQueueReportGeneralRequest")
	proto.RegisterType((*ListReportGeneral)(nil), "engine.ListReportGeneral")
	proto.RegisterType((*QueueReportGeneral)(nil), "engine.QueueReportGeneral")
	proto.RegisterType((*PatchQueueRequest)(nil), "engine.PatchQueueRequest")
	proto.RegisterMapType((map[string]string)(nil), "engine.PatchQueueRequest.VariablesEntry")
	proto.RegisterType((*DeleteQueueRequest)(nil), "engine.DeleteQueueRequest")
	proto.RegisterType((*UpdateQueueRequest)(nil), "engine.UpdateQueueRequest")
	proto.RegisterMapType((map[string]string)(nil), "engine.UpdateQueueRequest.VariablesEntry")
	proto.RegisterType((*ReadQueueRequest)(nil), "engine.ReadQueueRequest")
	proto.RegisterType((*SearchQueueRequest)(nil), "engine.SearchQueueRequest")
	proto.RegisterType((*CreateQueueRequest)(nil), "engine.CreateQueueRequest")
	proto.RegisterMapType((map[string]string)(nil), "engine.CreateQueueRequest.VariablesEntry")
	proto.RegisterType((*Queue)(nil), "engine.Queue")
	proto.RegisterMapType((map[string]string)(nil), "engine.Queue.VariablesEntry")
	proto.RegisterType((*ListQueue)(nil), "engine.ListQueue")
}

func init() { proto.RegisterFile("queue.proto", fileDescriptor_96e4d7d76a734cd8) }

var fileDescriptor_96e4d7d76a734cd8 = []byte{
	// 1601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x98, 0xdf, 0x6e, 0x1b, 0x45,
	0x17, 0xc0, 0x65, 0x3b, 0xeb, 0x3f, 0xb3, 0x8e, 0x9b, 0x4c, 0x12, 0x77, 0xe3, 0xa6, 0xf9, 0xfc,
	0xb9, 0x5f, 0x3f, 0xdc, 0x56, 0xd8, 0xc5, 0x70, 0x81, 0x2a, 0x24, 0x94, 0x50, 0x5a, 0x55, 0xea,
	0x05, 0x4c, 0x44, 0xa1, 0x45, 0xc8, 0x1a, 0xef, 0x9e, 0x3a, 0x43, 0xd7, 0xbb, 0xce, 0xee, 0x38,
	0xa9, 0x41, 0xdc, 0x70, 0xcb, 0x25, 0x57, 0x48, 0xdc, 0x71, 0xc5, 0x53, 0x20, 0x9e, 0x01, 0x89,
	0x27, 0xe0, 0x0d, 0x78, 0x01, 0x34, 0x67, 0xbc, 0xb6, 0x37, 0xf6, 0x3a, 0xd9, 0x8a, 0xde, 0x20,
	0xee, 0xe6, 0xfc, 0x99, 0x33, 0xb3, 0x67, 0xe6, 0xfc, 0x76, 0x66, 0x88, 0x79, 0x32, 0x82, 0x11,
	0xb4, 0x86, 0x81, 0x2f, 0x7d, 0x9a, 0x07, 0xaf, 0x2f, 0x3c, 0xa8, 0x99, 0xb6, 0xef, 0x85, 0x52,
	0x2b, 0x6b, 0x7b, 0x7d, 0xdf, 0xef, 0xbb, 0xd0, 0x46, 0xa9, 0x37, 0x7a, 0xde, 0x0e, 0x65, 0x30,
	0xb2, 0xcf, 0x5b, 0xf9, 0x50, 0xb4, 0xb9, 0xe7, 0xf9, 0x92, 0x4b, 0xe1, 0x7b, 0xa1, 0xb6, 0x36,
	0x7e, 0xcc, 0x92, 0xff, 0x1c, 0x01, 0x0f, 0xec, 0xe3, 0x8f, 0xd5, 0x30, 0x0c, 0x86, 0x7e, 0x20,
	0x1f, 0x82, 0x07, 0x01, 0x77, 0x19, 0x9c, 0x8c, 0x20, 0x94, 0x94, 0x92, 0xb5, 0x21, 0xef, 0x83,
	0x95, 0xa9, 0x67, 0x9a, 0x06, 0xc3, 0xb6, 0xd2, 0x85, 0xe2, 0x2b, 0xb0, 0xb2, 0x5a, 0xa7, 0xda,
	0xb4, 0x43, 0x4a, 0x5f, 0xfa, 0xc2, 0x03, 0xa7, 0xcb, 0xa5, 0x95, 0xab, 0x67, 0x9a, 0x66, 0x67,
	0xa7, 0xa5, 0x27, 0xdc, 0x7a, 0x20, 0x5c, 0x09, 0xc1, 0x21, 0xc8, 0x33, 0x00, 0x8f, 0x15, 0xb5,
	0xdf, 0x81, 0xa4, 0xd7, 0x48, 0xc9, 0xf1, 0x07, 0x5c, 0x78, 0x5d, 0xe1, 0x58, 0x6b, 0xf5, 0x4c,
	0x33, 0xc7, 0x8a, 0x5a, 0xf1, 0xc8, 0xa1, 0x55, 0x92, 0x7f, 0x2e, 0xc0, 0x75, 0x42, 0xcb, 0xa8,
	0xe7, 0x9a, 0x25, 0x36, 0x91, 0x70, 0x70, 0x3f, 0x90, 0x56, 0xbe, 0x9e, 0x69, 0x96, 0x18, 0xb6,
	0x69, 0x99, 0x64, 0x4e, 0xac, 0x02, 0x2a, 0x32, 0x27, 0x74, 0x97, 0x14, 0x31, 0x6d, 0x2a, 0x6a,
	0xb1, 0x9e, 0x6b, 0x1a, 0xac, 0x80, 0xf2, 0x23, 0x87, 0x5e, 0x25, 0x05, 0x09, 0x7c, 0xa0, 0x2c,
	0x25, 0xb4, 0xe4, 0x95, 0xf8, 0xc8, 0x51, 0x51, 0xe5, 0x78, 0x08, 0x16, 0x41, 0x2d, 0xb6, 0x1b,
	0x4f, 0xc9, 0xe6, 0x63, 0x11, 0xca, 0x58, 0x5a, 0x94, 0xa3, 0x07, 0x2f, 0x25, 0xe6, 0xa3, 0xc8,
	0xb0, 0x4d, 0xef, 0x12, 0x43, 0x48, 0x18, 0x84, 0x56, 0xb6, 0x9e, 0x6b, 0x9a, 0x9d, 0x5a, 0xf4,
	0xdd, 0x4b, 0xb2, 0xaa, 0x1d, 0x1b, 0xbf, 0xe7, 0x08, 0x5d, 0xb4, 0xd2, 0xff, 0x11, 0x03, 0x67,
	0x8a, 0xd1, 0xcd, 0x4e, 0x25, 0x0a, 0xf4, 0xd8, 0xf7, 0x5f, 0x8c, 0x86, 0x4c, 0x1b, 0x69, 0x83,
	0xac, 0xa9, 0x59, 0x63, 0xfa, 0x17, 0x9d, 0xd0, 0xa6, 0xb2, 0xe7, 0x7b, 0xae, 0xf0, 0x00, 0xd7,
	0xc2, 0x60, 0x13, 0x89, 0x6e, 0x13, 0x63, 0xc8, 0x47, 0x21, 0x60, 0xba, 0x0d, 0xa6, 0x05, 0x6a,
	0x91, 0x42, 0x2f, 0x10, 0x4e, 0x1f, 0x1c, 0xcb, 0xa8, 0x67, 0x9a, 0x59, 0x16, 0x89, 0xca, 0x72,
	0xc6, 0x85, 0x14, 0x5e, 0x1f, 0x13, 0x9e, 0x63, 0x91, 0x48, 0xf7, 0x48, 0x69, 0x18, 0xf8, 0x36,
	0x84, 0x21, 0x38, 0x98, 0xfb, 0x1c, 0x9b, 0x29, 0xd4, 0x38, 0xb6, 0x3f, 0xf2, 0xa4, 0x55, 0x44,
	0x8b, 0x16, 0x54, 0x1f, 0xde, 0xe3, 0x9e, 0xe3, 0x7b, 0xa0, 0x16, 0x40, 0x8d, 0x34, 0x53, 0xd0,
	0x3a, 0x29, 0x87, 0xa3, 0x41, 0xb7, 0x27, 0x5c, 0xb7, 0x1b, 0x82, 0x6d, 0x11, 0x74, 0x20, 0xe1,
	0x68, 0x70, 0x28, 0x5c, 0xf7, 0x08, 0x6c, 0xe5, 0xc1, 0x4f, 0xfb, 0xdd, 0xb3, 0x80, 0x0f, 0xd1,
	0xc3, 0xd4, 0x1e, 0xfc, 0xb4, 0xff, 0x69, 0xc0, 0x87, 0xca, 0x63, 0x9f, 0x98, 0xca, 0x83, 0x9f,
	0x49, 0x74, 0x28, 0x4f, 0xc6, 0x38, 0xed, 0x1f, 0x9c, 0xc9, 0x89, 0x7d, 0xc0, 0x5f, 0x4e, 0xed,
	0xeb, 0xda, 0x3e, 0xe0, 0x2f, 0x67, 0x76, 0xec, 0x1f, 0x72, 0xb4, 0x57, 0x66, 0xfd, 0x43, 0x3e,
	0x6f, 0x3f, 0xd6, 0xfd, 0xaf, 0xcc, 0xec, 0xc7, 0xaa, 0x7f, 0xe3, 0x97, 0x02, 0xd9, 0xfc, 0x88,
	0xcb, 0x69, 0x45, 0xe9, 0x22, 0xaa, 0x90, 0xac, 0x70, 0x70, 0x51, 0x73, 0x2c, 0x2b, 0x1c, 0x5a,
	0x23, 0xc5, 0x50, 0x06, 0x5c, 0x42, 0x7f, 0x8c, 0xab, 0x58, 0x62, 0x53, 0x59, 0x65, 0x1c, 0x3c,
	0xde, 0x73, 0xc1, 0xc1, 0xa5, 0x2b, 0xb2, 0x48, 0xa4, 0x77, 0x49, 0x61, 0xc8, 0xc7, 0xae, 0xcf,
	0x75, 0xb1, 0x98, 0x9d, 0x6a, 0x4b, 0x97, 0x77, 0x2b, 0x2a, 0xfe, 0xd6, 0x13, 0xee, 0x8e, 0x80,
	0x45, 0x6e, 0xf4, 0x36, 0x29, 0xda, 0xdc, 0x05, 0xcf, 0xe1, 0x01, 0x2e, 0xec, 0xe2, 0x6e, 0x99,
	0xda, 0xd5, 0x9c, 0x86, 0x81, 0xf0, 0x03, 0x21, 0xc7, 0xb8, 0xd4, 0x06, 0x9b, 0xca, 0xb8, 0xe9,
	0xf9, 0x00, 0x26, 0x25, 0x86, 0x6d, 0xfa, 0x80, 0x94, 0x4e, 0x79, 0x20, 0xd4, 0xd4, 0x42, 0x2c,
	0x33, 0xb3, 0xd3, 0x8c, 0x82, 0x2f, 0x64, 0xa0, 0xf5, 0x24, 0x72, 0xfd, 0xd0, 0x93, 0xc1, 0x98,
	0xcd, 0xba, 0xaa, 0xef, 0x95, 0x62, 0x00, 0xfe, 0x48, 0xe2, 0x8e, 0x30, 0x58, 0x24, 0xd2, 0x5b,
	0xa4, 0xe8, 0x78, 0x76, 0xd7, 0x15, 0xa1, 0xc4, 0xbd, 0xb0, 0x38, 0xfb, 0x82, 0xe3, 0xd9, 0xaa,
	0x44, 0x69, 0x93, 0x6c, 0x84, 0x60, 0x77, 0x5d, 0xdf, 0xe6, 0x12, 0xba, 0xbc, 0x0f, 0x9e, 0xc4,
	0xcd, 0x61, 0xb0, 0x4a, 0x08, 0xf6, 0x63, 0x54, 0x1f, 0x28, 0xed, 0xb4, 0xd0, 0xcb, 0x9a, 0x5d,
	0xaa, 0x3d, 0x2d, 0xa8, 0xf5, 0x15, 0x05, 0x55, 0x27, 0xa6, 0x03, 0xa1, 0x1d, 0x88, 0xa1, 0x22,
	0x28, 0x6e, 0x8c, 0x12, 0x9b, 0x57, 0xd1, 0xff, 0x93, 0x7c, 0x68, 0x1f, 0xc3, 0x80, 0xe3, 0xae,
	0x58, 0x8c, 0x33, 0xb1, 0xaa, 0x45, 0x09, 0x84, 0xd7, 0x97, 0xbe, 0x07, 0xd6, 0xc6, 0xf2, 0x45,
	0x89, 0xec, 0x73, 0x10, 0xdc, 0x8c, 0x41, 0x30, 0x46, 0x4e, 0x7a, 0x8e, 0x9c, 0x77, 0x94, 0xb1,
	0x3b, 0x99, 0xcb, 0xd6, 0xf2, 0x11, 0x1c, 0xff, 0x48, 0xcf, 0xe6, 0x2d, 0x52, 0xe6, 0xcf, 0x25,
	0x04, 0x91, 0xff, 0xf6, 0x52, 0x7f, 0x13, 0x7d, 0x26, 0x5d, 0xfe, 0x4b, 0xca, 0xa1, 0x14, 0xf6,
	0x8b, 0xf1, 0x24, 0xd1, 0x3b, 0xb8, 0x4d, 0x4d, 0xad, 0xd3, 0x59, 0xde, 0x27, 0x64, 0xc2, 0x02,
	0x45, 0x8e, 0x2a, 0x3a, 0xcc, 0x69, 0xe8, 0x4d, 0x52, 0x99, 0x49, 0x58, 0x49, 0x57, 0xeb, 0x99,
	0xe6, 0x3a, 0x5b, 0x9f, 0x69, 0x55, 0xb5, 0xbd, 0x43, 0xaa, 0x73, 0x6e, 0x01, 0x78, 0x70, 0xc6,
	0x35, 0x1b, 0x2c, 0x74, 0xdf, 0x9e, 0x59, 0x99, 0x36, 0x1e, 0x81, 0x5d, 0x7b, 0x8f, 0x54, 0xe2,
	0xdb, 0x8d, 0x6e, 0x90, 0xdc, 0x0b, 0x18, 0x63, 0x01, 0x96, 0x98, 0x6a, 0x2a, 0x3e, 0x9d, 0xaa,
	0x5a, 0x99, 0x94, 0x9f, 0x16, 0xee, 0x65, 0xdf, 0xcd, 0x34, 0x0e, 0x08, 0xbd, 0x0f, 0x2e, 0x48,
	0x58, 0x59, 0xc1, 0xb1, 0x05, 0xc8, 0xc6, 0x17, 0xa0, 0xf1, 0x73, 0x81, 0xd0, 0x4f, 0x86, 0x0e,
	0xbf, 0x20, 0xc6, 0x3f, 0x81, 0x02, 0x0f, 0x17, 0x29, 0x70, 0x2b, 0x0a, 0xbe, 0x98, 0x82, 0x7f,
	0x31, 0xf0, 0x6a, 0x18, 0x88, 0xed, 0xb6, 0xcd, 0x55, 0xe5, 0x4e, 0x53, 0x96, 0xfb, 0x56, 0xfa,
	0x72, 0xdf, 0xbe, 0xa8, 0xdc, 0x77, 0x2e, 0x51, 0xee, 0xd5, 0x74, 0xe5, 0x7e, 0xf5, 0xb5, 0x95,
	0xfb, 0xfb, 0x64, 0x83, 0x01, 0x77, 0x5e, 0xbd, 0xd8, 0x7f, 0xca, 0x10, 0x1a, 0x3b, 0x44, 0xa7,
	0x3b, 0x37, 0xe3, 0xd1, 0x35, 0x17, 0x1d, 0x5d, 0xff, 0xb6, 0x13, 0xb1, 0xfe, 0x84, 0x02, 0xfa,
	0x65, 0x85, 0xd3, 0xf8, 0xa1, 0x40, 0xe8, 0x07, 0x01, 0x9c, 0x47, 0xd2, 0x3c, 0x82, 0x32, 0xc9,
	0x08, 0xca, 0x26, 0x22, 0x28, 0x97, 0x1e, 0x41, 0x6b, 0x29, 0x10, 0x64, 0x24, 0x20, 0x28, 0x9f,
	0x84, 0xa0, 0x42, 0x1c, 0x41, 0x8b, 0x9f, 0x7c, 0x39, 0x04, 0x15, 0x93, 0x11, 0x54, 0x4a, 0x8f,
	0x20, 0xb2, 0x12, 0x41, 0xe6, 0x12, 0x04, 0x95, 0x2f, 0x8f, 0xa0, 0xf5, 0x55, 0x08, 0xaa, 0x5c,
	0x1a, 0x41, 0x57, 0xd2, 0x20, 0x68, 0x63, 0x15, 0x82, 0x36, 0x53, 0x22, 0x88, 0xa6, 0x47, 0xd0,
	0xd6, 0x45, 0x08, 0xda, 0xbe, 0x04, 0x82, 0x76, 0xd2, 0x21, 0xa8, 0xfa, 0xda, 0x10, 0xf4, 0x67,
	0x91, 0x18, 0xb8, 0x45, 0x53, 0x81, 0x87, 0x5e, 0x27, 0xc4, 0xc6, 0xed, 0x3d, 0xbd, 0x72, 0xe7,
	0x58, 0x69, 0xa2, 0x39, 0x90, 0xf4, 0xcd, 0x99, 0xb9, 0x37, 0x4e, 0x28, 0xba, 0xc8, 0xfd, 0x70,
	0xac, 0xa2, 0x8d, 0xf0, 0x7f, 0x8d, 0xd1, 0x0c, 0x1d, 0x6d, 0xa2, 0xd1, 0xd1, 0x22, 0x73, 0x4f,
	0x9f, 0x0c, 0x96, 0x44, 0x9b, 0x78, 0x1c, 0x8e, 0x63, 0x5c, 0x29, 0x24, 0x73, 0xa5, 0x98, 0xc8,
	0x95, 0x52, 0x7a, 0xae, 0x90, 0x14, 0x5c, 0x31, 0x13, 0xb8, 0x52, 0x9e, 0xe3, 0xca, 0xbd, 0x79,
	0xae, 0xac, 0x23, 0x57, 0xf6, 0x62, 0x37, 0xfb, 0xcb, 0xa1, 0xa4, 0x92, 0x8c, 0x92, 0x2b, 0xe9,
	0x51, 0xb2, 0xb1, 0x12, 0x25, 0x9b, 0x73, 0x28, 0x39, 0x87, 0x09, 0xba, 0x88, 0x89, 0x08, 0x36,
	0x5b, 0x2b, 0x60, 0x33, 0x43, 0xc9, 0xf6, 0x4a, 0x94, 0x4c, 0xef, 0xfb, 0x3b, 0xfa, 0x5d, 0x41,
	0xdf, 0xf7, 0xe7, 0x5e, 0x0f, 0xaa, 0x3a, 0x0d, 0xd1, 0xeb, 0x41, 0x95, 0xe4, 0xb9, 0x2d, 0xc5,
	0x29, 0xe0, 0xaf, 0xdd, 0x60, 0x13, 0x29, 0x86, 0x24, 0xeb, 0x02, 0x24, 0xc5, 0xa8, 0xb3, 0x9b,
	0x92, 0x3a, 0xb5, 0xf4, 0xd4, 0xb9, 0x76, 0x11, 0x75, 0xf6, 0x2e, 0x41, 0x9d, 0xeb, 0xe9, 0xa8,
	0xb3, 0xff, 0xda, 0xa8, 0x73, 0x9f, 0x94, 0xd4, 0x2e, 0xd3, 0xe0, 0x59, 0xf6, 0xaa, 0x75, 0x23,
	0xfe, 0xaa, 0xb5, 0x1e, 0x7f, 0xd5, 0xd2, 0xb6, 0xce, 0xaf, 0x06, 0x29, 0xa3, 0xe2, 0x08, 0x82,
	0x53, 0x61, 0x03, 0xfd, 0x8c, 0x98, 0x73, 0x3f, 0x5d, 0x5a, 0x4b, 0xfe, 0x13, 0xd7, 0xe2, 0x11,
	0x1b, 0xfb, 0xdf, 0xfe, 0xf6, 0xc7, 0xf7, 0x59, 0xab, 0xb1, 0xd5, 0xb6, 0xb9, 0xeb, 0x76, 0x6d,
	0xf0, 0x24, 0x04, 0x6d, 0x7c, 0xf2, 0x0a, 0xef, 0x65, 0x6e, 0xd3, 0xa7, 0xc4, 0x9c, 0x3b, 0x67,
	0xcd, 0x22, 0x2f, 0x1e, 0xbe, 0x6a, 0x9b, 0xd3, 0x65, 0x8d, 0xbe, 0xb0, 0x71, 0x0d, 0xa3, 0xef,
	0xd0, 0x65, 0xd1, 0xe9, 0x13, 0x52, 0x9a, 0x1e, 0x02, 0xa9, 0x15, 0x75, 0x3e, 0x7f, 0x2e, 0x3c,
	0x3f, 0xe1, 0x3a, 0x86, 0xac, 0x51, 0x6b, 0x49, 0xc8, 0xf6, 0xd7, 0xc2, 0xf9, 0x86, 0x7e, 0x4e,
	0xc8, 0xec, 0x29, 0x84, 0xee, 0x26, 0x3e, 0x8f, 0x9c, 0x8f, 0x7c, 0x03, 0x23, 0x5f, 0xef, 0x24,
	0x46, 0x56, 0xf9, 0xf8, 0x82, 0x98, 0x73, 0x37, 0xac, 0x59, 0x3e, 0x16, 0xaf, 0x5d, 0x09, 0xe1,
	0x6b, 0x2b, 0xc3, 0x3f, 0x23, 0xe6, 0xdc, 0x3d, 0x78, 0x16, 0x7e, 0xf1, 0x72, 0x9c, 0x90, 0x97,
	0xdb, 0xc9, 0x79, 0xf9, 0x2e, 0x43, 0xac, 0xa4, 0x87, 0x67, 0xfa, 0xc6, 0xd2, 0x85, 0x5d, 0x7c,
	0x9a, 0xae, 0xed, 0xce, 0xaf, 0x72, 0xcc, 0xa3, 0x71, 0x07, 0xa7, 0x70, 0x93, 0xde, 0x58, 0x36,
	0x85, 0x00, 0x5d, 0xc3, 0x76, 0x5f, 0x3b, 0x1f, 0x36, 0x9e, 0xd5, 0xfb, 0x42, 0x1e, 0x8f, 0x7a,
	0x2d, 0xdb, 0x1f, 0xb4, 0xcf, 0xa0, 0x27, 0x24, 0xb8, 0xfa, 0x41, 0x3d, 0x6c, 0xeb, 0x21, 0x7a,
	0x79, 0x14, 0xdf, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xca, 0x56, 0xfc, 0x91, 0x17, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueServiceClient is the client API for QueueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueServiceClient interface {
	// Create Queue
	CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*Queue, error)
	// List of Queue
	SearchQueue(ctx context.Context, in *SearchQueueRequest, opts ...grpc.CallOption) (*ListQueue, error)
	// Queue item
	ReadQueue(ctx context.Context, in *ReadQueueRequest, opts ...grpc.CallOption) (*Queue, error)
	// Patch Queue
	PatchQueue(ctx context.Context, in *PatchQueueRequest, opts ...grpc.CallOption) (*Queue, error)
	// Update Queue
	UpdateQueue(ctx context.Context, in *UpdateQueueRequest, opts ...grpc.CallOption) (*Queue, error)
	// Remove Queue
	DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*Queue, error)
	SearchQueueReportGeneral(ctx context.Context, in *SearchQueueReportGeneralRequest, opts ...grpc.CallOption) (*ListReportGeneral, error)
}

type queueServiceClient struct {
	cc *grpc.ClientConn
}

func NewQueueServiceClient(cc *grpc.ClientConn) QueueServiceClient {
	return &queueServiceClient{cc}
}

func (c *queueServiceClient) CreateQueue(ctx context.Context, in *CreateQueueRequest, opts ...grpc.CallOption) (*Queue, error) {
	out := new(Queue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/CreateQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) SearchQueue(ctx context.Context, in *SearchQueueRequest, opts ...grpc.CallOption) (*ListQueue, error) {
	out := new(ListQueue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/SearchQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) ReadQueue(ctx context.Context, in *ReadQueueRequest, opts ...grpc.CallOption) (*Queue, error) {
	out := new(Queue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/ReadQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) PatchQueue(ctx context.Context, in *PatchQueueRequest, opts ...grpc.CallOption) (*Queue, error) {
	out := new(Queue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/PatchQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) UpdateQueue(ctx context.Context, in *UpdateQueueRequest, opts ...grpc.CallOption) (*Queue, error) {
	out := new(Queue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/UpdateQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) DeleteQueue(ctx context.Context, in *DeleteQueueRequest, opts ...grpc.CallOption) (*Queue, error) {
	out := new(Queue)
	err := c.cc.Invoke(ctx, "/engine.QueueService/DeleteQueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueServiceClient) SearchQueueReportGeneral(ctx context.Context, in *SearchQueueReportGeneralRequest, opts ...grpc.CallOption) (*ListReportGeneral, error) {
	out := new(ListReportGeneral)
	err := c.cc.Invoke(ctx, "/engine.QueueService/SearchQueueReportGeneral", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServiceServer is the server API for QueueService service.
type QueueServiceServer interface {
	// Create Queue
	CreateQueue(context.Context, *CreateQueueRequest) (*Queue, error)
	// List of Queue
	SearchQueue(context.Context, *SearchQueueRequest) (*ListQueue, error)
	// Queue item
	ReadQueue(context.Context, *ReadQueueRequest) (*Queue, error)
	// Patch Queue
	PatchQueue(context.Context, *PatchQueueRequest) (*Queue, error)
	// Update Queue
	UpdateQueue(context.Context, *UpdateQueueRequest) (*Queue, error)
	// Remove Queue
	DeleteQueue(context.Context, *DeleteQueueRequest) (*Queue, error)
	SearchQueueReportGeneral(context.Context, *SearchQueueReportGeneralRequest) (*ListReportGeneral, error)
}

// UnimplementedQueueServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQueueServiceServer struct {
}

func (*UnimplementedQueueServiceServer) CreateQueue(ctx context.Context, req *CreateQueueRequest) (*Queue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueue not implemented")
}
func (*UnimplementedQueueServiceServer) SearchQueue(ctx context.Context, req *SearchQueueRequest) (*ListQueue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchQueue not implemented")
}
func (*UnimplementedQueueServiceServer) ReadQueue(ctx context.Context, req *ReadQueueRequest) (*Queue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadQueue not implemented")
}
func (*UnimplementedQueueServiceServer) PatchQueue(ctx context.Context, req *PatchQueueRequest) (*Queue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchQueue not implemented")
}
func (*UnimplementedQueueServiceServer) UpdateQueue(ctx context.Context, req *UpdateQueueRequest) (*Queue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQueue not implemented")
}
func (*UnimplementedQueueServiceServer) DeleteQueue(ctx context.Context, req *DeleteQueueRequest) (*Queue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQueue not implemented")
}
func (*UnimplementedQueueServiceServer) SearchQueueReportGeneral(ctx context.Context, req *SearchQueueReportGeneralRequest) (*ListReportGeneral, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchQueueReportGeneral not implemented")
}

func RegisterQueueServiceServer(s *grpc.Server, srv QueueServiceServer) {
	s.RegisterService(&_QueueService_serviceDesc, srv)
}

func _QueueService_CreateQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).CreateQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/CreateQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).CreateQueue(ctx, req.(*CreateQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_SearchQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).SearchQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/SearchQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).SearchQueue(ctx, req.(*SearchQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_ReadQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).ReadQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/ReadQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).ReadQueue(ctx, req.(*ReadQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_PatchQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).PatchQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/PatchQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).PatchQueue(ctx, req.(*PatchQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_UpdateQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).UpdateQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/UpdateQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).UpdateQueue(ctx, req.(*UpdateQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_DeleteQueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQueueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).DeleteQueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/DeleteQueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).DeleteQueue(ctx, req.(*DeleteQueueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueService_SearchQueueReportGeneral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchQueueReportGeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServiceServer).SearchQueueReportGeneral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/engine.QueueService/SearchQueueReportGeneral",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServiceServer).SearchQueueReportGeneral(ctx, req.(*SearchQueueReportGeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "engine.QueueService",
	HandlerType: (*QueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQueue",
			Handler:    _QueueService_CreateQueue_Handler,
		},
		{
			MethodName: "SearchQueue",
			Handler:    _QueueService_SearchQueue_Handler,
		},
		{
			MethodName: "ReadQueue",
			Handler:    _QueueService_ReadQueue_Handler,
		},
		{
			MethodName: "PatchQueue",
			Handler:    _QueueService_PatchQueue_Handler,
		},
		{
			MethodName: "UpdateQueue",
			Handler:    _QueueService_UpdateQueue_Handler,
		},
		{
			MethodName: "DeleteQueue",
			Handler:    _QueueService_DeleteQueue_Handler,
		},
		{
			MethodName: "SearchQueueReportGeneral",
			Handler:    _QueueService_SearchQueueReportGeneral_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "queue.proto",
}
