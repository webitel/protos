{
  "swagger": "2.0",
  "info": {
    "title": "message.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ChatService"
    },
    {
      "name": "Messages",
      "description": "**Messages** Service"
    },
    {
      "name": "AgentChatService"
    },
    {
      "name": "ContactLinkingService"
    },
    {
      "name": "ContactsChatCatalog"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/agent/chats": {
      "get": {
        "operationId": "GetAgentChats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatGetAgentChatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "size",
            "description": "default",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "only_closed",
            "description": "filter",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "only_unprocessed",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AgentChatService"
        ]
      }
    },
    "/agent/chats/{chat_id}": {
      "patch": {
        "operationId": "MarkChatProcessed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatMarkChatProcessedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentChatService"
        ]
      }
    },
    "/chat/customers": {
      "get": {
        "summary": "Query of external chat customers",
        "operationId": "GetCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatChatCustomers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number to return. **default**: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Page records limit. **default**: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: peer{id,name}",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sort records by { fields } specification.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Set of unique contact **ID**entifier(s).",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "description": "The type of contact to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/chat/dialogs": {
      "get": {
        "summary": "Query of chat conversations",
        "operationId": "GetDialogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatChatDialogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number to return. **default**: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Page records limit. **default**: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: peer.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sort records by { fields } specification.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Set of unique chat IDentifier(s).\nAccept: dialog -or- member ID.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "via.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date.since",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "date.until",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "online",
            "description": "Dialogs ONLY that are currently [not] active( closed: ? ).",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "group[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/chat/dialogs/{chat_id}/members": {
      "get": {
        "summary": "Query of chat participants",
        "operationId": "GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatChatMembers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chat_id",
            "description": "ID of the chat dialog.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number to return. **default**: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Page records limit. **default**: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: peer(type;name)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sort records by { fields } specification.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Set of unique chat member ID.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "via.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "via.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date.since",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "date.until",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "online",
            "description": "Participants ONLY who are currently [not] connected to the chat.\n( left: ( 0 ? online : offline ) )",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "joined",
            "description": "Participants ONLY who have [not] been connected to the chat.\n( join: ( 0 ? [request|abandoned] : connected ) )",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/chat/dialogs/{chat_id}/messages": {
      "get": {
        "summary": "Query of the chat history",
        "operationId": "GetHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatChatMessages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chat_id",
            "description": "Unique chat dialog",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset.id",
            "description": "Messages ONLY starting from the specified message ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset.date",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Number of messages to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: message.text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return into result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "peer.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.type",
            "description": "Contact **type** provider.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/chat/{conversation_id}/contact": {
      "post": {
        "summary": "CreateContactFromConversation creates new contact from the data existing in the conversation and after that links this contact to the external user.",
        "operationId": "CreateContactFromConversation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatLookup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "timezone.id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "timezone.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner.id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "owner.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContactLinkingService"
        ]
      }
    },
    "/chat/{conversation_id}/link": {
      "post": {
        "summary": "LinkContactToClient creates connection between existing internal contact and external client.",
        "operationId": "LinkContactToClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContactLinkingService"
        ]
      }
    },
    "/chat/{peer.type}/{peer.id}/messages": {
      "get": {
        "summary": "Query of the chat history",
        "operationId": "GetHistory2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatChatMessages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peer.type",
            "description": "Contact **type** provider.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "peer.id",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset.id",
            "description": "Messages ONLY starting from the specified message ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset.date",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Number of messages to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: message.text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return into result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "chat_id",
            "description": "Unique chat dialog",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "peer.name",
            "description": "Contact display **name**.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group[string][string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/contacts/{contact_id}/chat/messages": {
      "get": {
        "operationId": "GetContactChatHistory2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatGetContactChatHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "description": "Contact identificator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset.id",
            "description": "Messages ONLY starting from the specified message ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset.date",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "size",
            "description": "Number of messages to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: message.text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return into result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "chat_id",
            "description": "Unique chat dialog",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group[string][string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContactsChatCatalog"
        ]
      }
    },
    "/contacts/{contact_id}/chat/{chat_id}/messages": {
      "get": {
        "operationId": "GetContactChatHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chatGetContactChatHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "description": "Contact identificator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "chat_id",
            "description": "Unique chat dialog",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset.id",
            "description": "Messages ONLY starting from the specified message ID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset.date",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "size",
            "description": "Number of messages to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term: message.text",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return into result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "group[string]",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContactsChatCatalog"
        ]
      }
    }
  },
  "definitions": {
    "chatAgentChat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Chat id"
        },
        "title": {
          "type": "string",
          "title": "Chat title"
        },
        "gateway": {
          "$ref": "#/definitions/chatPeer",
          "title": "Chat gateway"
        },
        "started_at": {
          "type": "string",
          "format": "int64",
          "title": "Chat time length"
        },
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "last_message": {
          "$ref": "#/definitions/webitelchatMessage",
          "title": "Chat first message"
        },
        "queue": {
          "$ref": "#/definitions/chatPeer",
          "title": "Queue name"
        },
        "close_reason": {
          "type": "string",
          "title": "Close reason (from agent perspective)"
        },
        "unprocessed_close": {
          "type": "boolean",
          "title": "Special attribute for the closed-active chats (on fact closed but should be on active tab on the front-end)\ncan be true only when close reason = any(\"client_leave\", \"client_timeout\", \"agent_timeout\", \"silence_timeout\")"
        },
        "contact": {
          "$ref": "#/definitions/chatPeer",
          "title": "Connected contact"
        }
      }
    },
    "chatButtonRequest": {
      "type": "string",
      "enum": [
        "phone",
        "email",
        "contact",
        "location"
      ],
      "default": "phone",
      "description": "- phone: Phone Number\n - email: Email Address\n - contact: General Form\n - location: Current Location",
      "title": "Type of request to share contact info"
    },
    "chatButtonRow": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitelchatButton"
          },
          "title": "Button(s) in a row"
        }
      }
    },
    "chatChat": {
      "type": "object",
      "properties": {
        "dc": {
          "type": "string",
          "format": "int64",
          "description": "[D]omain[C]omponent primary ID."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this chat.\n[FROM] Member / Channel ID.\n\n// [TO] Group. Conversation ID.\n string chat_id = 2;"
        },
        "via": {
          "$ref": "#/definitions/chatPeer",
          "description": "[FROM] VIA text gateway profile."
        },
        "peer": {
          "$ref": "#/definitions/chatPeer",
          "description": "[FROM]: User identity. Seed."
        },
        "title": {
          "type": "string",
          "description": "[TO]: Chat title."
        },
        "left": {
          "type": "string",
          "format": "int64",
          "title": "OPTIONAL. A non-zero value indicates that\nthe participant has left the chat. OFFLINE(!)"
        },
        "join": {
          "type": "string",
          "format": "int64",
          "description": "OPTIONAL. A non-zero value indicates that\nthe participant has joined the chat."
        },
        "invite": {
          "$ref": "#/definitions/chatChatInvite",
          "description": "OPTIONAL. Invite[d] BY member info."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Context. Variables."
        },
        "queue": {
          "$ref": "#/definitions/chatPeer",
          "title": "OPTIONAL. Last dialog queue"
        }
      },
      "description": "The Chat info.\nAlias: participant, subscriber, member, peer, leg."
    },
    "chatChatCustomers": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatCustomer"
          },
          "description": "Dataset page of Customer(s)."
        },
        "vias": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatPeer"
          },
          "title": "List of unique text gateways, mentioned in peers. [VIA]"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of results."
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        }
      },
      "title": "ChatCustomers dataset"
    },
    "chatChatDialogs": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatDialog"
          },
          "description": "Dataset page of Dialog(s)."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of results."
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        }
      },
      "title": "ChatDialogs dataset"
    },
    "chatChatInvite": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the invitation to join the chat was sent"
        },
        "from": {
          "type": "string",
          "title": "Chat member ID who invited to join the chat"
        }
      }
    },
    "chatChatMembers": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatChat"
          },
          "description": "Page of the chat participants."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of results."
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        }
      },
      "title": "ChatMembers dataset"
    },
    "chatChatMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Unique message identifier inside this chat."
        },
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp when this message was sent (published)."
        },
        "from": {
          "$ref": "#/definitions/chatChatPeer",
          "description": "Sender of the message."
        },
        "chat": {
          "$ref": "#/definitions/chatContactChat",
          "description": "Conversation the message belongs to .."
        },
        "sender": {
          "$ref": "#/definitions/chatContactChat",
          "description": "Chat Sender of the message, sent on behalf of a chat (member)."
        },
        "edit": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp when this message was last edited."
        },
        "text": {
          "type": "string",
          "description": "Message Text."
        },
        "file": {
          "$ref": "#/definitions/chatMessageFile",
          "description": "Message Media. Attachment."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Context. Variables. Environment."
        },
        "keyboard": {
          "$ref": "#/definitions/chatMessageReplyMarkup",
          "description": "Keyboard. Buttons. Quick Replies."
        },
        "postback": {
          "$ref": "#/definitions/chatMessagePostback",
          "description": "Postback. Reply Button Click[ed]."
        }
      },
      "description": "Chat Message."
    },
    "chatChatMessages": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitelchatMessage"
          },
          "description": "Dataset page of messages."
        },
        "chats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatChat"
          },
          "title": "List of chats mentioned in messages. [FROM]"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatPeer"
          },
          "title": "List of peers mentioned in messages. [FROM]"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Dataset page number."
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        }
      },
      "title": "ChatMessages dataset"
    },
    "chatChatMessagesRequestOffset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        },
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Messages ONLY been sent before the specified epochtime(milli)."
        }
      },
      "title": "Offset options"
    },
    "chatChatPeer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Contact unique **ID**entifier.\nContact **type**-specific string."
        },
        "type": {
          "type": "string",
          "description": "Contact **type** provider."
        },
        "name": {
          "type": "string",
          "description": "Contact display **name**."
        }
      },
      "description": "Peer contact."
    },
    "chatContactChat": {
      "type": "object",
      "properties": {
        "dc": {
          "type": "string",
          "format": "int64",
          "description": "[D]omain[C]omponent primary ID."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this chat.\n[FROM] Member / Channel ID.\n\n// [TO] Group. Conversation ID.\n string chat_id = 2;"
        },
        "via": {
          "$ref": "#/definitions/chatChatPeer",
          "description": "[FROM] VIA text gateway profile."
        },
        "peer": {
          "$ref": "#/definitions/chatChatPeer",
          "description": "[FROM]: User identity. Seed."
        },
        "title": {
          "type": "string",
          "description": "[TO]: Chat title."
        },
        "left": {
          "type": "string",
          "format": "int64",
          "title": "OPTIONAL. A non-zero value indicates that\nthe participant has left the chat. OFFLINE(!)"
        },
        "join": {
          "type": "string",
          "format": "int64",
          "description": "OPTIONAL. A non-zero value indicates that\nthe participant has joined the chat."
        },
        "invite": {
          "$ref": "#/definitions/chatContactChatInvite",
          "description": "OPTIONAL. Invite[d] BY member info."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Context. Variables."
        }
      },
      "description": "The Chat info.\nAlias: participant, subscriber, member, peer, leg."
    },
    "chatContactChatInvite": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the invitation to join the chat was sent"
        },
        "from": {
          "type": "string",
          "title": "Chat member ID who invited to join the chat"
        }
      }
    },
    "chatCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Customer unique **ID**entifier.\nAccount **type**-specific string."
        },
        "type": {
          "type": "string",
          "description": "Customer account **type**."
        },
        "name": {
          "type": "string",
          "description": "Customer account **name**."
        },
        "via": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatPeer"
          },
          "description": "[VIA] Text gateway associations."
        }
      },
      "description": "Customer is external chat contact."
    },
    "chatDialog": {
      "type": "object",
      "properties": {
        "dc": {
          "type": "string",
          "format": "int64",
          "description": "[D]omain[C]omponent primary ID."
        },
        "id": {
          "type": "string",
          "description": "The Conversation thread unique ID."
        },
        "via": {
          "$ref": "#/definitions/chatPeer",
          "description": "[VIA] Text gateway [FROM] originated thru ..."
        },
        "from": {
          "$ref": "#/definitions/chatPeer",
          "description": "[FROM]: Originator.\nLeg[A]. Contact / User."
        },
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp of the latest activity."
        },
        "title": {
          "type": "string",
          "description": "Title of the dialog."
        },
        "closed": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when dialog was closed.\nZero value means - connected (online)\nOtherwise - disconnected (offline)"
        },
        "started": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp when dialog started."
        },
        "message": {
          "$ref": "#/definitions/webitelchatMessage",
          "description": "The latest (top) message."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Context. Variables. Environment."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatChat"
          },
          "description": "[TO]: Participants.\nLeg[A+]. Schema / Agent."
        },
        "closed_cause": {
          "type": "string",
          "title": "Close reason if closed from the request sender perspective"
        },
        "queue": {
          "$ref": "#/definitions/chatPeer",
          "title": "OPTIONAL. Last dialog queue"
        }
      },
      "description": "Chat Dialog. Conversation info."
    },
    "chatEmptyResponse": {
      "type": "object"
    },
    "chatGetAgentChatsResponse": {
      "type": "object",
      "properties": {
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatAgentChat"
          }
        }
      }
    },
    "chatGetContactChatHistoryRequestOffset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        },
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Messages ONLY been sent before the specified epochtime(milli)."
        }
      },
      "title": "Offset options"
    },
    "chatGetContactChatHistoryResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatChatMessage"
          },
          "description": "Dataset page of messages."
        },
        "chats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatContactChat"
          },
          "title": "List of chats mentioned in messages. [FROM]"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatChatPeer"
          },
          "title": "List of peers mentioned in messages. [FROM]"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Dataset page number."
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        }
      },
      "title": "ChatMessages dataset"
    },
    "chatLinkContactToClientNAResponse": {
      "type": "object"
    },
    "chatLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "chatMarkChatProcessedResponse": {
      "type": "object"
    },
    "chatMessageButton": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Caption to display."
        },
        "url": {
          "type": "string",
          "description": "URL to navigate to .."
        },
        "code": {
          "type": "string",
          "description": "Postback/Callback data."
        },
        "share": {
          "$ref": "#/definitions/chatMessageButtonRequest",
          "description": "Request to share contact info."
        }
      }
    },
    "chatMessageButtonRequest": {
      "type": "string",
      "enum": [
        "phone",
        "email",
        "contact",
        "location"
      ],
      "default": "phone",
      "description": "- phone: Phone Number\n - email: Email Address\n - contact: General Form\n - location: Current Location",
      "title": "Type of request to share contact info"
    },
    "chatMessageButtonRow": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatMessageButton"
          },
          "title": "Button(s) in a row"
        }
      }
    },
    "chatMessageFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "File location"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Size in bytes"
        },
        "type": {
          "type": "string",
          "title": "MIME media type"
        },
        "name": {
          "type": "string",
          "title": "Filename"
        },
        "url": {
          "type": "string",
          "title": "Exact url of file (if exists)"
        }
      },
      "description": "Media File."
    },
    "chatMessagePostback": {
      "type": "object",
      "properties": {
        "mid": {
          "type": "string",
          "format": "int64",
          "description": "Message ID of the button."
        },
        "code": {
          "type": "string",
          "description": "Data associated with the Button."
        },
        "text": {
          "type": "string",
          "description": "Button's display caption."
        }
      },
      "description": "Postback. Reply Button Click[ed]."
    },
    "chatMessageReplyMarkup": {
      "type": "object",
      "properties": {
        "no_input": {
          "type": "boolean",
          "description": "An option used to block input to force\nthe user to respond with one of the buttons."
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatMessageButtonRow"
          },
          "title": "Markup of button(s)"
        }
      }
    },
    "chatPeer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Contact unique **ID**entifier.\nContact **type**-specific string."
        },
        "type": {
          "type": "string",
          "description": "Contact **type** provider."
        },
        "name": {
          "type": "string",
          "description": "Contact display **name**."
        }
      },
      "description": "Peer contact."
    },
    "chatReplyMarkup": {
      "type": "object",
      "properties": {
        "no_input": {
          "type": "boolean",
          "description": "An option used to block input to force\nthe user to respond with one of the buttons."
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatButtonRow"
          },
          "title": "Markup of button(s)"
        }
      }
    },
    "chatTimerange": {
      "type": "object",
      "properties": {
        "since": {
          "type": "string",
          "format": "int64",
          "description": "Since epochtime (milli).\n**Match**: greater than .."
        },
        "until": {
          "type": "string",
          "format": "int64",
          "description": "Until epochtime (milli).\n**Match**: less or equal .."
        }
      },
      "description": "Timerange filter value."
    },
    "chatserverBroadcastMessageResponse": {
      "type": "object",
      "properties": {
        "failure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverBroadcastPeer"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "NOT REQUIRED. Variables to set in the flow JS environment.\n\nKey-Value format"
        }
      }
    },
    "chatserverButton": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "chatserverFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "chatserverMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique message identifier inside this chat"
        },
        "type": {
          "type": "string",
          "description": "Type of this Message to notify e.g.: text, file, read, status etc."
        },
        "text": {
          "type": "string",
          "title": "Text of the message to be sent, 1-4096"
        },
        "file": {
          "$ref": "#/definitions/chatserverFile",
          "title": "File to send. Pass an HTTP .URL as a string for Webitel to get a file from the Internet,\nor upload a new one using storage.FileService.UploadFile()"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional. This Message extra properties"
        },
        "contact": {
          "$ref": "#/definitions/serverAccount",
          "title": "End-User extra contact info"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "description": "Optional. Send message date (epochtime ms) Generates by the service."
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "Optional. Edit message date (epochtime ms) Generates by the service.\nFor \"read\" messages, you can specify the date the last READ message was created_at"
        },
        "reply_to_message_id": {
          "type": "string",
          "format": "int64",
          "title": "Optional. If the message is a reply,\nthis is the ID of the original message"
        },
        "reply_to_variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "External message sent-binding to be able to identify corresponding internal message"
        },
        "forward_from_chat_id": {
          "type": "string",
          "title": "Unique identifier for the chat where the original message was sent"
        },
        "forward_from_message_id": {
          "type": "string",
          "format": "int64",
          "title": "Message identifier in the chat specified in from_chat_id"
        },
        "forward_from_variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "External message sent-binding to be able to identify corresponding internal message"
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverButtons"
          },
          "title": "Reply Markup Buttons SET"
        },
        "inline": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverButtons"
          },
          "title": "Inline Keyboard Buttons SET"
        },
        "from": {
          "$ref": "#/definitions/serverAccount",
          "title": "From sender user account"
        },
        "postback": {
          "$ref": "#/definitions/chatserverPostback",
          "description": "Postback. Reply Button Click[ed]."
        },
        "no_input": {
          "type": "boolean",
          "description": "An option used to block input to force the user\nto respond with one of the `Buttons`.\nInstructs client agents to disable input capabilities.\nCan only be used with a set of `Buttons`."
        },
        "new_chat_members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverAccount"
          },
          "title": "NewChatMembers description for {\"type\":\"joined\"} notification"
        },
        "left_chat_member": {
          "$ref": "#/definitions/serverAccount",
          "title": "LeftChatMember description for {\"type\":\"left\"} notification"
        }
      }
    },
    "chatserverPostback": {
      "type": "object",
      "properties": {
        "mid": {
          "type": "string",
          "format": "int64",
          "description": "Message ID of the button."
        },
        "code": {
          "type": "string",
          "description": "Button's callback data associated."
        },
        "text": {
          "type": "string",
          "description": "Button's caption. Text to display."
        }
      },
      "description": "Postback. Reply Button Click[ed]."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "serverAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique IDentifier"
        },
        "channel": {
          "type": "string",
          "description": "e.g.: bot, user, phone, telegram, facebook, viber, skype ...",
          "title": "Channel communication type"
        },
        "contact": {
          "type": "string",
          "description": "optional: channel specific contact string",
          "title": "Channel specific contact string"
        },
        "first_name": {
          "type": "string",
          "title": "optional"
        },
        "last_name": {
          "type": "string",
          "title": "optional"
        },
        "username": {
          "type": "string",
          "title": "required"
        }
      },
      "title": "Account contact info to extend and replace legacy chat.Client message type"
    },
    "serverBroadcastPeer": {
      "type": "object",
      "properties": {
        "peer": {
          "type": "string",
          "title": "Peer identification"
        },
        "error": {
          "$ref": "#/definitions/rpcStatus",
          "title": "Broadcast peer status"
        }
      },
      "title": "Broadcast recepient status"
    },
    "serverButtons": {
      "type": "object",
      "properties": {
        "button": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatserverButton"
          }
        }
      }
    },
    "serverChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "internal": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "connection": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "props": {
          "type": "string"
        }
      }
    },
    "serverChatTransferResponse": {
      "type": "object"
    },
    "serverChatVariablesResponse": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string",
          "description": "Unique Chat Channel IDentifier."
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Result Chat Channel's Variables SET."
        }
      }
    },
    "serverCheckSessionResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "channel_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string",
          "format": "int64"
        },
        "account": {
          "$ref": "#/definitions/serverAccount",
          "title": "Account for .this chat channel, end-user contact info"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "optional: extra context",
          "title": "Properties defined in .StartConversationRequest.message.variables"
        }
      }
    },
    "serverCloseConversationCause": {
      "type": "string",
      "enum": [
        "no_cause",
        "flow_end",
        "client_leave",
        "flow_err"
      ],
      "default": "no_cause",
      "title": "- no_cause: optional (no cause)"
    },
    "serverCloseConversationResponse": {
      "type": "object"
    },
    "serverConversation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverMember"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverHistoryMessage"
          },
          "title": "string self_channel_id = 9;\n  int32 unread_messages = 10;"
        }
      }
    },
    "serverDeclineInvitationResponse": {
      "type": "object"
    },
    "serverGetConversationByIDResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/serverConversation"
        }
      }
    },
    "serverGetConversationsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverConversation"
          }
        }
      }
    },
    "serverGetHistoryMessagesResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/serverHistoryMessage"
          }
        }
      }
    },
    "serverHistoryMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "channel_id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "title": "int64 conversation_id = 3;\n// int64 from_user_id = 2;\n// string from_user_type = 3;"
        },
        "text": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/chatserverFile"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "serverInviteToConversationResponse": {
      "type": "object",
      "properties": {
        "invite_id": {
          "type": "string"
        }
      }
    },
    "serverJoinConversationResponse": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string"
        }
      }
    },
    "serverLeaveConversationCause": {
      "type": "string",
      "enum": [
        "default_cause",
        "agent_timeout",
        "client_timeout",
        "agent_leave",
        "transfer",
        "silence_timeout"
      ],
      "default": "default_cause",
      "title": "- default_cause: optional (no cause)"
    },
    "serverLeaveConversationResponse": {
      "type": "object"
    },
    "serverMember": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "external_id": {
          "type": "string",
          "title": "string firstname = 6;\nstring lastname = 7;"
        }
      }
    },
    "serverSaveAgentJoinMessageResponse": {
      "type": "object"
    },
    "serverSendMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/chatserverMessage",
          "title": "Message sent !"
        }
      }
    },
    "serverSendUserActionResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "title": "Affected ?"
        }
      }
    },
    "serverStartConversationResponse": {
      "type": "object",
      "properties": {
        "conversation_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/chatserverMessage",
          "title": "Sent \"start\" message !"
        }
      }
    },
    "serverUpdateChannelResponse": {
      "type": "object"
    },
    "serverUser": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "connection": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        }
      }
    },
    "serverUserAction": {
      "type": "string",
      "enum": [
        "Typing",
        "Cancel"
      ],
      "default": "Typing",
      "description": "User actions. Use this to provide users with detailed info\nabout their chat partner's actions: typing or sending attachments of all kinds.\n\n - Typing: User is typing.\n - Cancel: Invalidate all previous action updates.\nE.g. when user deletes entered text or aborts a video upload."
    },
    "serverWaitMessageResponse": {
      "type": "object",
      "properties": {
        "timeout_sec": {
          "type": "string",
          "format": "int64"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chatserverMessage"
          },
          "title": "Error error = 3;"
        }
      }
    },
    "webitelchatButton": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Caption to display."
        },
        "url": {
          "type": "string",
          "description": "URL to navigate to .."
        },
        "code": {
          "type": "string",
          "description": "Postback/Callback data."
        },
        "share": {
          "$ref": "#/definitions/chatButtonRequest",
          "description": "Request to share contact info."
        }
      }
    },
    "webitelchatFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "File location"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Size in bytes"
        },
        "type": {
          "type": "string",
          "title": "MIME media type"
        },
        "name": {
          "type": "string",
          "title": "Filename"
        },
        "url": {
          "type": "string",
          "title": "File url (optional)"
        }
      },
      "description": "Media File."
    },
    "webitelchatMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Unique message identifier inside this chat."
        },
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp when this message was sent (published)."
        },
        "from": {
          "$ref": "#/definitions/chatPeer",
          "description": "Sender of the message."
        },
        "chat": {
          "$ref": "#/definitions/chatChat",
          "description": "Conversation the message belongs to .."
        },
        "sender": {
          "$ref": "#/definitions/chatChat",
          "description": "Chat Sender of the message, sent on behalf of a chat (member)."
        },
        "edit": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp when this message was last edited."
        },
        "text": {
          "type": "string",
          "description": "Message Text."
        },
        "file": {
          "$ref": "#/definitions/webitelchatFile",
          "description": "Message Media. Attachment."
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Context. Variables. Environment."
        },
        "keyboard": {
          "$ref": "#/definitions/chatReplyMarkup",
          "description": "Keyboard. Buttons. Quick Replies."
        },
        "postback": {
          "$ref": "#/definitions/webitelchatPostback",
          "description": "Postback. Reply Button Click[ed]."
        }
      },
      "description": "Chat Message."
    },
    "webitelchatPostback": {
      "type": "object",
      "properties": {
        "mid": {
          "type": "string",
          "format": "int64",
          "description": "Message ID of the button."
        },
        "code": {
          "type": "string",
          "description": "Data associated with the Button."
        },
        "text": {
          "type": "string",
          "description": "Button's display caption."
        }
      },
      "description": "Postback. Reply Button Click[ed]."
    }
  }
}
