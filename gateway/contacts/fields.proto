syntax = "proto3";
package webitel.contacts;
option go_package = "webitel.go/api/contacts;contacts";

// import "protoc-gen-openapiv2/options/annotations.proto";

enum AccessMode {
  // Can `fetch` record. [GET]
  READ = 0;
  // Can `update` record. [PUT|PATCH]
  WRITE = 1;
  // Can `delete` record. [DELETE]
  DELETE = 2;
}

// Lookup reference information.
// Simplified search filter to uniquely identify related object.
message Lookup {
  // Reference Object unique ID.
  string id = 1;
  
  // FIXME: string ? to have more abilities ?

  // Reference Object well-known type.
  string type = 2;

  // OPTIONAL. The type of the reference object.
  // Used when the reference type is not obvious and need to be explicitly specified.
  // In most cases, type is intuitive relative to the name of the field the value of which it is, like:
  // Lookup app;
  // Lookup user;
  // Lookup schema;
  // -but- for example
  // Lookup createdBy; // MAY be related to: 'user' or 'role'.

  // Reference Object display name.
  string name = 3;
}

// // The source of a field.
// // [Id]entity [P]rovider account that MAY provide identity principals.
// // MAY be chat gateway account, some external integration account, etc.
// // Example:
// // input: {
// //   "id": "235",
// //   "type": "telegram",
// // }
// // output: {
// //   "id": "235",
// //   "type": "telegram",
// //   "name": "My Bot",
// //   "time": "1667385851768"
// // }
// message Source {
//   // REQUIRED. The unique identifier within the source type generated by the server.
//   // FIXME: This might be the Client-App internal Account ID as a provider of the IDToken claim value.
//   // ALIAS: SubjectID; "sub"
//   string id = 1;
//   // The source type. Issuer identification.
//   // Mostly this is the well-known integrity protocol.
//   // [Messaging](s)
//   // - telegram
//   // - facebook
//   // - instagram
//   // [OAuth 2.0](s)
//   // - google
//   // - facebook
//   // ALIAS: IssuerID; "iss"
//   string type = 2;
//   // READONLY. The source account name to display.
//   // Part of Lookup reference output.
//   // IMClient output example: "Telegram (My Bot)". {"name": "My Bot"}
//   string name = 3;
//   // Last modification timestamp of this source.
//   int64  date = 4;
//   // // VIA Source provider account.
//   // webitel.contacts.Lookup via = 4;
// }

// // Metadata about the [A]ttribute[V]alue [A]ssetion.
// message FieldMetadata {
//   option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
//     read_only: true
//   };
  
//   // Unique Field IDentifier.
//   string id = 1;
  
//   // Version of the Field update.
//   // Take part in Etag generation
//   uint32 ver = 2;
  
//   // // Position within fields of the same type
//   // int32 pos = 3; // prior

//   // ETag 
//   string etag = 4;

//   // // True if the field is the primary field for all sources in the contact.
//   // // Each contact will have at most one field with primary set to true.
//   // bool primary = 5;
  
//   // bool sourcePrimary = 6;
  
//   // // True if the field is verified; false if the field is unverified.
//   // // A verified field is typically a name, email address, phone number, or website
//   // // that has been confirmed to be owned by the contact.
//   // bool verified = 7;
  
//   // // The source of the field.
//   // webitel.contacts.Source source = 8;

//   webitel.contacts.Lookup contact = 8;

//   // The user who created this Field.
//   int64 created_at = 10;

//   // Timestamp(milli) of the Field creation.
//   webitel.contacts.Lookup created_by = 11;
  
//   // Timestamp(milli) of the last Field update.
//   // Take part in Etag generation.
//   int64 updated_at = 12;
  
//   // The user who performed last Update.
//   webitel.contacts.Lookup updated_by = 13;
// }

// // A contact's name.
// // If the name is a mononym, the family name is empty.
// //
// // Inspired:
// // https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims
// // https://developers.google.com/people/api/rest/v1/people#name
// message Name {
//   // Metadata about the name.
//   FieldMetadata metadata = 1;

//   bool primary = 5;
//   bool verified = 6;

//   // // Output only. The display name formatted
//   // // according to the locale specified by the viewer's account
//   // // or the Accept-Language HTTP header.
//   // string displayName = 2;
//   // // Output only. The display name with the last name first formatted
//   // // according to the locale specified by the viewer's account
//   // // or the Accept-Language HTTP header.
//   // string displayNameLastFirst = 3;
//   // // The free form name value.
//   // string unstructuredName = 4;

//   // REQUIRED. End-User's full name in displayable form
//   // including all name parts, possibly including titles and suffixes,
//   // ordered according to the End-User's locale and preferences.
//   string common_name = 7;
//   // OPTIONAL. Given name(s) or first name(s) of the End-User.
//   // Note that in some cultures, people can have multiple given names;
//   // all can be present, with the names being separated by space characters.
//   // https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name
//   string given_name = 8;
//   // OPTIONAL. Middle name(s) of the End-User.
//   // Note that in some cultures, people can have multiple middle names;
//   // all can be present, with the names being separated by space characters.
//   // Also note that in some cultures, middle names are not used.
//   string middle_name = 9;
//   // OPTIONAL. Surname(s) or last name(s) of the End-User.
//   // Note that in some cultures, people can have multiple family names or no family name;
//   // all can be present, with the names being separated by space characters.
//   // https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name
//   string family_name = 10;

//   // // The honorific prefixes, such as Mrs. or Dr.
//   // string honorificPrefix = 8;
//   // // The honorific suffixes, such as Jr.
//   // string honorificSuffix = 9;
//   // // The full name spelled as it sounds.
//   // string phoneticFullName = 10;
//   // // The family name spelled as it sounds.
//   // string phoneticFamilyName = 11;
//   // // The given name spelled as it sounds.
//   // string phoneticGivenName = 12;
//   // // The middle name(s) spelled as they sound.
//   // string phoneticMiddleName = 13;
//   // // The honorific prefixes spelled as they sound.
//   // string phoneticHonorificPrefix = 14;
//   // // The honorific suffixes spelled as they sound.
//   // string phoneticHonorificSuffix = 15;
// }

// // A contact's locale preference.
// message Language {
//   // Metadata about the locale.
//   FieldMetadata metadata = 1;
//   // The well-formed IETF BCP 47 language tag representing the locale.
//   // https://www.rfc-editor.org/info/bcp47
//   string lang = 2;
// }

// // A contact's timezone preference.
// message Timezone {
//   // Metadata about the timezone.
//   FieldMetadata metadata = 1;

//   bool primary = 6;
  
//   // REQUIRED. The fixed zone name.
//   string name = 7;

//   // OPTIONAL. The fixed 'UTC' offset (in seconds) for custom zone spec.
//   int32 offset = 8;

//   // // Lookup value from Location(?) dictionary.
//   // webitel.contacts.Lookup location = 9;
// }

// // A contact's physical mailing address.
// // May be a P.O. box or street address.
// // All fields are optional.
// //
// // Inspired:
// // https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim
// // https://developers.google.com/people/api/rest/v1/people#address
// message Address {
//   // Metadata about the address.
//   FieldMetadata metadata = 1;

//   bool verified = 5;
//   bool primary = 6;

//   // The type of the address.
//   // Lookup value from CommunnicationType dictionary.
//   // The type can be custom or one of these predefined values:
//   // - home
//   // - work
//   // - other
//   webitel.contacts.Lookup type = 7;
//   // The unstructured value of the address.
//   // If this is not set by the user it will be
//   // automatically constructed from structured values.
//   string value = 8;
//   // The [P]ost [O]ffice Box of the address, also known as P.O.Box.
//   // https://en.wikipedia.org/wiki/Post_office_box
//   string po_box = 9;
//   // The street address.
//   // Full street address component, which MAY include house number, street name,
//   // and multi-line extended street address information.
//   // This field MAY contain multiple lines, separated by newlines.
//   string street = 10;
//   // // The extended address of the address; for example, the apartment number.
//   // string extendedAddress = 7;

//   // The city of the address.
//   string city = 11;
//   // State, province, prefecture, or region component of the address.
//   string region = 12;
//   // The country name component of the address.
//   string country = 13;
//   // The ISO 3166-1 alpha-2 country code of the address.
//   // https://www.iso.org/iso-3166-country-codes.html
//   string country_code = 14;
//   // Zip code or postal code component of the address.
//   string postal_code = 15;
// }


// // A contact's identifier from an external entity related to the contact.
// // Inspired by: https://openid.net/specs/openid-connect-core-1_0.html#IDToken
// message ExternalId {
//   // Metadata about the external subject binding.
//   // FIXME: Use metadata.source as a Via Account.
//   FieldMetadata metadata = 1;
//   // READONLY. VIA internal Authorization client account.
//   // Can be set by self VIA IM-Account gateway only !
//   // If set -- all client sensitive data is READONLY, except .type !
//   // If set -- can be deleted, by the user only !
//   webitel.contacts.Lookup via = 2;
//   // REQUIRED. The type of the external ID.
//   // INSPIRED: OpenID specification.
//   // Issuer Identifier. The iss value is a case sensitive URL using the https scheme that
//   // contains scheme, host, and optionally, port number and path components and no query or fragment components.
//   string iss = 3;
//   // REQUIRED. The value of the external ID..
//   // INSPIRED: OpenID specification.
//   // Subject Identifier. A locally unique and never reassigned identifier within the Issuer for the End-User,
//   // which is intended to be consumed by the Client, e.g., 24400320 or AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4.
//   // It MUST NOT exceed 255 ASCII characters in length.
//   // The sub value is a case sensitive string.
//   string sub = 4;
//   // The protocol.
//   string proto = 5;
// }

// // Manager. The Contact's responsible User. 
// message Manager {
//   // Metadata about the Manager.
//   FieldMetadata metadata = 1;
  
//   bool primary = 5;

//   // Responsible User.
//   webitel.contacts.Lookup user = 6;
// }



