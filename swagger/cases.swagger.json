{
  "swagger": "2.0",
  "info": {
    "title": "Webitel API",
    "version": "24.04.0",
    "contact": {
      "name": "Webitel",
      "url": "https://webitel.com",
      "email": "support@webitel.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "tags": [
    {
      "name": "Services"
    },
    {
      "name": "CaseComments"
    },
    {
      "name": "RelatedCases"
    },
    {
      "name": "CaseFiles"
    },
    {
      "name": "CaseLinks"
    },
    {
      "name": "SLAConditions"
    },
    {
      "name": "Cases"
    },
    {
      "name": "Catalogs"
    },
    {
      "name": "CloseReasons"
    },
    {
      "name": "CloseReasonGroups"
    },
    {
      "name": "Priorities"
    },
    {
      "name": "SLAs"
    },
    {
      "name": "Sources"
    },
    {
      "name": "Statuses"
    },
    {
      "name": "StatusConditions"
    }
  ],
  "host": "dev.webitel.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cases": {
      "get": {
        "operationId": "Cases_SearchCases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filters",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cases"
        ]
      },
      "post": {
        "summary": "on create, we should accept service and all parameters that correspond to it,\npriority have the fields that were directly set from the front-end and if they are empty we should\nfill them from service (we can't change the SLA and SLA conditions)\netag doesn't play any role on this API",
        "operationId": "Cases_CreateCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCreateCase"
            }
          },
          {
            "name": "fields",
            "description": "Result fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/catalogs": {
      "get": {
        "summary": "Retrieve a list of catalogs or search catalogs",
        "operationId": "Catalogs_ListCatalogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCatalogList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number for pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Number of records per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sorting options by fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "List of IDs to filter the catalogs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q.query",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q.fetchType",
            "description": "The type of data fetching for catalog services\n\n - PARTIAL: Only essential fields like [ Id, Name, Description, Created/Updated at ].\n\nPartial info includes only essential fields.\n - FULL: The fetch type indicates whether to retrieve\nall available data for the catalog ( FULL ) or only essential fields ( PARTIAL ).\n\nFull info includes all fields of the catalog.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PARTIAL",
              "FULL"
            ],
            "default": "PARTIAL"
          },
          {
            "name": "state",
            "description": "Filter by state (true for active, false for inactive)",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "depth",
            "description": "Filter by the depth of the hierarchy to retrieve services.\nThe depth indicates how many ancestor levels of services\nwill be included for each catalog.\n- A depth of 0 includes only the direct catalog.\n- A depth of 1 includes the catalog and its immediate services.\n- By default the depth is unlimited,\n  meaning all nested services and sub-services will be included.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "subFields",
            "description": "Fields to be retrieved as a result for [SUBSERVICES].\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog subservices.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Catalogs"
        ]
      },
      "post": {
        "summary": "Create a new catalog",
        "operationId": "Catalogs_CreateCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateCatalogRequest"
            }
          }
        ],
        "tags": [
          "Catalogs"
        ]
      }
    },
    "/cases/catalogs/{id}": {
      "get": {
        "summary": "Locate a catalog by ID",
        "operationId": "Catalogs_LocateCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateCatalogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the catalog to be located",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Catalogs"
        ]
      },
      "delete": {
        "summary": "Delete a catalog",
        "operationId": "Catalogs_DeleteCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCatalogList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the catalog to be deleted",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          }
        ],
        "tags": [
          "Catalogs"
        ]
      },
      "put": {
        "summary": "Update an existing catalog",
        "operationId": "Catalogs_UpdateCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the catalog to be updated",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "description": "Input data for updating the catalog",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCatalog"
            }
          }
        ],
        "tags": [
          "Catalogs"
        ]
      },
      "patch": {
        "summary": "Update an existing catalog",
        "operationId": "Catalogs_UpdateCatalog2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCatalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the catalog to be updated",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "description": "Input data for updating the catalog",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCatalog"
            }
          }
        ],
        "tags": [
          "Catalogs"
        ]
      }
    },
    "/cases/close_reason_groups": {
      "get": {
        "summary": "Retrieve a list of close reason groups or search close reason groups",
        "operationId": "CloseReasonGroups_ListCloseReasonGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonGroupList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      },
      "post": {
        "summary": "Create a new close reason group",
        "operationId": "CloseReasonGroups_CreateCloseReasonGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateCloseReasonGroupRequest"
            }
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      }
    },
    "/cases/close_reason_groups/{id}": {
      "get": {
        "summary": "Locate a close reason group by ID",
        "operationId": "CloseReasonGroups_LocateCloseReasonGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateCloseReasonGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      },
      "delete": {
        "summary": "Delete a close reason group",
        "operationId": "CloseReasonGroups_DeleteCloseReasonGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      },
      "put": {
        "summary": "Update an existing close reason group",
        "operationId": "CloseReasonGroups_UpdateCloseReasonGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCloseReasonGroup"
            }
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      },
      "patch": {
        "summary": "Update an existing close reason group",
        "operationId": "CloseReasonGroups_UpdateCloseReasonGroup2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCloseReasonGroup"
            }
          }
        ],
        "tags": [
          "CloseReasonGroups"
        ]
      }
    },
    "/cases/comments/{etag}": {
      "get": {
        "summary": "Retrieve a specific comment by its etag",
        "operationId": "CaseComments_LocateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "description": "Identifier of the comment to retrieve.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Specific fields to return for the comment.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      },
      "delete": {
        "summary": "Delete a specific comment by its etag",
        "operationId": "CaseComments_DeleteComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "description": "Identifier of the comment to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return after deletion.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      }
    },
    "/cases/comments/{input.etag}": {
      "put": {
        "summary": "Update a specific comment by its etag",
        "operationId": "CaseComments_UpdateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "description": "Identifier for the comment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Data for the comment to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "text": "My new comment"
              },
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Content of the comment."
                }
              },
              "title": "Data for the comment to update."
            }
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      },
      "patch": {
        "summary": "Update a specific comment by its etag",
        "operationId": "CaseComments_UpdateComment2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "description": "Identifier for the comment.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Data for the comment to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "text": "My new comment"
              },
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Content of the comment."
                }
              },
              "title": "Data for the comment to update."
            }
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      }
    },
    "/cases/links/{caseEtag}": {
      "post": {
        "operationId": "CaseLinks_CreateLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "caseEtag",
            "description": "new comment link",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "result fields needed on the front-end for each comment",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "input.etag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "input.url",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "input.name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      }
    },
    "/cases/links/{etag}": {
      "get": {
        "operationId": "CaseLinks_LocateLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "description": "(id allowed)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      },
      "delete": {
        "operationId": "CaseLinks_DeleteLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      }
    },
    "/cases/links/{input.etag}": {
      "put": {
        "operationId": "CaseLinks_UpdateLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "etag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "on return",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      },
      "patch": {
        "operationId": "CaseLinks_UpdateLink2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "etag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "on return",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      }
    },
    "/cases/priorities": {
      "get": {
        "summary": "Retrieve a list of priorities or search priorities",
        "operationId": "Priorities_ListPriorities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesPriorityList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Priorities"
        ]
      },
      "post": {
        "summary": "Create a new priority",
        "operationId": "Priorities_CreatePriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesPriority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputPriority"
            }
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Priorities"
        ]
      }
    },
    "/cases/priorities/{id}": {
      "get": {
        "summary": "Locate a priority by ID",
        "operationId": "Priorities_LocatePriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocatePriorityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the priority to be located",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Priorities"
        ]
      },
      "delete": {
        "summary": "Delete a priority",
        "operationId": "Priorities_DeletePriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesPriority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Priorities"
        ]
      },
      "put": {
        "summary": "Update an existing priority",
        "operationId": "Priorities_UpdatePriority",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesPriority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputPriority"
            }
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Priorities"
        ]
      },
      "patch": {
        "summary": "Update an existing priority",
        "operationId": "Priorities_UpdatePriority2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesPriority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputPriority"
            }
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Priorities"
        ]
      }
    },
    "/cases/related/{id}": {
      "get": {
        "summary": "Retrieve a specific related case by ID",
        "operationId": "RelatedCases_LocateRelatedCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identifier of the related case.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      },
      "delete": {
        "summary": "Delete a specific related case",
        "operationId": "RelatedCases_DeleteRelatedCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identifier of the related case to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      },
      "put": {
        "summary": "Update an existing related case",
        "operationId": "RelatedCases_UpdateRelatedCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identifier of the related case to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Input data for the related case update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputRelatedCase"
            }
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      },
      "patch": {
        "summary": "Update an existing related case",
        "operationId": "RelatedCases_UpdateRelatedCase2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identifier of the related case to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Input data for the related case update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputRelatedCase"
            }
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      }
    },
    "/cases/services": {
      "get": {
        "summary": "Retrieve a list of services or search services within a catalog",
        "operationId": "Services_ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesServiceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number for pagination",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Number of records per page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sorting options by fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "List of IDs to filter the services",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rootId",
            "description": "Filter services by catalog ID (required)",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "state",
            "description": "Filter by state (true for active, false for inactive)",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "post": {
        "summary": "Create a new service within a catalog",
        "operationId": "Services_CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/cases/services/{id}": {
      "get": {
        "summary": "Locate a service by ID",
        "operationId": "Services_LocateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the service to be located",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "delete": {
        "summary": "Delete a service",
        "operationId": "Services_DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesServiceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the service to be deleted",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "minItems": 1
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "put": {
        "summary": "Update an existing service",
        "operationId": "Services_UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the service to be updated",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "description": "Input data for updating the service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputService"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      },
      "patch": {
        "summary": "Update an existing service",
        "operationId": "Services_UpdateService2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the service to be updated",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "description": "Input data for updating the service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputService"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/cases/slas": {
      "get": {
        "summary": "Retrieve a list of SLAs or search SLA conditions",
        "operationId": "SLAs_ListSLAs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLAList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SLAs"
        ]
      },
      "post": {
        "summary": "Create a new SLA",
        "operationId": "SLAs_CreateSLA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateSLARequest"
            }
          }
        ],
        "tags": [
          "SLAs"
        ]
      }
    },
    "/cases/slas/{id}": {
      "get": {
        "summary": "Locate an SLA by ID",
        "operationId": "SLAs_LocateSLA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateSLAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "SLAs"
        ]
      },
      "delete": {
        "summary": "Delete an SLA",
        "operationId": "SLAs_DeleteSLA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SLAs"
        ]
      },
      "put": {
        "summary": "Update an existing SLA",
        "operationId": "SLAs_UpdateSLA",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSLA"
            }
          }
        ],
        "tags": [
          "SLAs"
        ]
      },
      "patch": {
        "summary": "Update an existing SLA",
        "operationId": "SLAs_UpdateSLA2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSLA"
            }
          }
        ],
        "tags": [
          "SLAs"
        ]
      }
    },
    "/cases/sources": {
      "get": {
        "summary": "Retrieve a list of sources or search sources",
        "operationId": "Sources_ListSources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Filter by source type.\n\n - TYPE_UNSPECIFIED: Unspecified source type.\n - CALL: Phone call source type.\n - CHAT: Chat source type.\n - SOCIAL_MEDIA: Social media source type.\n - EMAIL: Email source type.\n - API: API source type.\n - MANUAL: Manual source type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TYPE_UNSPECIFIED",
                "CALL",
                "CHAT",
                "SOCIAL_MEDIA",
                "EMAIL",
                "API",
                "MANUAL"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Sources"
        ]
      },
      "post": {
        "summary": "Create a new source",
        "operationId": "Sources_CreateSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for creating a new source.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateSourceRequest"
            }
          }
        ],
        "tags": [
          "Sources"
        ]
      }
    },
    "/cases/sources/{id}": {
      "get": {
        "summary": "Locate a source by ID",
        "operationId": "Sources_LocateSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the source to locate.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved into result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Sources"
        ]
      },
      "delete": {
        "summary": "Delete a source",
        "operationId": "Sources_DeleteSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the source to delete.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Sources"
        ]
      },
      "put": {
        "summary": "Update an existing source",
        "operationId": "Sources_UpdateSource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSource"
            }
          }
        ],
        "tags": [
          "Sources"
        ]
      },
      "patch": {
        "summary": "Update an existing source",
        "operationId": "Sources_UpdateSource2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSource"
            }
          }
        ],
        "tags": [
          "Sources"
        ]
      }
    },
    "/cases/statuses": {
      "get": {
        "summary": "Retrieve a list of statuses or search statuses",
        "operationId": "Statuses_ListStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Statuses"
        ]
      },
      "post": {
        "summary": "Create a new status",
        "operationId": "Statuses_CreateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitelcasesStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateStatusRequest"
            }
          }
        ],
        "tags": [
          "Statuses"
        ]
      }
    },
    "/cases/statuses/{id}": {
      "get": {
        "summary": "Locate a status by ID",
        "operationId": "Statuses_LocateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Statuses"
        ]
      },
      "delete": {
        "summary": "Delete a status",
        "operationId": "Statuses_DeleteStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitelcasesStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Statuses"
        ]
      },
      "put": {
        "summary": "Update an existing status",
        "operationId": "Statuses_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitelcasesStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputStatus"
            }
          }
        ],
        "tags": [
          "Statuses"
        ]
      },
      "patch": {
        "summary": "Update an existing status",
        "operationId": "Statuses_UpdateStatus2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitelcasesStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputStatus"
            }
          }
        ],
        "tags": [
          "Statuses"
        ]
      }
    },
    "/cases/{caseEtag}/comments": {
      "get": {
        "summary": "Retrieve a list of comments associated with a specific case",
        "operationId": "CaseComments_ListComments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseCommentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "caseEtag",
            "description": "Etag or ID of the case for which comments are requested.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number for pagination.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Number of comments per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Query string for search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "Array of requested id.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sorting order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return for each comment.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      },
      "post": {
        "summary": "Publish comment into a specific case",
        "operationId": "CaseComments_PublishComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "caseEtag",
            "description": "Etag or ID of the case to which comments belong.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Comment to publish.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCaseComment"
            }
          },
          {
            "name": "fields",
            "description": "Result fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseComments"
        ]
      }
    },
    "/cases/{caseEtag}/files": {
      "get": {
        "summary": "Retrieve a list of files associated with a case",
        "operationId": "CaseFiles_ListFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseFileList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "caseEtag",
            "description": "ID of the case to fetch files for (required).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "The page number to retrieve.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Number of items per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Search term.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ids",
            "description": "Array of requested id.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseFiles"
        ]
      }
    },
    "/cases/{caseEtag}/links": {
      "get": {
        "summary": "With Case",
        "operationId": "CaseLinks_ListLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCaseLinkList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "caseEtag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CaseLinks"
        ]
      }
    },
    "/cases/{etag}": {
      "get": {
        "operationId": "Cases_LocateCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cases"
        ]
      },
      "delete": {
        "summary": "on delete, we should require etag, to understand if user has right version of the case\nalso will be deleted all objects connected to the case, such as comments, related cases, links and files",
        "operationId": "Cases_DeleteCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "etag",
            "description": "identifier of the object",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "fields to return in deleted object",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{input.etag}": {
      "put": {
        "summary": "on update, we should be able to accept service and all parameters that correspond to it,\nif service and corresponding to it fields were changed simultaneously then priority have\nservice and dependent fields set from the service automatically (we can't change the SLA, SLA conditions )\netag is required to update the true version of the case",
        "operationId": "Cases_UpdateCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "changes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "create: required;"
                },
                "subject": {
                  "type": "string",
                  "title": "create: required;"
                },
                "description": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "contactInfo": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "assignee": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default from service or set by UI;"
                },
                "reporter": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: required (if empty recognize as anonymous contact);"
                },
                "impacted": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: required, default is reporter or ui (if empty recognize as anonymous);"
                },
                "group": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default from service or set by UI;"
                },
                "status": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default initial value from status lookup or ui;"
                },
                "closeReason": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required;"
                },
                "priority": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default first value from priority lookup"
                },
                "source": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "source of the case"
                },
                "service": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "on this field base many other readonly fields on return"
                },
                "close": {
                  "$ref": "#/definitions/casesCloseInfo",
                  "title": "create: not required; update: required only when case status goes to the final state"
                },
                "rate": {
                  "$ref": "#/definitions/casesRateInfo",
                  "title": "only for API, not UI"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputCaseComment"
                  }
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputCaseLink"
                  },
                  "title": "repeated InputCaseFile files = 17;"
                },
                "related": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputRelatedCase"
                  }
                }
              },
              "title": "changes"
            }
          },
          {
            "name": "fields",
            "description": "fields to return in resulting object",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cases"
        ]
      },
      "patch": {
        "summary": "on update, we should be able to accept service and all parameters that correspond to it,\nif service and corresponding to it fields were changed simultaneously then priority have\nservice and dependent fields set from the service automatically (we can't change the SLA, SLA conditions )\netag is required to update the true version of the case",
        "operationId": "Cases_UpdateCase2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "input.etag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "changes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "create: required;"
                },
                "subject": {
                  "type": "string",
                  "title": "create: required;"
                },
                "description": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "contactInfo": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "assignee": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default from service or set by UI;"
                },
                "reporter": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: required (if empty recognize as anonymous contact);"
                },
                "impacted": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: required, default is reporter or ui (if empty recognize as anonymous);"
                },
                "group": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default from service or set by UI;"
                },
                "status": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default initial value from status lookup or ui;"
                },
                "closeReason": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required;"
                },
                "priority": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "create: not required, default first value from priority lookup"
                },
                "source": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "source of the case"
                },
                "service": {
                  "$ref": "#/definitions/generalLookup",
                  "title": "on this field base many other readonly fields on return"
                },
                "close": {
                  "$ref": "#/definitions/casesCloseInfo",
                  "title": "create: not required; update: required only when case status goes to the final state"
                },
                "rate": {
                  "$ref": "#/definitions/casesRateInfo",
                  "title": "only for API, not UI"
                },
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputCaseComment"
                  }
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputCaseLink"
                  },
                  "title": "repeated InputCaseFile files = 17;"
                },
                "related": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/casesInputRelatedCase"
                  }
                }
              },
              "title": "changes"
            }
          },
          {
            "name": "fields",
            "description": "fields to return in resulting object",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cases"
        ]
      }
    },
    "/cases/{primaryCaseId}/related": {
      "get": {
        "summary": "List all related cases for a specific case",
        "operationId": "RelatedCases_ListRelatedCases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "primaryCaseId",
            "description": "Primary Case ID for which related cases are requested.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number for pagination.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Number of related cases per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "q",
            "description": "Query string for search.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sorting order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to return for each related case.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ids",
            "description": "Filter by ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      },
      "post": {
        "summary": "Create a new related case",
        "operationId": "RelatedCases_CreateRelatedCase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesRelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "primaryCaseId",
            "description": "Primary case details.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Input data for the related case.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesCreateInputRelatedCase"
            }
          },
          {
            "name": "fields",
            "description": "Fields to include in the response.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RelatedCases"
        ]
      }
    },
    "/close_reason_groups/{closeReasonGroupId}/close_reasons": {
      "get": {
        "summary": "Retrieve a list of close reasons or search close reasons",
        "operationId": "CloseReasons_ListCloseReasons",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReasonList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "description": "Close reason group ID filter",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      },
      "post": {
        "summary": "Create a new close reason",
        "operationId": "CloseReasons_CreateCloseReason",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloseReasonsCreateCloseReasonBody"
            }
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      }
    },
    "/close_reason_groups/{closeReasonGroupId}/close_reasons/{id}": {
      "get": {
        "summary": "Locate a close reason by ID",
        "operationId": "CloseReasons_LocateCloseReason",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateCloseReasonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      },
      "delete": {
        "summary": "Delete a close reason",
        "operationId": "CloseReasons_DeleteCloseReason",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      },
      "put": {
        "summary": "Update an existing close reason",
        "operationId": "CloseReasons_UpdateCloseReason",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCloseReason"
            }
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      },
      "patch": {
        "summary": "Update an existing close reason",
        "operationId": "CloseReasons_UpdateCloseReason2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesCloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "closeReasonGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputCloseReason"
            }
          }
        ],
        "tags": [
          "CloseReasons"
        ]
      }
    },
    "/slas/{slaId}/sla_condition": {
      "post": {
        "summary": "Create a new SLACondition",
        "operationId": "SLAConditions_CreateSLACondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SLAConditionsCreateSLAConditionBody"
            }
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      }
    },
    "/slas/{slaId}/sla_condition/{id}": {
      "get": {
        "summary": "Locate an SLACondition by ID",
        "operationId": "SLAConditions_LocateSLACondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateSLAConditionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "description": "Unique identifier of the SLACondition",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "description": "Unique identifier of the SLACondition",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      },
      "delete": {
        "summary": "Delete an SLACondition",
        "operationId": "SLAConditions_DeleteSLACondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      },
      "put": {
        "summary": "Update an existing SLACondition",
        "operationId": "SLAConditions_UpdateSLACondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSLACondition"
            }
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      },
      "patch": {
        "summary": "Update an existing SLACondition",
        "operationId": "SLAConditions_UpdateSLACondition2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputSLACondition"
            }
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      }
    },
    "/slas/{slaId}/sla_conditions": {
      "get": {
        "summary": "Retrieve a list of SLAConditions or search SLACondition conditions",
        "operationId": "SLAConditions_ListSLAConditions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesSLAConditionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slaId",
            "description": "Filter by SLA Id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slaConditionId",
            "description": "Filter by SLACondition Id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "priorityId",
            "description": "filter by priority id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "SLAConditions"
        ]
      }
    },
    "/statuses/{statusId}/status": {
      "get": {
        "summary": "Retrieve a list of statuses or search status conditions",
        "operationId": "StatusConditions_ListStatusConditions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusConditionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "description": "Filter by Status Id.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page",
            "description": "Page number of result dataset records. offset = (page*size)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "description": "Size count of records on result page. limit = (size++)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort",
            "description": "Sort the result according to fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "Filter by unique IDs.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      },
      "post": {
        "summary": "Create a new status condition",
        "operationId": "StatusConditions_CreateStatusCondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusConditionsCreateStatusConditionBody"
            }
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      }
    },
    "/statuses/{statusId}/status/{id}": {
      "get": {
        "summary": "Locate a status condition by ID",
        "operationId": "StatusConditions_LocateStatusCondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesLocateStatusConditionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "description": "ID of the status to be located",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "description": "ID of the status condition to be located",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved as a result.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      },
      "delete": {
        "summary": "Delete a status condition",
        "operationId": "StatusConditions_DeleteStatusCondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      },
      "put": {
        "summary": "Update an existing status condition",
        "operationId": "StatusConditions_UpdateStatusCondition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputStatusCondition"
            }
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      },
      "patch": {
        "summary": "Update an existing status condition",
        "operationId": "StatusConditions_UpdateStatusCondition2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/casesStatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/casesInputStatusCondition"
            }
          }
        ],
        "tags": [
          "StatusConditions"
        ]
      }
    }
  },
  "definitions": {
    "CloseReasonsCreateCloseReasonBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "CreateCloseReasonRequest message for creating a new close reason",
      "required": [
        "name",
        "lookup_id"
      ]
    },
    "SLAConditionsCreateSLAConditionBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "priorities": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of priority IDs for creation [FROM Priority Dictionary]"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "CreateSLAConditionRequest message for creating a new SLACondition",
      "required": [
        "name",
        "priorities",
        "reactionTime",
        "resolutionTime"
      ]
    },
    "StatusConditionsCreateStatusConditionBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "CreateStatusConditionRequest message for creating a new status",
      "required": [
        "name",
        "lookup_id"
      ]
    },
    "casesCase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "default, readonly system fields"
        },
        "ver": {
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "title": "main field required for read, update and delete"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "unixmilli"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "unixmilli"
        },
        "name": {
          "type": "string",
          "title": "name of the case, formed by the prefix defined in Catalog and int, in docs uses as id"
        },
        "subject": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "title": "free-form text to describe case"
        },
        "contactInfo": {
          "type": "string",
          "title": "free-form text to describe contact information"
        },
        "plannedReactionAt": {
          "type": "string",
          "format": "int64",
          "title": "planned reaction time calculated by sla and conditions, taking into account the calendar (unixmilli)"
        },
        "plannedResolveAt": {
          "type": "string",
          "format": "int64",
          "title": "planned resolve time calculated on-flight by sla and conditions, taking into account the calendar (unixmilli)"
        },
        "status": {
          "$ref": "#/definitions/generalLookup",
          "title": "initialized from service/subservice of the catalog, should not be changed when service changed"
        },
        "closeReasonGroup": {
          "$ref": "#/definitions/generalLookup",
          "title": "defines what close reason lookup we should use for this case, should not be changed when service changed"
        },
        "author": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact that created the case"
        },
        "assignee": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact that assigned to resolve this case (optional)"
        },
        "reporter": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact that reported that issue, if null - anonymous contact"
        },
        "impacted": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact that can be impacted by this case, by default the reporter of the case, can be null if reporter is anonymous contact"
        },
        "group": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact group from the service (optional)"
        },
        "priority": {
          "$ref": "#/definitions/generalLookup",
          "title": "priority"
        },
        "source": {
          "$ref": "#/definitions/generalLookup",
          "title": "source of the case"
        },
        "statusCondition": {
          "$ref": "#/definitions/generalLookup",
          "title": "case state value from the status_lookup"
        },
        "close": {
          "$ref": "#/definitions/casesCloseInfo",
          "title": "close information, required when case is in final state"
        },
        "rate": {
          "$ref": "#/definitions/casesRateInfo",
          "title": "rating information, not required (filled by internal services)"
        },
        "timing": {
          "$ref": "#/definitions/casesTimingInfo",
          "title": "planned timings calculated on-flight by the SLA and it's conditions"
        },
        "slaCondition": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesSLACondition"
          }
        },
        "service": {
          "$ref": "#/definitions/generalLookup"
        },
        "comments": {
          "$ref": "#/definitions/casesCaseCommentList",
          "title": "all case's comments"
        },
        "related": {
          "$ref": "#/definitions/casesRelatedCaseList",
          "title": "related cases"
        },
        "links": {
          "$ref": "#/definitions/casesCaseLinkList",
          "title": "attached links"
        },
        "files": {
          "$ref": "#/definitions/casesCaseFileList",
          "title": "attached files"
        },
        "sla": {
          "$ref": "#/definitions/generalLookup",
          "title": "sla from the service"
        }
      }
    },
    "casesCaseComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Main identifier for read, update, and delete operations."
        },
        "etag": {
          "type": "string",
          "title": "entity tag representing id + ver"
        },
        "ver": {
          "type": "integer",
          "format": "int32",
          "description": "Version number of the comment, used for concurrency control."
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "description": "User who created the comment."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp (in milliseconds) of when the comment was created."
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "description": "User who last updated the comment."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp (in milliseconds) of the last update."
        },
        "text": {
          "type": "string",
          "description": "The content of the comment."
        },
        "edited": {
          "type": "boolean",
          "description": "Indicates if the comment was edited; true if created_at \u003c updated_at."
        },
        "canEdit": {
          "type": "boolean",
          "description": "Indicates if the comment can be edited by current user."
        },
        "author": {
          "$ref": "#/definitions/generalLookup",
          "description": "Contact-author of the comment."
        },
        "caseId": {
          "type": "string",
          "format": "int64",
          "description": "Optional relation to the associated case."
        }
      },
      "description": "Represents a comment associated with a case."
    },
    "casesCaseCommentList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Current page number."
        },
        "next": {
          "type": "boolean",
          "description": "Flag to indicate if more pages are available."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCaseComment"
          },
          "description": "List of comments on the current page."
        }
      },
      "description": "Contains a paginated list of comments."
    },
    "casesCaseFileList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Current page number."
        },
        "next": {
          "type": "boolean",
          "description": "Indicator if there is a next page."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesFile"
          },
          "description": "List of case files."
        }
      },
      "description": "Contains a list of case files with pagination."
    },
    "casesCaseLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "ver": {
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "title": "main field required for read, update and delete"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "unixmilli"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64"
        },
        "author": {
          "$ref": "#/definitions/generalLookup",
          "title": "contact-author calculated on-flight (optional)"
        },
        "name": {
          "type": "string",
          "title": "link name (optional)"
        },
        "url": {
          "type": "string",
          "title": "URL"
        }
      }
    },
    "casesCaseLinkList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "format": "int64"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCaseLink"
          }
        }
      }
    },
    "casesCaseList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "format": "int64"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCase"
          }
        }
      }
    },
    "casesCatalog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier for the catalog"
        },
        "name": {
          "type": "string",
          "title": "Name of the catalog"
        },
        "description": {
          "type": "string",
          "title": "Description of the catalog (optional)"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix used for case identification (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the catalog (true for active, false for inactive)"
        },
        "sla": {
          "$ref": "#/definitions/generalLookup",
          "title": "SLA associated with the catalog"
        },
        "status": {
          "$ref": "#/definitions/generalLookup",
          "title": "Status associated with the catalog"
        },
        "closeReason": {
          "$ref": "#/definitions/generalLookup",
          "title": "Close reason associated with the catalog"
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/generalLookup"
          },
          "title": "Teams associated with the catalog"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/generalLookup"
          },
          "title": "Skills associated with the catalog"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the catalog was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the catalog was last updated"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "User who created the catalog"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "User who last updated the catalog"
        },
        "service": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesService"
          },
          "title": "Service associated with the catalog"
        }
      },
      "title": "Catalog message represents the main catalog entity with metadata"
    },
    "casesCatalogList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "Page number for pagination"
        },
        "next": {
          "type": "boolean",
          "title": "Indicates if there are more pages"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCatalog"
          },
          "title": "List of catalog items"
        }
      },
      "title": "CatalogList message contains a list of catalogs with pagination"
    },
    "casesCloseInfo": {
      "type": "object",
      "properties": {
        "closeResult": {
          "type": "string",
          "title": "rich text with comment on resulting case"
        },
        "closeReason": {
          "$ref": "#/definitions/generalLookup",
          "title": "actual close reason value from the close_reason lookup"
        }
      }
    },
    "casesCloseReason": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        },
        "closeReasonGroupId": {
          "type": "string",
          "format": "int64",
          "title": "Close Reason Group ID of the close reason"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the close reason"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the close reason"
        }
      },
      "title": "CloseReason message represents a close reason entity with metadata"
    },
    "casesCloseReasonGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason group"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason group"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason group"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason group"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason group"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the close reason group"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the close reason group"
        }
      },
      "title": "CloseReasonGroup message represents a close reason group entity with metadata"
    },
    "casesCloseReasonGroupList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCloseReasonGroup"
          }
        }
      },
      "title": "CloseReasonGroupList message contains a list of CloseReasonGroup items with pagination"
    },
    "casesCloseReasonList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCloseReason"
          }
        }
      },
      "title": "CloseReasonList message contains a list of CloseReason items with pagination"
    },
    "casesCreateCaseCloseInput": {
      "type": "object",
      "properties": {
        "closeResult": {
          "type": "string",
          "title": "rich text with comment on resulting case"
        },
        "closeReason": {
          "type": "string",
          "format": "int64",
          "title": "actual close reason value from the close_reason lookup"
        }
      }
    },
    "casesCreateCaseRelatedCaseInput": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        },
        "relationType": {
          "$ref": "#/definitions/casesRelationType"
        },
        "relatedTo": {
          "type": "string"
        }
      }
    },
    "casesCreateCatalogRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the catalog (required)"
        },
        "description": {
          "type": "string",
          "title": "Description of the catalog (optional)"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix for case identification (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the catalog (true for active, false for inactive)"
        },
        "slaId": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the catalog"
        },
        "statusId": {
          "type": "string",
          "format": "int64",
          "title": "Status ID associated with the catalog"
        },
        "closeReasonId": {
          "type": "string",
          "format": "int64",
          "title": "Close reason ID associated with the catalog"
        },
        "teamIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of team IDs associated with the catalog"
        },
        "skillIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of skill IDs associated with the catalog"
        }
      },
      "title": "CreateCatalogRequest message for creating a new catalog"
    },
    "casesCreateCloseReasonGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "CreateCloseReasonGroupRequest message for creating a new close reason group",
      "required": [
        "name"
      ]
    },
    "casesCreateInputRelatedCase": {
      "type": "object",
      "properties": {
        "relatedCaseId": {
          "type": "string",
          "description": "Related case details."
        },
        "relationType": {
          "$ref": "#/definitions/casesRelationType",
          "description": "Relation type between the cases."
        }
      },
      "description": "Input for creating a related case."
    },
    "casesCreateSLARequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "InputSLA message for creating a new SLA\nName of the SLA"
        },
        "description": {
          "type": "string",
          "title": "Description of the SLA"
        },
        "validFrom": {
          "type": "string",
          "format": "int64",
          "title": "Validity period for the SLA"
        },
        "validTo": {
          "type": "string",
          "format": "int64"
        },
        "calendarId": {
          "type": "string",
          "format": "int64",
          "title": "Calendar ID from the \"Calendars\" dictionary"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time"
        }
      },
      "title": "CreateSLARequest message for creating a new SLA",
      "required": [
        "name",
        "calendarId",
        "reactionTime",
        "resolutionTime"
      ]
    },
    "casesCreateServiceRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the service (required)"
        },
        "rootId": {
          "type": "string",
          "format": "int64",
          "title": "Parent catalog ID (required)"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        },
        "slaId": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the service"
        },
        "groupId": {
          "type": "string",
          "format": "int64",
          "title": "Group ID responsible for the service"
        },
        "assigneeId": {
          "type": "string",
          "format": "int64",
          "title": "Assignee ID responsible for the service"
        },
        "catalogId": {
          "type": "string",
          "format": "int64",
          "title": "ID of the root catalog"
        }
      },
      "title": "CreateServiceRequest message for creating a new service"
    },
    "casesCreateSourceRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the source."
        },
        "description": {
          "type": "string",
          "description": "The description of the source."
        },
        "type": {
          "$ref": "#/definitions/webitelcasesType",
          "description": "The source type of the source."
        }
      },
      "description": "Request message for creating a new source.",
      "required": [
        "name",
        "type"
      ]
    },
    "casesCreateStatusRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "CreateStatusRequest message for creating a new status",
      "required": [
        "name"
      ]
    },
    "casesFetchType": {
      "type": "string",
      "enum": [
        "PARTIAL",
        "FULL"
      ],
      "default": "PARTIAL",
      "description": " - PARTIAL: Only essential fields like [ Id, Name, Description, Created/Updated at ].\n\nPartial info includes only essential fields.\n - FULL: The fetch type indicates whether to retrieve\nall available data for the catalog ( FULL ) or only essential fields ( PARTIAL ).\n\nFull info includes all fields of the catalog."
    },
    "casesFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Storage file ID."
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "description": "Creator of the file."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Creation timestamp in Unix milliseconds."
        },
        "size": {
          "type": "string",
          "format": "int64",
          "description": "File size in bytes."
        },
        "mime": {
          "type": "string",
          "description": "MIME type of the file."
        },
        "name": {
          "type": "string",
          "description": "File name."
        },
        "author": {
          "$ref": "#/definitions/generalLookup"
        },
        "url": {
          "type": "string"
        }
      },
      "description": "Metadata for a file associated with a case."
    },
    "casesInputCase": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "create: required;"
        },
        "subject": {
          "type": "string",
          "title": "create: required;"
        },
        "description": {
          "type": "string",
          "title": "create: not required;"
        },
        "contactInfo": {
          "type": "string",
          "title": "create: not required;"
        },
        "assignee": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: not required, default from service or set by UI;"
        },
        "reporter": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: required (if empty recognize as anonymous contact);"
        },
        "impacted": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: required, default is reporter or ui (if empty recognize as anonymous);"
        },
        "group": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: not required, default from service or set by UI;"
        },
        "status": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: not required, default initial value from status lookup or ui;"
        },
        "closeReason": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: not required;"
        },
        "priority": {
          "$ref": "#/definitions/generalLookup",
          "title": "create: not required, default first value from priority lookup"
        },
        "source": {
          "$ref": "#/definitions/generalLookup",
          "title": "source of the case"
        },
        "service": {
          "$ref": "#/definitions/generalLookup",
          "title": "on this field base many other readonly fields on return"
        },
        "close": {
          "$ref": "#/definitions/casesCloseInfo",
          "title": "create: not required; update: required only when case status goes to the final state"
        },
        "rate": {
          "$ref": "#/definitions/casesRateInfo",
          "title": "only for API, not UI"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesInputCaseComment"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesInputCaseLink"
          },
          "title": "repeated InputCaseFile files = 17;"
        },
        "related": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesInputRelatedCase"
          }
        }
      }
    },
    "casesInputCaseComment": {
      "type": "object",
      "example": {
        "text": "My new comment"
      },
      "properties": {
        "etag": {
          "type": "string",
          "description": "Identifier for the comment."
        },
        "text": {
          "type": "string",
          "description": "Content of the comment."
        }
      },
      "description": "Input structure for creating or updating a case comment."
    },
    "casesInputCaseLink": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "casesInputCatalog": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the catalog (required)"
        },
        "description": {
          "type": "string",
          "title": "Description of the catalog (optional)"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix for case identification (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the catalog (true for active, false for inactive)"
        },
        "slaId": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the catalog"
        },
        "statusId": {
          "type": "string",
          "format": "int64",
          "title": "Status ID associated with the catalog"
        },
        "closeReasonId": {
          "type": "string",
          "format": "int64",
          "title": "Close reason ID associated with the catalog"
        },
        "teamIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of team IDs associated with the catalog"
        },
        "skillIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of skill IDs associated with the catalog"
        }
      },
      "title": "InputCatalog message contains the fields for creating or updating a catalog"
    },
    "casesInputCloseReason": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        }
      },
      "title": "InputCloseReason message for inputting close reason data"
    },
    "casesInputCloseReasonGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "casesInputCreateCase": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "title": "create: required;"
        },
        "description": {
          "type": "string",
          "title": "create: not required;"
        },
        "contactInfo": {
          "type": "string",
          "title": "create: not required;"
        },
        "assignee": {
          "type": "string",
          "format": "int64",
          "title": "create: not required, default from service or set by UI;"
        },
        "reporter": {
          "type": "string",
          "format": "int64",
          "title": "create: required (if empty recognize as anonymous contact);"
        },
        "impacted": {
          "type": "string",
          "format": "int64",
          "title": "create: required, default is reporter or ui (if empty recognize as anonymous);"
        },
        "group": {
          "type": "string",
          "format": "int64",
          "title": "create: not required, default from service or set by UI;"
        },
        "status": {
          "type": "string",
          "format": "int64",
          "title": "create: not required, default initial value from status lookup or ui;"
        },
        "closeReason": {
          "type": "string",
          "format": "int64",
          "title": "create: not required;"
        },
        "priority": {
          "type": "string",
          "format": "int64",
          "title": "create: not required, default first value from priority lookup"
        },
        "source": {
          "type": "string",
          "format": "int64",
          "title": "source of the case"
        },
        "service": {
          "type": "string",
          "format": "int64",
          "title": "on this field base many other readonly fields on return"
        },
        "close": {
          "$ref": "#/definitions/casesCreateCaseCloseInput",
          "title": "create: not required; update: required only when case status goes to the final state"
        },
        "rate": {
          "$ref": "#/definitions/casesRateInfo",
          "title": "only for API, not UI"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesInputCaseLink"
          }
        },
        "related": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesCreateCaseRelatedCaseInput"
          }
        }
      }
    },
    "casesInputPriority": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the priority"
        },
        "description": {
          "type": "string",
          "title": "Description of the priority"
        },
        "color": {
          "type": "string",
          "title": "Color of the priority"
        }
      },
      "title": "InputPriority message for creating a new priority"
    },
    "casesInputRelatedCase": {
      "type": "object",
      "properties": {
        "relationType": {
          "$ref": "#/definitions/casesRelationType",
          "description": "Relation type."
        },
        "primaryCaseId": {
          "type": "string",
          "description": "Primary case details."
        },
        "relatedCaseId": {
          "type": "string",
          "description": "Related case details."
        }
      },
      "description": "Input for creating or updating a related case."
    },
    "casesInputSLA": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the SLA"
        },
        "description": {
          "type": "string",
          "title": "Description of the SLA"
        },
        "validFrom": {
          "type": "string",
          "format": "int64",
          "title": "Validity period for the SLA"
        },
        "validTo": {
          "type": "string",
          "format": "int64"
        },
        "calendarId": {
          "type": "string",
          "format": "int64",
          "title": "Calendar ID from the \"Calendars\" dictionary"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time"
        }
      },
      "title": "InputSLA message for inputting SLA data"
    },
    "casesInputSLACondition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "priorities": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "List of priority IDs for creation"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64"
        },
        "slaId": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "InputSLACondition message for inputting SLACondition data"
    },
    "casesInputService": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the service (required)"
        },
        "catalogId": {
          "type": "string",
          "format": "int64",
          "title": "The parent catalog (required)"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        },
        "slaId": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the service"
        },
        "groupId": {
          "type": "string",
          "format": "int64",
          "title": "Group ID responsible for the service"
        },
        "assigneeId": {
          "type": "string",
          "format": "int64",
          "title": "Assignee ID responsible for the service"
        },
        "rootId": {
          "type": "string",
          "format": "int64",
          "title": "ID of the root catalog"
        }
      },
      "title": "InputService message contains the fields for creating or updating a service"
    },
    "casesInputSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the source."
        },
        "description": {
          "type": "string",
          "description": "The description of the source."
        },
        "type": {
          "$ref": "#/definitions/webitelcasesType",
          "description": "The source type of the source."
        }
      }
    },
    "casesInputStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "casesInputStatusCondition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the status condition"
        },
        "description": {
          "type": "string",
          "title": "Description of the status condition"
        },
        "initial": {
          "type": "boolean",
          "title": "Initial status condition"
        },
        "final": {
          "type": "boolean",
          "title": "Final status condition"
        }
      },
      "title": "InputStatusCondition message for inputting status condition data"
    },
    "casesLocateCatalogResponse": {
      "type": "object",
      "properties": {
        "catalog": {
          "$ref": "#/definitions/casesCatalog",
          "title": "The located catalog"
        }
      },
      "title": "LocateCatalogResponse message contains a single catalog entity"
    },
    "casesLocateCloseReasonGroupResponse": {
      "type": "object",
      "properties": {
        "closeReasonGroup": {
          "$ref": "#/definitions/casesCloseReasonGroup"
        }
      },
      "title": "LocateCloseReasonGroupResponse message contains a single close reason group entity"
    },
    "casesLocateCloseReasonResponse": {
      "type": "object",
      "properties": {
        "closeReason": {
          "$ref": "#/definitions/casesCloseReason"
        }
      },
      "title": "LocateCloseReasonResponse message contains a single close reason entity"
    },
    "casesLocatePriorityResponse": {
      "type": "object",
      "properties": {
        "priority": {
          "$ref": "#/definitions/casesPriority"
        }
      },
      "title": "LocatePriorityResponse message contains a single priority entity"
    },
    "casesLocateSLAConditionResponse": {
      "type": "object",
      "properties": {
        "slaCondition": {
          "$ref": "#/definitions/casesSLACondition"
        }
      },
      "title": "LocateSLAConditionResponse message contains a single SLACondition entity"
    },
    "casesLocateSLAResponse": {
      "type": "object",
      "properties": {
        "sla": {
          "$ref": "#/definitions/casesSLA"
        }
      },
      "title": "LocateSLAResponse message contains a single SLA entity"
    },
    "casesLocateServiceResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/casesService",
          "title": "The located service"
        }
      },
      "title": "LocateServiceResponse message contains a single service entity"
    },
    "casesLocateSourceResponse": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/casesSource",
          "description": "The located source."
        }
      },
      "description": "Response message for locating a source."
    },
    "casesLocateStatusConditionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/casesStatusCondition"
        }
      },
      "title": "LocateStatusConditionResponse message contains a single status entity"
    },
    "casesLocateStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/webitelcasesStatus"
        }
      },
      "title": "LocateStatusResponse message contains a single status entity"
    },
    "casesPriority": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the priority"
        },
        "name": {
          "type": "string",
          "title": "Name of the priority"
        },
        "description": {
          "type": "string",
          "title": "Description of the priority"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the priority"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the priority"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the priority"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the priority"
        },
        "color": {
          "type": "string",
          "title": "Color of the priority"
        }
      },
      "title": "Priority message represents a priority entity with metadata"
    },
    "casesPriorityList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesPriority"
          }
        }
      },
      "title": "PriorityList message contains a list of Priority items with pagination"
    },
    "casesRateInfo": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "string",
          "format": "int64",
          "title": "rating, formed from api calls"
        },
        "ratingComment": {
          "type": "string",
          "title": "(optional)"
        }
      }
    },
    "casesRelatedCase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the related case."
        },
        "ver": {
          "type": "integer",
          "format": "int32",
          "description": "Version number of the related case, used for concurrency control."
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "description": "User who created the relation."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp (in milliseconds) of when the relation was created."
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "description": "User who last updated the relation."
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp (in milliseconds) of the last update."
        },
        "relationType": {
          "$ref": "#/definitions/casesRelationType",
          "description": "Relation type between cases."
        },
        "relatedCase": {
          "$ref": "#/definitions/casesRelatedCaseLookup",
          "description": "Related case details."
        },
        "primaryCase": {
          "$ref": "#/definitions/casesRelatedCaseLookup",
          "description": "Primary case details."
        }
      },
      "description": "Represents a related case with its relationship details."
    },
    "casesRelatedCaseList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "string",
          "format": "int64",
          "description": "Current page number."
        },
        "next": {
          "type": "boolean",
          "description": "Flag to indicate if more pages are available."
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesRelatedCase"
          },
          "description": "List of related cases on the current page."
        }
      },
      "description": "Paginated list of related cases."
    },
    "casesRelatedCaseLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id"
        },
        "name": {
          "type": "string",
          "title": "name"
        },
        "subject": {
          "type": "string",
          "title": "subject"
        },
        "ver": {
          "type": "integer",
          "format": "int32",
          "title": "ver"
        }
      },
      "description": "RelatedCaseLookup is created specifically to include the subject field."
    },
    "casesRelationType": {
      "type": "string",
      "enum": [
        "RELATION_TYPE_UNSPECIFIED",
        "DUPLICATES",
        "IS_DUPLICATED_BY",
        "BLOCKS",
        "IS_BLOCKED_BY",
        "CAUSES",
        "IS_CAUSED_BY",
        "IS_CHILD_OF",
        "IS_PARENT_OF",
        "RELATES_TO"
      ],
      "default": "RELATION_TYPE_UNSPECIFIED",
      "description": "Enum for relation types between cases."
    },
    "casesSLA": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the SLA"
        },
        "name": {
          "type": "string",
          "title": "Name of the SLA - required"
        },
        "description": {
          "type": "string",
          "title": "Description of the SLA - optional"
        },
        "validFrom": {
          "type": "string",
          "format": "int64",
          "title": "Validity period for the SLA - optional"
        },
        "validTo": {
          "type": "string",
          "format": "int64"
        },
        "calendar": {
          "$ref": "#/definitions/generalLookup",
          "title": "Calendar ID from the \"Calendars\" dictionary - required"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time - required"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time - required"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the SLA"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the SLA"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the SLA"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the SLA"
        }
      },
      "title": "SLA message represents an SLA entity with metadata"
    },
    "casesSLACondition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the SLACondition"
        },
        "name": {
          "type": "string",
          "title": "Name of the SLACondition - required"
        },
        "priorities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/generalLookup"
          },
          "title": "Priorities associated with the SLACondition - fetched as Lookup entities [ Priority name + ID ]"
        },
        "reactionTime": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time - required"
        },
        "resolutionTime": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time - required"
        },
        "slaId": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the SLACondition"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the SLACondition"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the SLACondition"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the SLACondition"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the SLACondition"
        }
      },
      "title": "SLACondition message represents an SLACondition entity with metadata"
    },
    "casesSLAConditionList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesSLACondition"
          }
        }
      },
      "title": "SLAConditionList message contains a list of SLACondition items with pagination"
    },
    "casesSLAList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesSLA"
          }
        }
      },
      "title": "SLAList message contains a list of SLA items with pagination"
    },
    "casesSearch": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "title": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names"
        },
        "fetchType": {
          "$ref": "#/definitions/casesFetchType",
          "title": "The type of data fetching for catalog services"
        }
      }
    },
    "casesService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier for the service"
        },
        "name": {
          "type": "string",
          "title": "Name of the service"
        },
        "rootId": {
          "type": "string",
          "format": "int64",
          "title": "ID of the parent catalog"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        },
        "sla": {
          "$ref": "#/definitions/generalLookup",
          "title": "SLA associated with the service"
        },
        "group": {
          "$ref": "#/definitions/generalLookup",
          "title": "Group responsible for the service"
        },
        "assignee": {
          "$ref": "#/definitions/generalLookup",
          "title": "Assignee responsible for the service"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the service was created"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the service was last updated"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "User who created the service"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "User who last updated the service"
        },
        "catalogId": {
          "type": "string",
          "format": "int64",
          "title": "Catalogs associated with the service"
        },
        "service": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesService"
          },
          "title": "Service associated with the service"
        }
      },
      "title": "Service message represents a service entity within a catalog"
    },
    "casesServiceList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "Page number for pagination"
        },
        "next": {
          "type": "boolean",
          "title": "Indicates if there are more pages"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesService"
          },
          "title": "List of service items"
        }
      },
      "title": "ServiceList message contains a list of services with pagination"
    },
    "casesSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the source"
        },
        "name": {
          "type": "string",
          "title": "Name of the source"
        },
        "description": {
          "type": "string",
          "title": "Description of the source"
        },
        "type": {
          "$ref": "#/definitions/webitelcasesType",
          "title": "Source type of the source"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the source"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the source"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the source"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the source"
        }
      },
      "description": "Represents a source entity in the contact system."
    },
    "casesSourceList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of the partial result."
        },
        "next": {
          "type": "boolean",
          "description": "Have more records."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesSource"
          },
          "description": "List of sources."
        }
      },
      "description": "A list of sources."
    },
    "casesStatusCondition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the status condition"
        },
        "name": {
          "type": "string",
          "title": "Name of the status condition"
        },
        "description": {
          "type": "string",
          "title": "Description of the status condition"
        },
        "initial": {
          "type": "boolean",
          "title": "Initial status condition"
        },
        "final": {
          "type": "boolean",
          "title": "Final status condition"
        },
        "statusId": {
          "type": "string",
          "format": "int64",
          "title": "Status ID of the status condition"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the status condition"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the status condition"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the status condition"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the status condition"
        }
      },
      "title": "StatusCondition message represents a status entity with metadata"
    },
    "casesStatusConditionList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/casesStatusCondition"
          }
        }
      },
      "title": "StatusConditionList message contains a list of StatusCondition items with pagination"
    },
    "casesStatusList": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitelcasesStatus"
          }
        }
      },
      "title": "StatusList message contains a list of Status items with pagination"
    },
    "casesTimingInfo": {
      "type": "object",
      "properties": {
        "resolvedAt": {
          "type": "string",
          "format": "int64",
          "title": "actual time when this case was resolved"
        },
        "reactedAt": {
          "type": "string",
          "format": "int64",
          "title": "actual time when this case changed it's status from initial"
        },
        "differenceInReaction": {
          "type": "string",
          "format": "int64",
          "title": "difference between actual and planned reaction time, taking into account the calendar"
        },
        "differenceInResolve": {
          "type": "string",
          "format": "int64",
          "title": "difference between actual and planned resolve time, taking into account the calendar"
        }
      }
    },
    "generalLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "webitelcasesStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason"
        },
        "createdBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "CreatedBy user of the close reason"
        },
        "updatedBy": {
          "$ref": "#/definitions/generalLookup",
          "title": "UpdatedBy user of the close reason"
        }
      },
      "title": "Status message represents a status entity with metadata"
    },
    "webitelcasesType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "CALL",
        "CHAT",
        "SOCIAL_MEDIA",
        "EMAIL",
        "API",
        "MANUAL"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": "Represents a source type for the source entity.\n\n - TYPE_UNSPECIFIED: Unspecified source type.\n - CALL: Phone call source type.\n - CHAT: Chat source type.\n - SOCIAL_MEDIA: Social media source type.\n - EMAIL: Email source type.\n - API: API source type.\n - MANUAL: Manual source type."
    }
  },
  "securityDefinitions": {
    "AccessToken": {
      "type": "apiKey",
      "name": "X-Webitel-Access",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessToken": []
    }
  ]
}
