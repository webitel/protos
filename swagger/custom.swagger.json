{
  "swagger": "2.0",
  "info": {
    "title": "Webitel Customization API",
    "version": "dev",
    "contact": {
      "name": "Webitel LLC",
      "url": "https://www.webitel.com",
      "email": "support@webitel.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "tags": [
    {
      "name": "Types"
    },
    {
      "name": "Dictionaries"
    },
    {
      "name": "Extensions"
    }
  ],
  "host": "dev.webitel.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/dictionaries/{repo}": {
      "get": {
        "summary": "Lookup a dictionary dataset.",
        "operationId": "Dictionaries_SearchData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "description": "Number of result records (per page).\nDefault: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "Page number of result set of records.\nDefault: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "delete": {
        "summary": "Delete a dictionary records.",
        "operationId": "Dictionaries_DeleteData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved into result dataset.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "post": {
        "summary": "Create a dictionary record.",
        "description": "(Record) {",
        "operationId": "Dictionaries_CreateData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "description": "Record data.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "code": 38,
                "name": "Україна",
                "capital": {
                  "id": 44,
                  "name": "Київ"
                }
              }
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      }
    },
    "/dictionaries/{repo}/csv": {
      "post": {
        "summary": "Import dataset from CSV file.",
        "operationId": "Dictionaries_ImportCSV",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "`types.repo`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte",
                  "title": "CSV data"
                },
                "fields": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "title": "map \u003c field, column \u003e index"
                },
                "line_begin": {
                  "type": "integer",
                  "format": "int64"
                },
                "line_end": {
                  "type": "integer",
                  "format": "int64"
                },
                "on_data_error": {
                  "$ref": "#/definitions/webitel.proto.data.ImportCSVRequest.action"
                },
                "on_empty_line": {
                  "$ref": "#/definitions/webitel.proto.data.ImportCSVRequest.action"
                }
              }
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      }
    },
    "/dictionaries/{repo}/{id}": {
      "get": {
        "summary": "Locate a dictionary record.",
        "description": "(Record) {",
        "operationId": "Dictionaries_LocateData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "delete": {
        "summary": "Delete a dictionary records.",
        "operationId": "Dictionaries_DeleteData2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved into result dataset.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "put": {
        "summary": "Update a dictionary record.",
        "description": "(Record) {",
        "operationId": "Dictionaries_UpdateData2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "description": "Record data changes.\n\nInputRecord input = 3;",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "patch": {
        "summary": "Update a dictionary record.",
        "description": "(Record) {",
        "operationId": "Dictionaries_UpdateData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "description": "Record data changes.\n\nInputRecord input = 3;",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      }
    },
    "/extensions/{repo}": {
      "delete": {
        "summary": "Delete records extension data.",
        "operationId": "Extensions_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields to be retrieved into result dataset.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Extensions"
        ]
      }
    },
    "/extensions/{repo}/{id}": {
      "get": {
        "summary": "Record extension data.",
        "description": "(Record) {",
        "operationId": "Extensions_Locate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Extensions"
        ]
      },
      "put": {
        "summary": "Update extension data.",
        "description": "(Record) {",
        "operationId": "Extensions_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "description": "Record data changes.\n\nInputRecord input = 3;",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Extensions"
        ]
      },
      "patch": {
        "summary": "Update extension data.",
        "description": "(Record) {",
        "operationId": "Extensions_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[`types.repo`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "[`record.id`]",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "record",
            "description": "Record data changes.\n\nInputRecord input = 3;",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Extensions"
        ]
      }
    },
    "/types": {
      "get": {
        "summary": "Lookup data types registry.",
        "operationId": "Types_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        },
        "parameters": [
          {
            "name": "q",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "description": "`types.id`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "`types.name`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "`types.repo`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "path",
            "description": "`types.path`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "readonly",
            "description": "[NOT] [ system / custom ] types only",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extendable",
            "description": "[NOT] Extend[able] types only.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extended",
            "description": "[NOT] Extend[ed] types only.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "administered",
            "description": "[NOT] Administer access control only",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "description": "Number of result records (per page).\nDefault: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "Page number of result set of records.\nDefault: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Types"
        ]
      }
    },
    "/types/dictionaries": {
      "get": {
        "summary": "Lookup dictionaries data types.",
        "operationId": "Dictionaries_SearchType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        },
        "parameters": [
          {
            "name": "q",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "description": "`types.id`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "`types.name`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "`types.repo`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "path",
            "description": "`types.path`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "readonly",
            "description": "[NOT] [ system / custom ] types only",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extendable",
            "description": "[NOT] Extend[able] types only.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "extended",
            "description": "[NOT] Extend[ed] types only.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "administered",
            "description": "[NOT] Administer access control only",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "description": "Number of result records (per page).\nDefault: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "Page number of result set of records.\nDefault: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "delete": {
        "summary": "Delete custom dictionaries.",
        "description": "(DictionaryList) {",
        "operationId": "Dictionaries_DeleteType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "description": "Fields to retrive into result dataset.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "repo",
            "description": "`types.repo`",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "description": "`record.pk`",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      }
    },
    "/types/dictionaries/{repo}": {
      "get": {
        "summary": "Locate the dictionary type.",
        "description": "(Dictionary) {",
        "operationId": "Dictionaries_LocateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "`types.repo`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "post": {
        "summary": "Create custom dictionary.",
        "description": "(Dictionary) {",
        "operationId": "Dictionaries_CreateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "NEW [`types.repo`] repository name, e.g.: `countries`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "NEW dictionary [type] definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputDictionary"
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "put": {
        "summary": "Update custom dictionary.",
        "description": "(Dictionary) {",
        "operationId": "Dictionaries_UpdateType2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[**types.dictionaries.id**] type name, e.g.: `country`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "The dictionary [type] changes.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputDictionary"
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      },
      "patch": {
        "summary": "Update custom dictionary.",
        "description": "(Dictionary) {",
        "operationId": "Dictionaries_UpdateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "[**types.dictionaries.id**] type name, e.g.: `country`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "The dictionary [type] changes.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputDictionary"
            }
          }
        ],
        "tags": [
          "Dictionaries"
        ]
      }
    },
    "/types/extensions": {
      "get": {
        "summary": "Search for type extensions.",
        "operationId": "Extensions_SearchType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.ExtensionList"
            }
          }
        },
        "parameters": [
          {
            "name": "size",
            "description": "Number of result records (per page).\nDefault: 16.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "Page number of result set of records.\nDefault: 1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*",
              "uniqueItems": true
            },
            "collectionFormat": "multi"
          },
          {
            "name": "q",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "description": "extension.type.id",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Extensions"
        ]
      },
      "delete": {
        "summary": "Delete extension for types.",
        "operationId": "Extensions_DeleteType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.ExtensionList"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "description": "extension.type.id",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Extensions"
        ]
      }
    },
    "/types/extensions/{repo}": {
      "post": {
        "summary": "Create type extension.",
        "operationId": "Extensions_CreateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Extension"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "SUPER `types.repo` to extend, e.g.: `contacts`.\nLookup: GET /types?extendable=true",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "description": "Extension type fields.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputExtension"
            }
          }
        ],
        "tags": [
          "Extensions"
        ]
      }
    },
    "/types/extensions/{type}": {
      "get": {
        "summary": "Type extension details.",
        "operationId": "Extensions_LocateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Extension"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "description": "extension.type.id as type.\n\nid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Extensions"
        ]
      },
      "put": {
        "summary": "Update type extension.",
        "operationId": "Extensions_UpdateType2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Extension"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "description": "extension.type.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputExtension"
            }
          }
        ],
        "tags": [
          "Extensions"
        ]
      },
      "patch": {
        "summary": "Update type extension.",
        "operationId": "Extensions_UpdateType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Extension"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "description": "extension.type.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputExtension"
            }
          }
        ],
        "tags": [
          "Extensions"
        ]
      }
    },
    "/types/{path}": {
      "get": {
        "summary": "Structured data type details.",
        "operationId": "Types_Locate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        },
        "parameters": [
          {
            "name": "path",
            "description": "`types.path`",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "path"
          }
        ],
        "tags": [
          "Types"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "webitel.proto.data.Dataset": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/webitel.proto.data.Struct",
          "description": "Type of the dataset record."
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "List of the dataset page records."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number."
        },
        "next": {
          "type": "boolean",
          "title": "Next page available?"
        }
      }
    },
    "webitel.proto.data.Extension": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/webitel.proto.data.LookupValue",
          "title": "SUPER type"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          },
          "title": "Fields definitions"
        },
        "index": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          },
          "title": "INDEX fields"
        }
      },
      "description": "Extension represents a set of an extra fields\nfor some [SUPER] type to be extended with.\n\nint64 dc = 0;"
    },
    "webitel.proto.data.ExtensionList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Extension"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "webitel.proto.data.Field": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Field [code] name.\n\ncode"
        },
        "name": {
          "type": "string",
          "description": "Title of the field. Lang specific.\n\ntitle"
        },
        "hint": {
          "type": "string",
          "description": "Short description. Default: {name}."
        },
        "kind": {
          "$ref": "#/definitions/webitel.proto.data.type.Kind",
          "description": "Required. The field type."
        },
        "bool": {
          "$ref": "#/definitions/webitel.proto.data.type.Bool"
        },
        "int32": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "int64": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "int": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "uint32": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        },
        "uint64": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        },
        "uint": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        },
        "float32": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "float64": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "float": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "binary": {
          "$ref": "#/definitions/webitel.proto.data.type.Binary"
        },
        "lookup": {
          "$ref": "#/definitions/webitel.proto.data.type.Lookup"
        },
        "string": {
          "$ref": "#/definitions/webitel.proto.data.type.Text"
        },
        "richtext": {
          "$ref": "#/definitions/webitel.proto.data.type.Text"
        },
        "datetime": {
          "$ref": "#/definitions/webitel.proto.data.type.Datetime"
        },
        "duration": {
          "$ref": "#/definitions/webitel.proto.data.type.Duration"
        },
        "default": {
          "description": "The `default` expression will be used in `INSERT` operation\nthat does not specify a value for the field.\n\nIf there is no default for a field, then the default is null.",
          "title": "[ ON INSERT ONLY ]"
        },
        "always": {
          "description": "Always signifies that the field value will be computed on any write (INSERT OR UPDATE) operations.\nThe field cannot be written to, and when read the result of the last generated expression will be returned.\n\nThe generation expression can refer to other columns in the table, but not other generated columns. Any functions and operators used must be immutable. References to other tables are not allowed.",
          "title": "[ ON INSERT OR UPDATE ]"
        },
        "readonly": {
          "type": "boolean",
          "description": "Optional. Disable any write (INSERT OR UPDATE) operations.\nREADONLY signifies that the field value will be always computed on any write (INSERT OR UPDATE) operations.\nIf selected, the `default` value MUST be specified.\n\nFIXME: Is base field ? [ id, created_, updated_ ]"
        },
        "required": {
          "type": "boolean",
          "title": "Optional. Do NOT allow NULL values !"
        },
        "disabled": {
          "type": "boolean",
          "title": "Optional. Disable data read operation. (selection)"
        },
        "hidden": {
          "type": "boolean",
          "title": "Is hidden (system) field ?\nDo NOT display on the `view` card ?"
        }
      },
      "description": "Field of the struct."
    },
    "webitel.proto.data.ImportCSVRequest.action": {
      "type": "string",
      "enum": [
        "continue",
        "break"
      ],
      "default": "continue"
    },
    "webitel.proto.data.Index": {
      "type": "object",
      "properties": {
        "unique": {
          "type": "boolean",
          "description": "Indicates whether set of [fields] MUST be UNIQUE within [type]."
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [struct.fields.id] to INDEX within [type] dataset."
        },
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of [struct.fields.id] to INCLUDE beside the [fields] index."
        }
      },
      "description": "INDEX [struct.fields]."
    },
    "webitel.proto.data.InputDictionary": {
      "type": "object",
      "example": {
        "repo": "countries",
        "name": "Countries",
        "about": "Dataset of countries we are working with ..",
        "fields": [
          {
            "id": "code",
            "name": "Code",
            "hint": "+3(80)",
            "kind": "int32",
            "int32": {
              "min": "10",
              "max": "9999"
            },
            "required": true
          },
          {
            "id": "name",
            "name": "Country",
            "hint": "Country name",
            "kind": "string",
            "string": {
              "max": 64
            },
            "required": true
          },
          {
            "id": "capital",
            "name": "Capital city",
            "kind": "lookup",
            "lookup": {
              "id": "name",
              "name": "name",
              "type": "dictionaries/cities"
            }
          },
          {
            "id": "created_at",
            "name": "Creation Date",
            "kind": "datetime",
            "datetime": {
              "part": "full",
              "time": "s"
            },
            "default": "$(timestamp)",
            "readonly": true
          },
          {
            "id": "created_by",
            "name": "Author",
            "kind": "lookup",
            "lookup": {
              "id": "id",
              "name": "name",
              "type": "users"
            },
            "default": "$(user)",
            "readonly": true
          },
          {
            "id": "updated_at",
            "name": "Last Modified",
            "kind": "datetime",
            "datetime": {
              "part": "full",
              "time": "s"
            },
            "always": "$(timestamp)",
            "readonly": true
          },
          {
            "id": "updated_by",
            "name": "Editor",
            "kind": "lookup",
            "lookup": {
              "type": "users"
            },
            "always": "$(user)",
            "readonly": true
          }
        ],
        "primary": "code",
        "display": "name",
        "indexes": {
          "code": {
            "unique": true
          },
          "capital_city": {
            "unique": true,
            "fields": [
              "capital"
            ]
          }
        }
      },
      "properties": {
        "repo": {
          "type": "string",
          "description": "string id = 1; // The [type] name (singular form), e.g.: `country`.\n\nRepository (dataset) name (plural form), e.g.: `countries`."
        },
        "name": {
          "type": "string",
          "description": "A User-friendly [type.id] name ; lang: specific."
        },
        "about": {
          "type": "string",
          "title": "Short description"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          },
          "title": "Fields definitions"
        },
        "primary": {
          "type": "string",
          "description": "Required. Primary [fields.id] key.\nUsed as [lookup].id setting for this [struct] type."
        },
        "display": {
          "type": "string",
          "description": "Required. Display [fields.id] key.\nUsed as [lookup].name setting for this [struct] type."
        },
        "indexes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          },
          "description": "INDEX fields."
        },
        "administered": {
          "type": "boolean",
          "title": "Administer access control ? Enable RbAC ?"
        }
      }
    },
    "webitel.proto.data.InputExtension": {
      "type": "object",
      "example": {
        "fields": [
          {
            "id": "country",
            "name": "Country",
            "kind": "lookup",
            "lookup": {
              "id": "code",
              "name": "name",
              "type": "/dictionaries/countries"
            },
            "required": true
          },
          {
            "id": "city",
            "name": "City",
            "kind": "lookup",
            "lookup": {
              "id": "id",
              "name": "name",
              "type": "/dictionaries/cities?code={country.code}"
            }
          }
        ],
        "indexes": {
          "country": {},
          "city": {}
        }
      },
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          },
          "title": "Fields definitions"
        },
        "index": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          },
          "title": "INDEX Fields"
        }
      }
    },
    "webitel.proto.data.LookupValue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Unique Identifier."
        },
        "name": {
          "type": "string",
          "description": "Readonly. Display name."
        },
        "type": {
          "type": "string",
          "description": "Optional. Reference type."
        }
      }
    },
    "webitel.proto.data.Struct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Deprecated. Use `repo` instead. The [type] name (singular form), e.g.: `country`."
        },
        "repo": {
          "type": "string",
          "description": "Repository (dataset) name (plural form), e.g.: `countries`."
        },
        "name": {
          "type": "string",
          "description": "A User-friendly [id] name ; lang: specific."
        },
        "path": {
          "type": "string",
          "description": "Readonly. Relative path to access the dataset APIs, e.g.: `dictionaries/countries`."
        },
        "about": {
          "type": "string",
          "description": "Optional. Short description."
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          },
          "description": "Fields of the struct type."
        },
        "primary": {
          "type": "string",
          "description": "Required. Primary [fields.id] key.\nUsed as [lookup].id setting for this [struct] type."
        },
        "display": {
          "type": "string",
          "description": "Required. Display [fields.id] key.\nUsed as [lookup].name setting for this [struct] type."
        },
        "indexes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          },
          "description": "INDEX fields.\n\nExtension extension = 15;"
        },
        "readonly": {
          "type": "boolean",
          "title": "Readonly. Is [ system / custom ] type ?\nNOTE: Custom [types.repo] are always prefixed with `/dictionaries`"
        },
        "extendable": {
          "type": "boolean",
          "description": "// Extension fields type.\n Extension extension = 23;",
          "title": "Readonly. System- type(s) support only !"
        },
        "administered": {
          "type": "boolean",
          "title": "Administer access control ? Enable RbAC ?"
        },
        "objclass": {
          "type": "string",
          "description": "Readonly. RbAC objclass identity."
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/webitel.proto.data.LookupValue"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/webitel.proto.data.LookupValue"
        }
      },
      "description": "Type of the Structure.\n\nint64 dc = 0;"
    },
    "webitel.proto.data.StructList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Struct"
          },
          "description": "List of `Struct` types."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of results."
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        }
      },
      "description": "Dataset of structured types."
    },
    "webitel.proto.data.type.Binary": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "integer",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Bool": {
      "type": "object",
      "title": "no constraints"
    },
    "webitel.proto.data.type.Datetime": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Timezone associated.\nDefault: `UTC`."
        },
        "epoch": {
          "type": "number",
          "format": "double",
          "description": "Epoch timestamp.\nIf zero - UNIX epoch (1970-01-01 00:00:00) will be used."
        },
        "format": {
          "type": "string",
          "title": "Display format.\nSee [layouts](https://pkg.go.dev/time#pkg-constants) for details.\nDefault: `Mon, 02 Jan 2006 15:04:05 -0700`; [time.RFC1123Z]"
        }
      },
      "description": "Datetime type settings.\n\nenum Part {\n   full = 0; // date \u0026 time\n   date = 1; // date only ; YYYY-MM-DD\n   time = 2; // time only ; HH:mm:ss[.pres]\n }\n Part part = 1; // part of: [ date \u0026| time ]\n enum Stamp {\n   s  =  0; // seconds\n   ms =  1; // [milli]seconds ; E+3\n   mc =  2; // [micro]seconds ; E+6\n   ns =  3; // [nano]seconds  ; E+9\n   m  = -1; // minutes\n   h  = -2; // hours\n }\n Stamp time = 2; // time precision\n string zone = 3; // ??? [ Europe/Kyiv | +03:00 ]"
    },
    "webitel.proto.data.type.Duration": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "int64"
        },
        "max": {
          "type": "string",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "format": {
          "type": "string",
          "title": "Display format.\nTODO: `hh:mm:ss.ms`"
        }
      },
      "title": "Duration"
    },
    "webitel.proto.data.type.Float": {
      "type": "object",
      "properties": {
        "frac": {
          "type": "integer",
          "format": "int64",
          "title": "fractional part precision"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Int": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "int64"
        },
        "max": {
          "type": "string",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "DESIGN. Custom error(s) on spec. constraint violation.\nmap \u003c constraint, template \u003e to produce [status.message].\n{\n  \"min\": \"country code {value} MUST contain at least 2 digits\"\n  \"max\": \"country code {value} MAY contain at most 4 digits\"\n}"
        }
      }
    },
    "webitel.proto.data.type.Kind": {
      "type": "string",
      "enum": [
        "none",
        "list",
        "bool",
        "int",
        "int32",
        "int64",
        "uint",
        "uint32",
        "uint64",
        "float",
        "float32",
        "float64",
        "binary",
        "lookup",
        "string",
        "richtext",
        "datetime",
        "duration"
      ],
      "default": "none",
      "description": "Basic scalar type.\n\n - none: option allow_alias = true;\n - list: [array]\n - int: int32\n - uint: uint32\n - float: float32\n - datetime: date \u0026| time"
    },
    "webitel.proto.data.type.Lookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Optional. Primary [types.fields.id] key."
        },
        "name": {
          "type": "string",
          "description": "Optional. Display [types.fields.id] key."
        },
        "type": {
          "type": "string",
          "description": "Required. Dataset [types.repo] to search in."
        },
        "query": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional. Query dataset filters ...\nmap \u003c filter, template \u003e"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "[ \"not_found\", \"too_much_records\" ]"
        }
      }
    },
    "webitel.proto.data.type.Text": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "integer",
          "format": "int64"
        },
        "max_chars": {
          "type": "integer",
          "format": "int64"
        },
        "multiline": {
          "type": "boolean"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "// accept format\n string accept_regex = 7;\n // equality strategy\n bool ignore_case = 8;"
        }
      }
    },
    "webitel.proto.data.type.Uint": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string",
          "format": "uint64"
        },
        "max": {
          "type": "string",
          "format": "uint64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "API Token": {
      "type": "apiKey",
      "description": "Webitel End-**User** authorization token",
      "name": "X-Webitel-Access",
      "in": "header"
    }
  },
  "security": [
    {
      "API Token": []
    }
  ]
}
