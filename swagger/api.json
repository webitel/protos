{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Webitel API",
    "contact": {
      "name": "Webitel",
      "url": "https://webitel.com",
      "email": "support@webitel.com"
    },
    "license": {
      "name": "MIT"
    },
    "version": "24.04.0"
  },
  "host": "dev.webitel.com",
  "basePath": "/api",
  "paths": {
    "/acl/{object.name}/{object.id}": {
      "get": {
        "tags": [
          "AccessStore"
        ],
        "summary": "default: TODO: indicate objclass=default as a default rights repo",
        "operationId": "AccessStore_ListDefaultAccess",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "object.name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "object.id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "--- filters ---\n\n[optional] [FROM] each rule owner is any of role(s) id; user -or- role",
            "name": "grantor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "[optional] [TO] subject role(s) id; user -or- role",
            "name": "grantee",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)",
            "name": "granted",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[optional] [TO] subject.name ILIKE ?q=; user -or- role",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "----- Select Options -------------------------\n\nattributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "pagedResultsControl\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ListAccessResponseV1"
            }
          }
        }
      }
    },
    "/acl/{object.name}/{object.id}/grantor/{grantor}": {
      "patch": {
        "tags": [
          "AccessStore"
        ],
        "summary": "Same as UpdateAccess except for DEFAULT access control system",
        "operationId": "AccessStore_ToggleDefaultAccess",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "object.name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "object.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "[FOR] creator user/role",
            "name": "grantor",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.AccessStore.ToggleDefaultAccessBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ToggleDefaultAccessResponse"
            }
          }
        }
      }
    },
    "/agent/chats": {
      "get": {
        "tags": [
          "AgentChatService"
        ],
        "operationId": "AgentChatService_GetAgentChats",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "default",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter",
            "name": "only_closed",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "only_unprocessed",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.GetAgentChatsResponse"
            }
          }
        }
      }
    },
    "/agent/chats/{chat_id}": {
      "patch": {
        "tags": [
          "AgentChatService"
        ],
        "operationId": "AgentChatService_MarkChatProcessed",
        "parameters": [
          {
            "type": "string",
            "name": "chat_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.MarkChatProcessedResponse"
            }
          }
        }
      }
    },
    "/calendars": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "List of calendar",
        "operationId": "SearchCalendar",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCalendar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Create calendar",
        "operationId": "CreateCalendar",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateCalendarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Calendar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calendars/timezones": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "List timezones",
        "operationId": "SearchTimezones",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTimezoneResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calendars/{id}": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Calendar item",
        "operationId": "ReadCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Calendar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Update calendar",
        "operationId": "UpdateCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CalendarService.UpdateCalendarBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Calendar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Remove calendar",
        "operationId": "DeleteCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Calendar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "List of Agent",
        "operationId": "SearchAgent",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "allow_channels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "region_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "auditor_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "is_supervisor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "not_supervisor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "extension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "not_team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "not_skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentService"
        ],
        "summary": "Create Agent",
        "operationId": "CreateAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/call": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentCallStatistics",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentCallStatisticsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/status": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStatusStatistic",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "utilization.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "utilization.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "has_call",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "region_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "auditor_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentStatsStatistic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/status/{agent_id}": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStatusStatisticItem",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentStatusStatisticItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/states/history": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStateHistory",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "from_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentStateHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/pause_causes": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchPauseCauseForAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "allow_change",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ForAgentPauseCauseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "List of AgentSkill",
        "operationId": "SearchAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Create AgentSkill",
        "operationId": "CreateAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentSkillService.CreateAgentSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "DeleteAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "PatchAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentSkillService.PatchAgentSkillsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills/bulk": {
      "post": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "CreateAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentSkillService.CreateAgentSkillsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateAgentSkillsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills/{id}": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "AgentSkill item",
        "operationId": "ReadAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Update AgentSkill",
        "operationId": "UpdateAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentSkillService.UpdateAgentSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Remove AgentSkill",
        "operationId": "DeleteAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "PatchAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentSkillService.PatchAgentSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/states/history": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentStateHistory",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time_to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentStateHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/states/waiting": {
      "patch": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentSetState",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentService.AgentSetStateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentSetStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/statistics/queues": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentInQueueStatistics",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentInQueueStatisticsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/statistics/today": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentTodayStatistics",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentTodayStatisticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "Agent item",
        "operationId": "ReadAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentService"
        ],
        "summary": "Update Agent",
        "operationId": "UpdateAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentService.UpdateAgentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentService"
        ],
        "summary": "Remove Agent",
        "operationId": "DeleteAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentService"
        ],
        "summary": "Update Agent",
        "operationId": "PatchAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentService.PatchAgentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Agent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/queues": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentInQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/status": {
      "patch": {
        "tags": [
          "AgentService"
        ],
        "summary": "Change agent status",
        "operationId": "UpdateAgentStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentService.UpdateAgentStatusBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/teams": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "todo deprecated ?",
        "operationId": "SearchAgentInTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentInTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/attempts/{attempt_id}": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptCallback",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.AttemptCallbackBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AttemptResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/audit/forms": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "SearchAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "bool archive = 9;\n\nbool active = 11; // not archive",
            "name": "editable",
            "in": "query"
          },
          {
            "type": "string",
            "name": "question",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "CreateAuditForm",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateAuditFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/audit/forms/{form_id}/rate": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "SearchAuditRate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "form_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "call_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAuditRate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/audit/forms/{id}": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "ReadAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "UpdateAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AuditFormService.UpdateAuditFormBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "DeleteAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "PatchAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AuditFormService.PatchAuditFormBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/audit/rate": {
      "post": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "CreateAuditFormRate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateAuditFormRateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditRate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/audit/rate/{id}": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "ReadAuditRate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditRate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "UpdateAuditRate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AuditFormService.UpdateAuditRateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditRate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "DeleteAuditRate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AuditRate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/buckets": {
      "get": {
        "tags": [
          "BucketService"
        ],
        "summary": "List of Bucket",
        "operationId": "SearchBucket",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BucketService"
        ],
        "summary": "Create Bucket",
        "operationId": "CreateBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Bucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/buckets/{id}": {
      "get": {
        "tags": [
          "BucketService"
        ],
        "summary": "Bucket item",
        "operationId": "ReadBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Bucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BucketService"
        ],
        "summary": "Update Bucket",
        "operationId": "UpdateBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.BucketService.UpdateBucketBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Bucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BucketService"
        ],
        "summary": "Remove Bucket",
        "operationId": "DeleteBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Bucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/communication_type": {
      "get": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "List of CommunicationType",
        "operationId": "SearchCommunicationType",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "Undefined",
                "Phone",
                "Email",
                "Messaging"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channel",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Create CommunicationType",
        "operationId": "CreateCommunicationType",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CommunicationTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/communication_type/{id}": {
      "get": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "CommunicationType item",
        "operationId": "ReadCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Update CommunicationType",
        "operationId": "UpdateCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CommunicationTypeService.UpdateCommunicationTypeBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Remove CommunicationType",
        "operationId": "DeleteCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CommunicationTypeService"
        ],
        "operationId": "PatchCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CommunicationTypeService.PatchCommunicationTypeBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CommunicationType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/list": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List of List",
        "operationId": "SearchList",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOfList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListService"
        ],
        "summary": "Create List",
        "operationId": "CreateList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.List"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/list/{id}": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List item",
        "operationId": "ReadList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.List"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListService"
        ],
        "summary": "Update list",
        "operationId": "UpdateList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.ListService.UpdateListBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.List"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListService"
        ],
        "summary": "Remove list",
        "operationId": "DeleteList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.List"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/list/{list_id}/communication": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List of List",
        "operationId": "SearchListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "expire_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "expire_at.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOfListCommunication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListService"
        ],
        "summary": "Create ListCommunication",
        "operationId": "CreateListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.ListService.CreateListCommunicationBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCommunication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/list/{list_id}/communication/{id}": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List item",
        "operationId": "ReadListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCommunication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListService"
        ],
        "summary": "Update ListCommunication",
        "operationId": "UpdateListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.ListService.UpdateListCommunicationBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCommunication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListService"
        ],
        "summary": "Remove ListCommunication",
        "operationId": "DeleteListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCommunication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/lookups/agents/skills/{agent_id}": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "SearchLookupAgentNotExistsSkill",
        "operationId": "SearchLookupAgentNotExistsSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/lookups/agents/users": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "SearchLookupAgentNotExistsUser",
        "operationId": "SearchLookupUsersAgentNotExists",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/members": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "Search of Member",
        "operationId": "SearchMembers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "destination",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "stop_cause",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/members/{id}": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "PatchMemberOne",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.PatchMemberOneBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/pause_causes": {
      "get": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "SearchAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "CreateAgentPauseCause",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateAgentPauseCauseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/pause_causes/{id}": {
      "get": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "ReadAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "UpdateAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCauseService.UpdateAgentPauseCauseBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "DeleteAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "PatchAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCauseService.PatchAgentPauseCauseBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentPauseCause"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/preset/query": {
      "get": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "SearchPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "section",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListPresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "CreatePresetQuery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreatePresetQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/preset/query/{id}": {
      "get": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "ReadPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "UpdatePresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.PresetQueryService.UpdatePresetQueryBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "DeletePresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "PatchPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.PresetQueryService.PatchPresetQueryBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PresetQuery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "List of Queue",
        "operationId": "SearchQueue",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueService"
        ],
        "summary": "Create Queue",
        "operationId": "CreateQueue",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateQueueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Queue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/active": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchAttempts",
        "operationId": "SearchAttempts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "offered_agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAttempt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/active/reset": {
      "put": {
        "tags": [
          "MemberService"
        ],
        "operationId": "ResetActiveAttempts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.ResetActiveAttemptsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResetActiveAttemptsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/history": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchMemberAttempts",
        "operationId": "SearchAttemptsHistory",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "offered_agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListHistoryAttempt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/{attempt_id}/renewal": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptsRenewalResult",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.AttemptsRenewalResultBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AttemptRenewalResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/members": {
      "delete": {
        "tags": [
          "MemberService"
        ],
        "summary": "DeleteAllMembers",
        "operationId": "DeleteAllMembers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.DeleteAllMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/reports/general": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "operationId": "SearchQueueReportGeneral",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListReportGeneral"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/state": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "operationId": "GetQueuesGlobalState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.GetQueuesGlobalStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueService"
        ],
        "operationId": "SetQueuesGlobalState",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SetQueuesGlobalStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SetQueuesGlobalStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/tags": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "List RoutingSchemaTags",
        "operationId": "SearchQueueTags",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTags"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{id}": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "Queue item",
        "operationId": "ReadQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Queue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueService"
        ],
        "summary": "Update Queue",
        "operationId": "UpdateQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueService.UpdateQueueBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Queue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueService"
        ],
        "summary": "Remove Queue",
        "operationId": "DeleteQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Queue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueService"
        ],
        "summary": "Patch Queue",
        "operationId": "PatchQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueService.PatchQueueBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Queue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/buckets": {
      "get": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "SearchQueueRouting",
        "operationId": "SearchQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "Create QueueBucket",
        "operationId": "CreateQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueBucketService.CreateQueueBucketBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/buckets/{id}": {
      "get": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "ReadQueueRouting",
        "operationId": "ReadQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "UpdateQueueBucket",
        "operationId": "UpdateQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueBucketService.UpdateQueueBucketBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "DeleteQueueRouting",
        "operationId": "DeleteQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueBucketService"
        ],
        "operationId": "PatchQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueBucketService.PatchQueueBucketBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/hooks": {
      "get": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "SearchQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "event",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "CreateQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueHookService.CreateQueueHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/hooks/{id}": {
      "get": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "ReadQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "UpdateQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueHookService.UpdateQueueHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "DeleteQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "PatchQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueHookService.PatchQueueHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "List of Member",
        "operationId": "SearchMemberInQueue",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "destination",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "stop_cause",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "variables[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Create Member",
        "operationId": "CreateMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.CreateMemberBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MemberService"
        ],
        "summary": "DeleteMembers",
        "operationId": "DeleteMembers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.DeleteMembersBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/bulk": {
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Create Member",
        "operationId": "CreateMemberBulk",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.CreateMemberBulkBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberBulkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/reset": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "summary": "ResetMembers",
        "operationId": "ResetMembers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.ResetMembersBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResetMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{id}": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "ReadQueueRouting",
        "operationId": "ReadMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MemberService"
        ],
        "summary": "UpdateMember",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.UpdateMemberBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MemberService"
        ],
        "summary": "DeleteMember",
        "operationId": "DeleteMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MemberService"
        ],
        "summary": "Patch Member",
        "operationId": "PatchMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.PatchMemberBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MemberInQueue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{member_id}/attempts": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchMemberAttempts",
        "operationId": "SearchMemberAttempts",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListMemberAttempt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Offline queue",
        "operationId": "CreateAttempt",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.CreateAttemptBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateAttemptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{member_id}/attempts/{attempt_id}": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptResult",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.MemberService.AttemptResultBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AttemptResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/resource_groups": {
      "get": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "SearchQueueResourceGroup",
        "operationId": "SearchQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQueueResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "CreateQueueResourceGroup",
        "operationId": "CreateQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueResourcesService.CreateQueueResourceGroupBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/resource_groups/{id}": {
      "get": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "ReadQueueResourceGroup",
        "operationId": "ReadQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "UpdateQueueResourceGroup",
        "operationId": "UpdateQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueResourcesService.UpdateQueueResourceGroupBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "DeleteQueueResourceGroup",
        "operationId": "DeleteQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/skills": {
      "get": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "SearchQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "lvl",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "min_capacity",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "max_capacity",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "CreateQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueSkillService.CreateQueueSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/skills/{id}": {
      "get": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "ReadQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "UpdateQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueSkillService.UpdateQueueSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "DeleteQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "PatchQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QueueSkillService.PatchQueueSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QueueSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/quick_replies": {
      "get": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "SearchQuickReplies",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListQuickReplies"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "CreateQuickReply",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateQuickReplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QuickReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/quick_replies/{id}": {
      "get": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "ReadQuickReply",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QuickReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "UpdateQuickReply",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QuickRepliesService.UpdateQuickReplyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QuickReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "DeleteQuickReply",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QuickReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QuickRepliesService"
        ],
        "operationId": "PatchQuickReply",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.QuickRepliesService.PatchQuickReplyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.QuickReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resource_group": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "List of OutboundResourceGroup",
        "operationId": "SearchOutboundResourceGroup",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOutboundResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Create OutboundResourceGroup",
        "operationId": "CreateOutboundResourceGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateOutboundResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{group_id}/resource": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "List of OutboundResourceInGroup",
        "operationId": "SearchOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Create OutboundResourceGroup",
        "operationId": "CreateOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceInGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{group_id}/resource/{id}": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "OutboundResourceInGroup item",
        "operationId": "ReadOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceInGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Update OutboundResourceInGroup",
        "operationId": "UpdateOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceInGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Remove OutboundResourceInGroup",
        "operationId": "DeleteOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceInGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{id}": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "OutboundResourceGroup item",
        "operationId": "ReadOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Update OutboundResourceGroup",
        "operationId": "UpdateOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Remove OutboundResourceGroup",
        "operationId": "DeleteOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resources": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "List of OutboundResource",
        "operationId": "SearchOutboundResource",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create OutboundResource",
        "operationId": "CreateOutboundResource",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateOutboundResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resources/{id}": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "OutboundResource item",
        "operationId": "ReadOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Update OutboundResource",
        "operationId": "UpdateOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceService.UpdateOutboundResourceBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove OutboundResource",
        "operationId": "DeleteOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Patch OutboundResource",
        "operationId": "PatchOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceService.PatchOutboundResourceBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.OutboundResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "List of ResourceDisplay",
        "operationId": "SearchOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOutboundResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create CreateOutboundResourceDisplay",
        "operationId": "CreateOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceService.CreateOutboundResourceDisplayBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove ResourceDisplays",
        "operationId": "DeleteOutboundResourceDisplays",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "items",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display/bulk": {
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create CreateOutboundResourceDisplay",
        "operationId": "CreateOutboundResourceDisplayBulk",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display/{id}": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "ResourceDisplay item",
        "operationId": "ReadOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Update ResourceDisplay",
        "operationId": "UpdateOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.OutboundResourceService.UpdateOutboundResourceDisplayBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove ResourceDisplay",
        "operationId": "DeleteOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ResourceDisplay"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/skills": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "List of Skill",
        "operationId": "SearchSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListSkill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillService"
        ],
        "summary": "Create Skill",
        "operationId": "CreateSkill",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Skill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/skills/{id}": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "Skill item",
        "operationId": "ReadSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Skill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SkillService"
        ],
        "summary": "Update Skill",
        "operationId": "UpdateSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SkillService.UpdateSkillBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Skill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillService"
        ],
        "summary": "Remove Skill",
        "operationId": "DeleteSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Skill"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/skills/{skill_id}/agents": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "For agents\nSearchSkillAgent",
        "operationId": "SearchSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListSkillAgent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillService"
        ],
        "operationId": "CreateSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SkillService.CreateSkillAgentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateSkillAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillService"
        ],
        "operationId": "DeleteSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SkillService.DeleteSkillAgentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.DeleteSkillAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SkillService"
        ],
        "operationId": "PatchSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SkillService.PatchSkillAgentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.PatchSkillAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams": {
      "get": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "List of AgentTeam",
        "operationId": "SearchAgentTeam",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "strategy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "admin_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAgentTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Create AgentTeam",
        "operationId": "CreateAgentTeam",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateAgentTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/triggers/agent": {
      "get": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "SearchAgentTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/triggers/{trigger_id}": {
      "post": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "RunTeamTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "trigger_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamTriggerService.RunTeamTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RunTeamTriggerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/{id}": {
      "get": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "AgentTeam item",
        "operationId": "ReadAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Update AgentTeam",
        "operationId": "UpdateAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AgentTeamService.UpdateAgentTeamBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Remove AgentTeam",
        "operationId": "DeleteAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.AgentTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/hooks": {
      "get": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "SearchTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "teamHookEventUndefined",
                "agent_status"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "event",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "CreateTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamHookService.CreateTeamHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/hooks/{id}": {
      "get": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "ReadTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "UpdateTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamHookService.UpdateTeamHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "DeleteTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "PatchTeamHook",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamHookService.PatchTeamHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/triggers": {
      "get": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "SearchTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "CreateTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamTriggerService.CreateTeamTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/triggers/{id}": {
      "get": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "ReadTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "UpdateTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamTriggerService.UpdateTeamTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "DeleteTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TeamTriggerService"
        ],
        "operationId": "PatchTeamTrigger",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TeamTriggerService.PatchTeamTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TeamTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/call_center/users": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "List of UserStatus",
        "operationId": "SearchUserStatus",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListUserStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "CreateCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active": {
      "get": {
        "tags": [
          "CallService"
        ],
        "operationId": "SearchActiveCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "gateway_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "skip_parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cause",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "exists_file",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "number",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "missed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}": {
      "get": {
        "tags": [
          "CallService"
        ],
        "summary": "Call item",
        "operationId": "ReadCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ActiveCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CallService"
        ],
        "operationId": "HangupCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.HangupCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.HangupCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/confirm_push": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "summary": "Call item",
        "operationId": "ConfirmPush",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ConfirmPushResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/dtmf": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "DtmfCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.DtmfCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.DtmfCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/eavesdrop": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "EavesdropCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.EavesdropCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/hold": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "HoldCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.HoldCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.HoldCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/transfer": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "BlindTransferCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.BlindTransferCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.BlindTransferCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/unhold": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "UnHoldCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.UnHoldCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.HoldCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/active/{id}/variables": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "SetVariablesCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.SetVariablesCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SetVariablesCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history": {
      "get": {
        "tags": [
          "CallService"
        ],
        "summary": "List of call",
        "operationId": "SearchHistoryCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "gateway_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "skip_parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cause",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "has_file",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "number",
            "in": "query"
          },
          {
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "missed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transfer_from",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transfer_to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "dependency_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "variables[string]",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amd_result",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fts",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "directions",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "has_transcript",
            "in": "query"
          },
          {
            "type": "string",
            "name": "agent_description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "owner_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "grantee_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amd_ai_result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "talk.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "talk.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "rated",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_by",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_required.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_required.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_optional.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_optional.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_user",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "contact_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "has_transfer",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "timeline",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListHistoryCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CallService"
        ],
        "summary": "List of call",
        "operationId": "SearchHistoryCallPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SearchHistoryCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListHistoryCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history/aggregate": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "AggregateHistoryCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.AggregateHistoryCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAggregate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/annotation": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "CreateCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.CreateCallAnnotationBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CallAnnotation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/annotation/{id}": {
      "put": {
        "tags": [
          "CallService"
        ],
        "operationId": "UpdateCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.UpdateCallAnnotationBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CallAnnotation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CallService"
        ],
        "operationId": "DeleteCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CallAnnotation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/redial": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "RedialCall",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.RedialCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.CreateCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/calls/history/{id}": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "PatchHistoryCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CallService.PatchHistoryCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.HistoryCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for searching cases.",
        "operationId": "SearchCases",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of results per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "General query string.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of specific case IDs to retrieve.",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting criteria (e.g., field:asc).",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Key-value pairs for additional filtering.",
            "name": "filters",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact ID for filtering cases.",
            "name": "contact_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specify which fields to apply 'q' to.",
            "name": "qin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for creating a new case.",
        "operationId": "CreateCase",
        "parameters": [
          {
            "description": "Input data for creating the case.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCreateCase"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to disable the trigger after the application execution.\nDefault is false (trigger **will** be executed).\nSet to true to explicitly prevent the trigger from running (e.g., when called from another trigger or internal flow).\nто\n[WTEL-7055]",
            "name": "disableTrigger",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Case"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Retrieve a list of catalogs or search catalogs",
        "operationId": "ListCatalogs",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of records per page",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting options by fields",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "List of IDs to filter the catalogs",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "query",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filter by state (true for active, false for inactive)",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter by the depth of the hierarchy to retrieve services.\nThe depth indicates how many ancestor levels of services\nwill be included for each catalog.\n- A depth of 0 includes only the direct catalog.\n- A depth of 1 includes the catalog and its immediate services.\n- By default the depth is limited by 3,\n  meaning all nested services and sub-services will be included.",
            "name": "depth",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result for [SUBSERVICES].\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog subservices.",
            "name": "sub_fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filter catalogs with subservices",
            "name": "hasSubservices",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CatalogList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Create a new catalog",
        "operationId": "CreateCatalog",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCatalog"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/catalogs/{id}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Locate a catalog by ID",
        "operationId": "LocateCatalog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the catalog to be located",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result for [SUBSERVICES].\nIf the user passes \"-\" as the value for fields,\nit will retrieve all available fields for each catalog subservices.",
            "name": "sub_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateCatalogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Update an existing catalog",
        "operationId": "UpdateCatalog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the catalog to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for updating the catalog",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCatalog"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Delete a catalog",
        "operationId": "DeleteCatalog",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "ID of the catalog to be deleted",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CatalogList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Update an existing catalog",
        "operationId": "UpdateCatalog2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the catalog to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for updating the catalog",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCatalog"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/close_reason_groups": {
      "get": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Retrieve a list of close reason groups or search close reason groups",
        "operationId": "ListCloseReasonGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonGroupList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Create a new close reason group",
        "operationId": "CreateCloseReasonGroup",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReasonGroup"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/close_reason_groups/{id}": {
      "get": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Locate a close reason group by ID",
        "operationId": "LocateCloseReasonGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateCloseReasonGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Update an existing close reason group",
        "operationId": "UpdateCloseReasonGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReasonGroup"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Delete a close reason group",
        "operationId": "DeleteCloseReasonGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CloseReasonGroups"
        ],
        "summary": "Update an existing close reason group",
        "operationId": "UpdateCloseReasonGroup2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReasonGroup"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/comments/{etag}": {
      "get": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Retrieve a specific comment by its etag",
        "operationId": "LocateComment",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the comment to retrieve.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Specific fields to return for the comment.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Delete a specific comment by its etag",
        "operationId": "DeleteComment",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the comment to delete.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return after deletion.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/comments/{input.etag}": {
      "put": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Update a specific comment by its etag",
        "operationId": "UpdateComment",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier for the comment.",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Data for the comment to update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Data for the comment to update.",
              "properties": {
                "text": {
                  "description": "Content of the comment.",
                  "type": "string"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              },
              "example": {
                "text": "My new comment"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Optional updating timestamp. If not set, will be set default(current) time.",
            "name": "updated_at",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Update a specific comment by its etag",
        "operationId": "UpdateComment2",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier for the comment.",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Data for the comment to update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Data for the comment to update.",
              "properties": {
                "text": {
                  "description": "Content of the comment.",
                  "type": "string"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              },
              "example": {
                "text": "My new comment"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Optional updating timestamp. If not set, will be set default(current) time.",
            "name": "updated_at",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/priorities": {
      "get": {
        "tags": [
          "Priorities"
        ],
        "summary": "Retrieve a list of priorities or search priorities",
        "operationId": "ListPriorities",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter priorities that are not in filtered SLA",
            "name": "notInSla",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter priorities that are in filtered SlaCondition and not in current SLA",
            "name": "inSlaCond",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.PriorityList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Priorities"
        ],
        "summary": "Create a new priority",
        "operationId": "CreatePriority",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputPriority"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Priority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/priorities/{id}": {
      "get": {
        "tags": [
          "Priorities"
        ],
        "summary": "Locate a priority by ID",
        "operationId": "LocatePriority",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the priority to be located",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocatePriorityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Priorities"
        ],
        "summary": "Update an existing priority",
        "operationId": "UpdatePriority",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputPriority"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Priority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Priorities"
        ],
        "summary": "Delete a priority",
        "operationId": "DeletePriority",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Priority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Priorities"
        ],
        "summary": "Update an existing priority",
        "operationId": "UpdatePriority2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputPriority"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Priority"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Retrieve a list of services or search services within a catalog",
        "operationId": "ListServices",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of records per page",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting options by fields",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "List of IDs to filter the services",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter services by catalog ID (required)",
            "name": "root_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filter by state (true for active, false for inactive)",
            "name": "state",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.ServiceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "Create a new service within a catalog",
        "operationId": "CreateService",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCreateService"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/services/{id}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Locate a service by ID",
        "operationId": "LocateService",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the service to be located",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "summary": "Update an existing service",
        "operationId": "UpdateService",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the service to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for updating the service",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputService"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "summary": "Delete a service",
        "operationId": "DeleteService",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "ID of the service to be deleted",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.ServiceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Services"
        ],
        "summary": "Update an existing service",
        "operationId": "UpdateService2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the service to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for updating the service",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputService"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/slas": {
      "get": {
        "tags": [
          "SLAs"
        ],
        "summary": "Retrieve a list of SLAs or search SLA conditions",
        "operationId": "ListSLAs",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLAList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SLAs"
        ],
        "summary": "Create a new SLA",
        "operationId": "CreateSLA",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLA"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/slas/{id}": {
      "get": {
        "tags": [
          "SLAs"
        ],
        "summary": "Locate an SLA by ID",
        "operationId": "LocateSLA",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateSLAResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SLAs"
        ],
        "summary": "Update an existing SLA",
        "operationId": "UpdateSLA",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLA"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SLAs"
        ],
        "summary": "Delete an SLA",
        "operationId": "DeleteSLA",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SLAs"
        ],
        "summary": "Update an existing SLA",
        "operationId": "UpdateSLA2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLA"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLA"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/sources": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Retrieve a list of sources or search sources",
        "operationId": "ListSources",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "default": "1",
            "description": "Page number of result dataset records. offset = (page * size)\nDefault: 0",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": "20",
            "description": "Size count of records on result page. limit = (size++)\nDefault: 25",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.\nDefault: [] (all fields)",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "default": "name:desc",
            "description": "Sort the result according to fields.\nDefault: \"id:desc\"",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*)\n- Placeholder (?)\n- Exact match",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "CALL",
                "CHAT",
                "SOCIAL_MEDIA",
                "EMAIL",
                "API",
                "MANUAL"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter by source type.\n\n - TYPE_UNSPECIFIED: Unspecified source type.\n - CALL: Phone call source type.\n - CHAT: Chat source type.\n - SOCIAL_MEDIA: Social media source type.\n - EMAIL: Email source type.\n - API: API source type.\n - MANUAL: Manual source type.",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Create a new source",
        "operationId": "CreateSource",
        "parameters": [
          {
            "description": "Main input payload for the source being created",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The input data for the source",
              "required": [
                "input"
              ],
              "$ref": "#/definitions/webitel.cases.InputSource"
            }
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Optional list of specific fields to return after creation\n\nSpecific fields to include in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Source"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/sources/{id}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Locate a source by ID",
        "operationId": "LocateSource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the source to locate.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateSourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sources"
        ],
        "summary": "Update an existing source",
        "operationId": "UpdateSource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSource"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Source"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "summary": "Delete a source",
        "operationId": "DeleteSource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the source to delete.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Source"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Sources"
        ],
        "summary": "Update an existing source",
        "operationId": "UpdateSource2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSource"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Source"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/statuses": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "summary": "Retrieve a list of statuses or search statuses",
        "operationId": "ListStatuses",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Statuses"
        ],
        "summary": "Create a new status",
        "operationId": "CreateStatus",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputStatus"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Status"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/statuses/{id}": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "summary": "Locate a status by ID",
        "operationId": "LocateStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Statuses"
        ],
        "summary": "Update an existing status",
        "operationId": "UpdateStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputStatus"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Status"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Statuses"
        ],
        "summary": "Delete a status",
        "operationId": "DeleteStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Status"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Statuses"
        ],
        "summary": "Update an existing status",
        "operationId": "UpdateStatus2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputStatus"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Status"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/comments": {
      "get": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Retrieve a list of comments associated with a specific case",
        "operationId": "ListComments",
        "parameters": [
          {
            "type": "string",
            "description": "Etag or ID of the case for which comments are requested.",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of comments per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Query string for search.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Array of requested id.",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting order.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return for each comment.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseCommentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CaseComments"
        ],
        "summary": "Publish comment into a specific case",
        "operationId": "PublishComment",
        "parameters": [
          {
            "type": "string",
            "description": "Etag or ID of the case to which comments belong.",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Comment to publish.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCaseComment"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Result fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Optional creation timestamp. If not set, will be set default(current) time.",
            "name": "created_at",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/communication": {
      "get": {
        "tags": [
          "CaseCommunications"
        ],
        "summary": "Lists all communications linked to a specific case.\nCurrently a feature for future development.",
        "operationId": "ListCommunications",
        "parameters": [
          {
            "type": "string",
            "description": "Case identifier.",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Query string for filtering results.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of records per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting order.",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.ListCommunicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CaseCommunications"
        ],
        "summary": "Links a communication to a specific case.",
        "operationId": "LinkCommunication",
        "parameters": [
          {
            "type": "string",
            "description": "Case identifier.",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for the communications to link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCaseCommunication"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LinkCommunicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/communication/{id}": {
      "delete": {
        "tags": [
          "CaseCommunications"
        ],
        "summary": "Unlinks a communication from a specific case.",
        "operationId": "UnlinkCommunication",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Communication identifier.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.UnlinkCommunicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/files": {
      "get": {
        "tags": [
          "CaseFiles"
        ],
        "summary": "Retrieve a list of files associated with a case",
        "operationId": "ListFiles",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the case to fetch files for (required).",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The page number to retrieve.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of items per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Array of requested id.",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseFileList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/files/{id}": {
      "delete": {
        "tags": [
          "CaseFiles"
        ],
        "summary": "Delete a file",
        "operationId": "DeleteFile",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the file to delete.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.File"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/links": {
      "get": {
        "tags": [
          "CaseLinks"
        ],
        "summary": "With Case",
        "operationId": "ListLinks",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLinkList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CaseLinks"
        ],
        "operationId": "CreateLink",
        "parameters": [
          {
            "type": "string",
            "description": "new comment link",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "result fields needed on the front-end for each comment",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "input.etag",
            "in": "query"
          },
          {
            "type": "string",
            "name": "input.url",
            "in": "query"
          },
          {
            "type": "string",
            "name": "input.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "input.userID.id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "input.userID.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/links/{etag}": {
      "get": {
        "tags": [
          "CaseLinks"
        ],
        "operationId": "LocateLink",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "(id allowed)",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CaseLinks"
        ],
        "operationId": "DeleteLink",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "etag",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_etag}/links/{input.etag}": {
      "put": {
        "tags": [
          "CaseLinks"
        ],
        "operationId": "UpdateLink",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "on return",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CaseLinks"
        ],
        "operationId": "UpdateLink2",
        "parameters": [
          {
            "type": "string",
            "name": "case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "on return",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_id}/chat/{chat_id}/messages": {
      "get": {
        "tags": [
          "CasesChatCatalog"
        ],
        "operationId": "CasesChatCatalog_GetCaseChatHistory",
        "parameters": [
          {
            "type": "string",
            "description": "Contact identificator",
            "name": "case_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/cases/{case_id}/timeline": {
      "get": {
        "tags": [
          "CaseTimeline"
        ],
        "operationId": "GetTimeline",
        "parameters": [
          {
            "type": "string",
            "name": "case_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "chat",
                "call",
                "email"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.GetTimelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{case_id}/timeline/counter": {
      "get": {
        "tags": [
          "CaseTimeline"
        ],
        "operationId": "GetTimelineCounter",
        "parameters": [
          {
            "type": "string",
            "name": "case_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.GetTimelineCounterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{etag}": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method to retrieve a specific case by its etag identifier.",
        "operationId": "LocateCase",
        "parameters": [
          {
            "type": "string",
            "description": "Unique etag identifier of the case.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Case"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for deleting an existing case by its etag.",
        "operationId": "DeleteCase",
        "parameters": [
          {
            "type": "string",
            "description": "Unique etag identifier of the case.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the deleted case response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.Case"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{input.etag}": {
      "put": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for updating an existing case.",
        "operationId": "UpdateCase",
        "parameters": [
          {
            "type": "string",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data with updated fields.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Input data with updated fields.",
              "properties": {
                "assignee": {
                  "title": "create: not required, default from service or set by UI;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "close_reason": {
                  "title": "create: not required;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "close_result": {
                  "type": "string",
                  "title": "create: not required; update: required only when case status goes to the final state"
                },
                "contact_info": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "custom": {
                  "description": "Custom data extension fields ..",
                  "type": "object"
                },
                "description": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "group": {
                  "title": "create: not required, default from service or set by UI;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "impacted": {
                  "title": "create: required, default is reporter or ui (if empty recognize as anonymous);",
                  "$ref": "#/definitions/general.Lookup"
                },
                "priority": {
                  "title": "create: not required, default first value from priority lookup",
                  "$ref": "#/definitions/general.Lookup"
                },
                "rating": {
                  "type": "string",
                  "format": "int64"
                },
                "rating_comment": {
                  "type": "string"
                },
                "reporter": {
                  "title": "create: required (if empty recognize as anonymous contact);",
                  "$ref": "#/definitions/general.Lookup"
                },
                "service": {
                  "title": "on this field base many other readonly fields on return",
                  "$ref": "#/definitions/general.Lookup"
                },
                "source": {
                  "title": "source of the case",
                  "$ref": "#/definitions/general.Lookup"
                },
                "status": {
                  "title": "create: not required, default initial value from status lookup or ui;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "status_condition": {
                  "$ref": "#/definitions/webitel.cases.StatusCondition"
                },
                "subject": {
                  "type": "string",
                  "title": "create: required;"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of JSON fields to update.",
            "name": "x_json_mask",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to disable the trigger after the application execution.\nDefault is false (trigger **will** be executed).\nSet to true to explicitly prevent the trigger from running (e.g., when called from another trigger or internal flow).\n\n[WTEL-7055]",
            "name": "disableTrigger",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.UpdateCaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for updating an existing case.",
        "operationId": "UpdateCase2",
        "parameters": [
          {
            "type": "string",
            "name": "input.etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data with updated fields.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Input data with updated fields.",
              "properties": {
                "assignee": {
                  "title": "create: not required, default from service or set by UI;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "close_reason": {
                  "title": "create: not required;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "close_result": {
                  "type": "string",
                  "title": "create: not required; update: required only when case status goes to the final state"
                },
                "contact_info": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "custom": {
                  "description": "Custom data extension fields ..",
                  "type": "object"
                },
                "description": {
                  "type": "string",
                  "title": "create: not required;"
                },
                "group": {
                  "title": "create: not required, default from service or set by UI;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "impacted": {
                  "title": "create: required, default is reporter or ui (if empty recognize as anonymous);",
                  "$ref": "#/definitions/general.Lookup"
                },
                "priority": {
                  "title": "create: not required, default first value from priority lookup",
                  "$ref": "#/definitions/general.Lookup"
                },
                "rating": {
                  "type": "string",
                  "format": "int64"
                },
                "rating_comment": {
                  "type": "string"
                },
                "reporter": {
                  "title": "create: required (if empty recognize as anonymous contact);",
                  "$ref": "#/definitions/general.Lookup"
                },
                "service": {
                  "title": "on this field base many other readonly fields on return",
                  "$ref": "#/definitions/general.Lookup"
                },
                "source": {
                  "title": "source of the case",
                  "$ref": "#/definitions/general.Lookup"
                },
                "status": {
                  "title": "create: not required, default initial value from status lookup or ui;",
                  "$ref": "#/definitions/general.Lookup"
                },
                "status_condition": {
                  "$ref": "#/definitions/webitel.cases.StatusCondition"
                },
                "subject": {
                  "type": "string",
                  "title": "create: required;"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of JSON fields to update.",
            "name": "x_json_mask",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Indicates whether to disable the trigger after the application execution.\nDefault is false (trigger **will** be executed).\nSet to true to explicitly prevent the trigger from running (e.g., when called from another trigger or internal flow).\n\n[WTEL-7055]",
            "name": "disableTrigger",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.UpdateCaseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{input.primary_case.id}/related/{etag}": {
      "put": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "Update an existing related case",
        "operationId": "UpdateRelatedCase",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "input.primary_case.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Identifier of the related case to update.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for the related case update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Input data for the related case update.",
              "properties": {
                "primary_case": {
                  "description": "Primary case details.",
                  "type": "object",
                  "title": "Primary case details.",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "related_case": {
                  "description": "Related case details.",
                  "$ref": "#/definitions/general.Lookup"
                },
                "relation_type": {
                  "description": "Relation type.",
                  "$ref": "#/definitions/webitel.cases.RelationType"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "Update an existing related case",
        "operationId": "UpdateRelatedCase2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "input.primary_case.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Identifier of the related case to update.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for the related case update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Input data for the related case update.",
              "properties": {
                "primary_case": {
                  "description": "Primary case details.",
                  "type": "object",
                  "title": "Primary case details.",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "related_case": {
                  "description": "Related case details.",
                  "$ref": "#/definitions/general.Lookup"
                },
                "relation_type": {
                  "description": "Relation type.",
                  "$ref": "#/definitions/webitel.cases.RelationType"
                },
                "userID": {
                  "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
                  "$ref": "#/definitions/general.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{primary_case_etag}/related": {
      "get": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "List all related cases for a specific case",
        "operationId": "ListRelatedCases",
        "parameters": [
          {
            "type": "string",
            "description": "Primary Case ID for which related cases are requested.",
            "name": "primary_case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of related cases per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Query string for search.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting order.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return for each related case.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter by ids",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "Create a new related case",
        "operationId": "CreateRelatedCase",
        "parameters": [
          {
            "type": "string",
            "description": "Primary case details.",
            "name": "primary_case_etag",
            "in": "path",
            "required": true
          },
          {
            "description": "Input data for the related case.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.CreateInputRelatedCase"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to include in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/cases/{primary_case_etag}/related/{etag}": {
      "get": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "Retrieve a specific related case by ID",
        "operationId": "LocateRelatedCase",
        "parameters": [
          {
            "type": "string",
            "description": "Primary case identifier.",
            "name": "primary_case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Identifier of the related case.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return in the response.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RelatedCases"
        ],
        "summary": "Delete a specific related case",
        "operationId": "DeleteRelatedCase",
        "parameters": [
          {
            "type": "string",
            "description": "Etag or ID of the primary case",
            "name": "primary_case_etag",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Identifier of the related case to delete.",
            "name": "etag",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.RelatedCase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/chat/broadcast": {
      "post": {
        "tags": [
          "MessagesService"
        ],
        "summary": "Broadcast message send message from via to peer recipients.",
        "operationId": "BroadcastMessage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.chat.BroadcastMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.BroadcastMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/chat/customers": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of external chat customers",
        "operationId": "Catalog_GetCustomers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer{id,name}",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique contact **ID**entifier(s).",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The type of contact to filter.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatCustomers"
            }
          }
        }
      }
    },
    "/chat/dialogs": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of chat conversations",
        "operationId": "Catalog_GetDialogs",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer.name",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique chat IDentifier(s).\nAccept: dialog -or- member ID.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "name": "date.since",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "name": "date.until",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Dialogs ONLY that are currently [not] active( closed: ? ).",
            "name": "online",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatDialogs"
            }
          }
        }
      }
    },
    "/chat/dialogs/{chat_id}/members": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of chat participants",
        "operationId": "Catalog_GetMembers",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the chat dialog.",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer(type;name)",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique chat member ID.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "name": "date.since",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "name": "date.until",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Participants ONLY who are currently [not] connected to the chat.\n( left: ( 0 ? online : offline ) )",
            "name": "online",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Participants ONLY who have [not] been connected to the chat.\n( join: ( 0 ? [request|abandoned] : connected ) )",
            "name": "joined",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMembers"
            }
          }
        }
      }
    },
    "/chat/dialogs/{chat_id}/messages": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of the chat history",
        "operationId": "Catalog_GetHistory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/chat/{conversation_id}/contact": {
      "post": {
        "tags": [
          "ContactLinkingService"
        ],
        "summary": "CreateContactFromConversation creates new contact from the data existing in the conversation and after that links this contact to the external user.",
        "operationId": "ContactLinkingService_CreateContactFromConversation",
        "parameters": [
          {
            "type": "string",
            "name": "conversation_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "timezone.id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "timezone.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "owner.id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "owner.name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "label",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.Lookup"
            }
          }
        }
      }
    },
    "/chat/{conversation_id}/link": {
      "post": {
        "tags": [
          "ContactLinkingService"
        ],
        "summary": "LinkContactToClient creates connection between existing internal contact and external client.",
        "operationId": "ContactLinkingService_LinkContactToClient",
        "parameters": [
          {
            "type": "string",
            "name": "conversation_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "contact_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.EmptyResponse"
            }
          }
        }
      }
    },
    "/chat/{peer.type}/{peer.id}/messages": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of the chat history",
        "operationId": "Catalog_GetHistory2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string][string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/close_reason_groups/{close_reason_group_id}/close_reasons": {
      "get": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Retrieve a list of close reasons or search close reasons",
        "operationId": "ListCloseReasons",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Close reason group ID filter",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReasonList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Create a new close reason",
        "operationId": "CreateCloseReason",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReason"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/close_reason_groups/{close_reason_group_id}/close_reasons/{id}": {
      "get": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Locate a close reason by ID",
        "operationId": "LocateCloseReason",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateCloseReasonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Update an existing close reason",
        "operationId": "UpdateCloseReason",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReason"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Delete a close reason",
        "operationId": "DeleteCloseReason",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CloseReasons"
        ],
        "summary": "Update an existing close reason",
        "operationId": "UpdateCloseReason2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "close_reason_group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCloseReason"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CloseReason"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "description": "| Field       | Type \n| ----------- | ---- \n| **----------- READ-ONLY -----------** | \n| `id`        | int64 \n| `ver`       | int32 \n| `etag`      | string \n| **---------- OPERATIONAL ----------** | \n| `created_at` | int64(epoch:milli) \n| `created_by` | lookup(user) \n| `updated_at` | int64(epoch:milli) \n| `updated_by` | lookup(user) \n| **---------- ATTRIBUTES -----------** | \n| `name`      | name! \n| `about`     | string \n| `labels`    | list[label!] \n| `emails`    | list[email!] \n| `photos`    | list[photo!] \n| `phones`    | list[phone!] \n| `managers`  | list[manager!] \n| `comments`  | list[comment!] \n| `addresses` | list[address!] \n| `languages` | list[language!] \n| `timezones` | list[timezone!] \n| `variables` | list[variable!] \n| `imclients` | list[imClient!] \n",
        "tags": [
          "Contacts"
        ],
        "summary": "Search for Contact(s)",
        "operationId": "Contacts_SearchContacts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result records.   _default(1); offset=(size*(page-1));_\n\n```javascript\nlet\n    offset = 0\n  , page = req.page\n;\nif (page \u003c= 0)\n    page = 1;\nif (page \u003e 1)\n    offset = ((page-1)*size);\n// . . .\n```",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Limit of result page records count.   _default(16); limit=(size\u003c=0?-1:size+1);_\n\n```javascript\nconst\n    default = 16\n  , maximum = 32\n;\nlet limit = req.size;\nif (limit \u003c= 0)\n    limit = default;\nif (maximum \u003c limit)\n    limit = maximum;\n// . . .\n```",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\nUsed to query records within a set of `qin` fields, eg: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "type": "string",
              "default": "id"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Records with unique IDentifier(s).\nAccept: `id` -or- `etag`.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[Q]uery[IN] is a set of search fields for term `q`.\nDefault: `name{common_name}`.",
            "name": "qin",
            "in": "query"
          },
          {
            "enum": [
              "READ",
              "WRITE",
              "DELETE"
            ],
            "type": "string",
            "default": "READ",
            "description": "Source access mode requirement.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
            "name": "mode",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Excludes contacts that belong to the specified group ID.\n- Filters out contacts associated with the given `group_id`.",
            "name": "not_id_group",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filters contacts by the specified group(s).\n- Includes only contacts that belong to one or more of the given group Group(s).",
            "name": "group",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filters contacts by the specified owner(s).\n- Includes only contacts whose owner matches one or more of the given Owner(s).\n- The owner ID corresponds to `contact_id` in the `directory.wbt_user` table.",
            "name": "owner",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filters contacts by the specified label(s).\n- Includes only contacts that have one or more of the given Label(s).",
            "name": "label",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filters contacts based on whether they are user-associated.\n- `true`  → Includes only user-associated contacts.\n- `false` → Includes only contacts that are NOT user-associated.\n- A contact is considered user-associated if it exists in `directory.wbt_user`.",
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create NEW Contact",
        "operationId": "Contacts_CreateContact",
        "parameters": [
          {
            "description": "NEW Contact source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputContact"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      }
    },
    "/contacts/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Retrieve a list of groups or search groups",
        "operationId": "Groups_ListGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: group name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by group name.",
            "name": "name",
            "in": "query"
          },
          {
            "enum": [
              "GROUP_TYPE_UNSPECIFIED",
              "STATIC",
              "DYNAMIC"
            ],
            "type": "string",
            "default": "GROUP_TYPE_UNSPECIFIED",
            "description": "Filter by group type.\n\n - GROUP_TYPE_UNSPECIFIED: Default value\n - STATIC: Static group\n - DYNAMIC: Dynamic group",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Filter by only enabled group",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.GroupList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create a new group",
        "operationId": "Groups_CreateGroup",
        "parameters": [
          {
            "description": "Request message for creating a new group.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Group"
            }
          }
        }
      }
    },
    "/contacts/groups/conditions/{id}": {
      "get": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Locate a condition by ID",
        "operationId": "DynamicConditions_LocateCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Unique ID of the condition.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LocateConditionResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Update an existing condition",
        "operationId": "DynamicConditions_UpdateCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the condition to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input details for the condition.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputCondition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Condition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Delete a condition",
        "operationId": "DynamicConditions_DeleteCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the condition to delete.\n\nUnique ID of the condition.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Condition"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Update an existing condition",
        "operationId": "DynamicConditions_UpdateCondition2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the condition to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input details for the condition.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputCondition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Condition"
            }
          }
        }
      }
    },
    "/contacts/groups/contacts:attach": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Attach contacts to multiple groups",
        "operationId": "Groups_AddContactsToGroups",
        "parameters": [
          {
            "description": "Request message for adding contacts to a group.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.AddContactsToGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactList"
            }
          }
        }
      }
    },
    "/contacts/groups/dynamic": {
      "get": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Retrieve a list of dynamic groups or search dynamic groups",
        "operationId": "DynamicGroups_ListDynamicGroups",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: group name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter by group name.",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroupList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Create a new dynamic group",
        "operationId": "DynamicGroups_CreateDynamicGroup",
        "parameters": [
          {
            "description": "Request message for creating a new dynamic group.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.CreateDynamicGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroup"
            }
          }
        }
      }
    },
    "/contacts/groups/{group_id}/conditions": {
      "get": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Retrieve a list of conditions",
        "operationId": "DynamicConditions_ListConditions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The ID of the group to which the conditions belong.",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term for conditions.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ConditionList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "DynamicConditions"
        ],
        "summary": "Create a new condition",
        "operationId": "DynamicConditions_CreateCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The ID of the group to which the condition belongs.",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicConditions.CreateConditionBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Condition"
            }
          }
        }
      }
    },
    "/contacts/groups/{group_id}/contact": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Remove contacts from a group",
        "operationId": "Groups_RemoveContactsFromGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the group.",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "List of contact IDs to remove from the group.",
            "name": "contact_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactList"
            }
          }
        }
      }
    },
    "/contacts/groups/{id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Locate a group by ID",
        "operationId": "Groups_LocateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The unique ID of the group to locate.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LocateGroupResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update an existing group",
        "operationId": "Groups_UpdateGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The unique ID of the group to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Group"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete a group",
        "operationId": "Groups_DeleteGroup",
        "parameters": [
          {
            "type": "string",
            "description": "The unique ID of the group to delete.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Group"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Groups"
        ],
        "summary": "Update an existing group",
        "operationId": "Groups_UpdateGroup2",
        "parameters": [
          {
            "type": "string",
            "description": "The unique ID of the group to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Group"
            }
          }
        }
      }
    },
    "/contacts/groups/{id}/dynamic": {
      "get": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Locate a dynamic group by ID",
        "operationId": "DynamicGroups_LocateDynamicGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LocateDynamicGroupResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Update an existing dynamic group",
        "operationId": "DynamicGroups_UpdateDynamicGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the dynamic group to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input details for the dynamic group.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroup"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Delete a dynamic group",
        "operationId": "DynamicGroups_DeleteDynamicGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the dynamic group to delete.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroup"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DynamicGroups"
        ],
        "summary": "Update an existing dynamic group",
        "operationId": "DynamicGroups_UpdateDynamicGroup2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of the dynamic group to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Input details for the dynamic group.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.DynamicGroup"
            }
          }
        }
      }
    },
    "/contacts/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Search for Contacts engaged Label(s).",
        "operationId": "Labels_GetLabels",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size+1)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: label.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelTags"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/cases": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "RPC method for searching cases.",
        "operationId": "SearchCases2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID for filtering cases.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number for pagination.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of results per page.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "General query string.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of specific case IDs to retrieve.",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sorting criteria (e.g., field:asc).",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of fields to include in the response.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Key-value pairs for additional filtering.",
            "name": "filters",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specify which fields to apply 'q' to.",
            "name": "qin",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.CaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/chat/messages": {
      "get": {
        "tags": [
          "ContactsChatCatalog"
        ],
        "operationId": "ContactsChatCatalog_GetContactChatHistory2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact identificator",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string][string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.GetContactChatHistoryResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/chat/{chat_id}/messages": {
      "get": {
        "tags": [
          "ContactsChatCatalog"
        ],
        "operationId": "ContactsChatCatalog_GetContactChatHistory",
        "parameters": [
          {
            "type": "string",
            "description": "Contact identificator",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.GetContactChatHistoryResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/emails": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Locates email address(es) of the contact.",
        "operationId": "Emails_ListEmails",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID linked with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: email address.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary email address only.",
            "name": "primary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Verified email addresses only.",
            "name": "verified",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object unique ID.",
            "name": "type.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object well-known type.",
            "name": "type.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object display name.",
            "name": "type.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Resets all emails of the contact according to the input dataset.",
        "operationId": "Emails_ResetEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of email address(es) to be linked with the contact.\nEmail address(es) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
              },
              "example": [
                {
                  "email": "johndoe_43@gmail.com",
                  "type": {
                    "name": "personal"
                  },
                  "verified": true
                },
                {
                  "email": "j.doe@x-company.org",
                  "etag": "k0WqvUn4IJGnuCyG",
                  "primary": true,
                  "type": {
                    "id": "11",
                    "name": "business"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "summary": "Update or append email address(es) of the contact.",
        "operationId": "Emails_MergeEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of email address(es) to be linked with the contact.\nEmail address(es) that conflicts(email) with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
              },
              "example": [
                {
                  "email": "user@domain",
                  "primary": true,
                  "type": {
                    "name": "personal"
                  },
                  "verified": false
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Remove email address(es) of the contact.",
        "operationId": "Emails_DeleteEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "pattern": "^.+$",
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/emails/{etag}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Locate the email address link.",
        "operationId": "Emails_LocateEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique mail address link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailAddress"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Update the contact's email address link details",
        "operationId": "Emails_UpdateEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the email address link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the email address link.",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "description": "The email address.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
                }
              },
              "example": {
                "email": "user@domain",
                "etag": "1679792219687",
                "primary": true,
                "type": {
                  "name": "personal"
                },
                "verified": false
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Remove the contact's email address link",
        "operationId": "Emails_DeleteEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailAddress"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Emails"
        ],
        "summary": "Update the contact's email address link details",
        "operationId": "Emails_UpdateEmail2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the email address link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the email address link.",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "description": "The email address.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
                }
              },
              "example": {
                "email": "user@domain",
                "etag": "1679792219687",
                "primary": true,
                "type": {
                  "name": "personal"
                },
                "verified": false
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/groups": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "List of the Contact's group(s).",
        "operationId": "ContactGroups_ListContactGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: group name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "query",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Resets all groups of the contact according to the input dataset.",
        "operationId": "ContactGroups_ResetContactGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of group(s) to be linked with the contact.\nGroup(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputContactGroup"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Associate more group(s) with the Contact.",
        "operationId": "ContactGroups_MergeContactGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Array of the unique User(s) to associate with the Contact.\nAny duplicate of an already linked user{id} will result in an error.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputContactGroup"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Remove the Contact's group(s).",
        "operationId": "ContactGroups_DeleteContactGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/groups/{etag}": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Locate the Contact's group association.",
        "operationId": "ContactGroups_LocateContactGroup",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique group link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroup"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Update the Contact's group details.",
        "operationId": "ContactGroups_UpdateContactGroup",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the group link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the group link.",
              "properties": {
                "group": {
                  "description": "Group of contacts associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Remove the Contact's group association.",
        "operationId": "ContactGroups_DeleteContactGroup",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroup"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Update the Contact's group details.",
        "operationId": "ContactGroups_UpdateContactGroup2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the group link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the group link.",
              "properties": {
                "group": {
                  "description": "Group of contacts associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactGroupList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/imclients": {
      "get": {
        "tags": [
          "IMClients"
        ],
        "summary": "Search IM client links",
        "operationId": "IMClients_ListIMClients",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: IMClient.\n`?` - matches any one character\n`*` - matches 0 or more characters\nSearch fields: {user,app}",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.IMClientList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/imclients/{id}": {
      "delete": {
        "tags": [
          "IMClients"
        ],
        "operationId": "IMClients_DeleteIMClient",
        "parameters": [
          {
            "type": "string",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmptyResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Locate the Contact's associated Label(s).",
        "operationId": "Labels_ListLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size+1)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: label tag.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID or ETag.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Reset Labels to fit the specified final set.",
        "operationId": "Labels_ResetLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of labels(s) to be linked with the contact.\nLabel(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputLabel"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Associate NEW Labels to the Contact.",
        "operationId": "Labels_MergeLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of label(s) to be linked with the contact.\nLabel(s) that conflicts with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputLabel"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Remove Contact Labels associations.",
        "operationId": "Labels_DeleteLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "pattern": "^(\\w+)(,\\w+)*$",
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique label(s).etag identifiers.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Search the Contact's Managers.",
        "operationId": "Managers_ListManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size of result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: user name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Reset Managers to fit the specified final set.",
        "operationId": "Managers_ResetManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of unique User(s) to be linked with the Contact.\nUser(s) that are already linked with the Contact\nbut not listed here will be removed.\nThe first element will become `primary` if no other specified.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputManager"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Associate new Managers to the Contact.",
        "operationId": "Managers_MergeManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Array of the unique User(s) to associate with the Contact.\nAny duplicate of an already linked user{id} will result in an error.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputManager"
              },
              "example": [
                {
                  "primary": true,
                  "user": {
                    "id": "357",
                    "name": "Bruce Wayne"
                  }
                },
                {
                  "user": {
                    "id": "354",
                    "name": "Johnny Doe"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Remove Contact Managers associations.",
        "operationId": "Managers_DeleteManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Manager dataset page.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.Manager"
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/managers/{etag}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Locate the manager address link.",
        "operationId": "Managers_LocateManager",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique manager link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Manager"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Update the contact's manager address link details",
        "operationId": "Managers_UpdateManager",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the manager link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the manager link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "user": {
                  "description": "Responsible User.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              },
              "example": {
                "primary": true,
                "user": {
                  "id": "357",
                  "name": "Bruce Wayne"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Remove the contact's manager address link",
        "operationId": "Managers_DeleteManager",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Manager"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "summary": "Update the contact's manager address link details",
        "operationId": "Managers_UpdateManager2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the manager link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the manager link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "user": {
                  "description": "Responsible User.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              },
              "example": {
                "primary": true,
                "user": {
                  "id": "357",
                  "name": "Bruce Wayne"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/phones": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Search phone number(s)",
        "operationId": "Phones_ListPhones",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: phone number.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary phone  only.",
            "name": "primary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Verified phone only.",
            "name": "verified",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object unique ID.",
            "name": "type.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object well-known type.",
            "name": "type.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object display name.",
            "name": "type.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Reset the Contact's phone numbers to fit given data set.",
        "operationId": "Phones_ResetPhones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of phone number(s) to be linked with the contact.\nPhone number(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
              },
              "example": [
                {
                  "etag": "1679792219687",
                  "number": "+38 (099) 672-23-54",
                  "primary": true,
                  "type": {
                    "name": "personal"
                  },
                  "verified": true
                },
                {
                  "number": "+1 482 555-36558",
                  "type": {
                    "name": "business"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phones"
        ],
        "summary": "Associate phone number(s) with the Contact",
        "operationId": "Phones_MergePhones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of phone number(s) to be linked with the Contact.\nPhone number(s) that conflicts with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
              },
              "example": [
                {
                  "number": "+38 (099) 672-23-54",
                  "primary": true,
                  "type": {
                    "name": "mobile"
                  },
                  "verified": false
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Remove the Contact's phone number association(s)",
        "operationId": "Phones_DeletePhones",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of linked ID(s) to be removed.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/phones/{etag}": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Locate the Contact's phone number association.",
        "operationId": "Phones_LocatePhone",
        "parameters": [
          {
            "type": "string",
            "description": "Reference Contact unique ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result record.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneNumber"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Update the Contact's phone number association details",
        "operationId": "Phones_UpdatePhone",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID to be associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the phone number details.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the phone number details.",
              "required": [
                "number"
              ],
              "properties": {
                "number": {
                  "description": "The phone number.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Remove the Contact's phone number",
        "operationId": "Phones_DeletePhone",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Unique link ID to be removed.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneNumber"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Phones"
        ],
        "summary": "Update the Contact's phone number association details",
        "operationId": "Phones_UpdatePhone2",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID to be associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the phone number details.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the phone number details.",
              "required": [
                "number"
              ],
              "properties": {
                "number": {
                  "description": "The phone number.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timeline": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "Timeline_GetTimeline",
        "parameters": [
          {
            "type": "string",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "chat",
                "call",
                "email"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.GetTimelineResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timeline/counter": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "Timeline_GetTimelineCounter",
        "parameters": [
          {
            "type": "string",
            "name": "contact_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.GetTimelineCounterResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timezones": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "List of the Contact's timezone(s).",
        "operationId": "Timezones_ListTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: location name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary timezone only.",
            "name": "primary",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timezones"
        ],
        "summary": "Resets all timezones of the contact according to the input dataset.",
        "operationId": "Timezones_ResetTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of timezone(s) to be linked with the contact.\nTimezone(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputTimezone"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timezones"
        ],
        "summary": "Associate more timezone(s) with the Contact.",
        "operationId": "Timezones_MergeTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Array of the unique User(s) to associate with the Contact.\nAny duplicate of an already linked user{id} will result in an error.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputTimezone"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timezones"
        ],
        "summary": "Remove the Contact's timezone(s).",
        "operationId": "Timezones_DeleteTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timezones/{etag}": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "Locate the Contact's timezone association.",
        "operationId": "Timezones_LocateTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique timezone link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Timezone"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timezones"
        ],
        "summary": "Update the Contact's timezone details.",
        "operationId": "Timezones_UpdateTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the timezone link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the timezone link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "timezone": {
                  "description": "Timezone dictionary reference value associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timezones"
        ],
        "summary": "Remove the Contact's timezone association.",
        "operationId": "Timezones_DeleteTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Timezone"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Timezones"
        ],
        "summary": "Update the Contact's timezone details.",
        "operationId": "Timezones_UpdateTimezone2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the timezone link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the timezone link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "timezone": {
                  "description": "Timezone dictionary reference value associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "List variables of the contact",
        "operationId": "Variables_ListVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size of result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: variable key;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Reset all variables of the contact",
        "operationId": "Variables_ResetVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed object of unique variables to associate with a Contact.\nEach individual key of an object represents a separate variable.\nVariable{key} already linked with the Contact but not listed here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputVariable"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Update or append variables to the contact",
        "operationId": "Variables_MergeVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed object of unique variables to associate with a Contact.\nEach individual key of an object represents a separate variable.\nVariable{key} already linked with the Contact and listed here will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputVariable"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Remove variable(s) of the contact",
        "operationId": "Variables_DeleteVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "pattern": "^.+$",
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/variables/{etag}": {
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Update contact variable",
        "operationId": "Variables_UpdateVariable",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Variable update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Variable update.",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "NEW Key.",
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "value": {
                  "description": "NEW Value."
                }
              },
              "example": {
                "key": "var_rename",
                "value": [
                  "string_item",
                  [
                    3,
                    7
                  ],
                  false,
                  null
                ]
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Remove the contact's variable by etag",
        "operationId": "Variables_DeleteVariable",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Variable"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Variables"
        ],
        "summary": "Update contact variable",
        "operationId": "Variables_UpdateVariable2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Variable update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Variable update.",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "NEW Key.",
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "value": {
                  "description": "NEW Value."
                }
              },
              "example": {
                "key": "var_rename",
                "value": [
                  "string_item",
                  [
                    3,
                    7
                  ],
                  false,
                  null
                ]
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      }
    },
    "/contacts/{etag}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Locate Contact source",
        "operationId": "Contacts_LocateContact",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact source IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "enum": [
              "READ",
              "WRITE",
              "DELETE"
            ],
            "type": "string",
            "default": "READ",
            "description": "The requirement of a special access mode to the Source.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
            "name": "mode",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Remove Contact source",
        "operationId": "Contacts_DeleteContact",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of a resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "NEW Update of the Contact source",
        "operationId": "Contacts_UpdateContact",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Contact source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Contact source changes",
              "properties": {
                "about": {
                  "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
                  "type": "string"
                },
                "comments": {
                  "description": "Publish NEW comment(s) for this Contact.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputComment"
                  }
                },
                "custom": {
                  "description": "Custom extension data fields.",
                  "type": "object"
                },
                "emails": {
                  "description": "The Contact's email address(es).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
                  }
                },
                "groups": {
                  "description": "The Contact's associated group(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputContactGroup"
                  }
                },
                "imclients": {
                  "description": "The contact's [I]nstant[M]essaging clients.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputIMClient"
                  }
                },
                "labels": {
                  "description": "The Contact's associated label(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputLabel"
                  }
                },
                "languages": {
                  "description": "A Contact's locale preference(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputLanguage"
                  }
                },
                "managers": {
                  "description": "The Contact's internal manager(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputManager"
                  }
                },
                "name": {
                  "title": "The Contact's name. Singleton",
                  "$ref": "#/definitions/webitel.contacts.InputName"
                },
                "phones": {
                  "description": "The Contact's phone numbers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
                  }
                },
                "photos": {
                  "description": "Output only. The Contact's photo(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputPhoto"
                  },
                  "readOnly": true
                },
                "timezones": {
                  "description": "The Contact's timezone preference(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputTimezone"
                  }
                },
                "variables": {
                  "description": "Arbitrary client data that is populated by clients.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputVariable"
                  }
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}",
        "operationId": "Customers_GetCustomer",
        "parameters": [
          {
            "type": "string",
            "description": "Available Filters\n\nshow by customer id; serial number (uuid)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "show if valid only!",
            "name": "valid",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "domain.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "domain.name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Request Controls\n\nserial,",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.GetCustomerResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_UpdateCustomer",
        "parameters": [
          {
            "type": "string",
            "description": "[optional] e.g.: Example Org.",
            "name": "organization",
            "in": "query"
          },
          {
            "type": "string",
            "format": "byte",
            "description": "[optional] logo source image",
            "name": "logo_picture",
            "in": "query"
          },
          {
            "type": "string",
            "format": "byte",
            "description": "[optional] raw bytes protobuf::base64.RawStdEncoding != certificate::base64.StdEncoding",
            "name": "certificate",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "revoke",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateCustomerResponse"
            }
          }
        }
      }
    },
    "/customer/{customer_id}/license": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_LicenseUsage",
        "parameters": [
          {
            "type": "string",
            "name": "customer_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Search Options ----- //\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "set of output fields",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "domain.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "domain.name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by serial number(s)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by product name(s)",
            "name": "product",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "view: all|valid|grantable\n\nshow: available to be granted",
            "name": "valid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LicenseUsageResponse"
            }
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "rpc GetCertificate(CertificateUsageRequest) returns (CertificateUsageResponse) {}",
        "operationId": "Customers_GetCustomer2",
        "parameters": [
          {
            "type": "string",
            "description": "Available Filters\n\nshow by customer id; serial number (uuid)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "show if valid only!",
            "name": "valid",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "domain.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "domain.name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Request Controls\n\nserial,",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.GetCustomerResponse"
            }
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_SearchDevice",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Search Basic Filters ---------------------------\n\nselection: by unique identifier",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "term-of-search: lookup[name,account,hotdesk,brand,model,mac,ip]",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "case-ignore substring match: ILIKE '*' - any; '?' - one",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!",
            "name": "access",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- Device-Specific Filters ----------------\n\nsubstring like '%name%'",
            "name": "account",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: has hotdesk (=pattern); is hotdesk (=*)",
            "name": "hotdesk",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: by MAC address",
            "name": "mac",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: by IP address",
            "name": "ip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchDeviceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_CreateDevice",
        "parameters": [
          {
            "description": "string password = 2;",
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.CreateDeviceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_DeleteDevice2",
        "parameters": [
          {
            "description": "bulk",
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "permanent",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteDeviceResponse"
            }
          }
        }
      }
    },
    "/devices/{device.id}": {
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_UpdateDevice",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "object id",
            "name": "device.id",
            "in": "path",
            "required": true
          },
          {
            "description": "Device profile",
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Device profile",
              "properties": {
                "account": {
                  "description": "username",
                  "type": "string",
                  "title": "credentials"
                },
                "brand": {
                  "description": "vendor brand name",
                  "type": "string",
                  "title": "provision"
                },
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "created_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "deleted_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "hotdesk": {
                  "description": "act as a hotdesk",
                  "type": "boolean",
                  "title": "Hotdesk: this workstation aliases"
                },
                "hotdesks": {
                  "type": "array",
                  "title": "associated aliases",
                  "items": {
                    "type": "string"
                  }
                },
                "ip": {
                  "type": "string"
                },
                "logged_in": {
                  "type": "string",
                  "format": "int64",
                  "title": "caller profile\n webitel.adt.caller caller = 4;"
                },
                "mac": {
                  "type": "string",
                  "title": "static"
                },
                "model": {
                  "type": "string"
                },
                "name": {
                  "description": "display name",
                  "type": "string",
                  "title": "kind of\nDeviceType type = 19;"
                },
                "password": {
                  "type": "string",
                  "title": "password"
                },
                "provision": {
                  "type": "object",
                  "title": "provision extra data",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "reged": {
                  "type": "boolean",
                  "title": "TODO: something like PresenceStatus instead of Registration\n repeated Registration contacts = 16;"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "updated_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "user": {
                  "title": "[optional] The user that 'owns' the device;",
                  "$ref": "#/definitions/api.UserId"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "PATCH: partial update",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateDeviceResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_UpdateDevice2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "object id",
            "name": "device.id",
            "in": "path",
            "required": true
          },
          {
            "description": "Device profile",
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Device profile",
              "properties": {
                "account": {
                  "description": "username",
                  "type": "string",
                  "title": "credentials"
                },
                "brand": {
                  "description": "vendor brand name",
                  "type": "string",
                  "title": "provision"
                },
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "created_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "deleted_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "hotdesk": {
                  "description": "act as a hotdesk",
                  "type": "boolean",
                  "title": "Hotdesk: this workstation aliases"
                },
                "hotdesks": {
                  "type": "array",
                  "title": "associated aliases",
                  "items": {
                    "type": "string"
                  }
                },
                "ip": {
                  "type": "string"
                },
                "logged_in": {
                  "type": "string",
                  "format": "int64",
                  "title": "caller profile\n webitel.adt.caller caller = 4;"
                },
                "mac": {
                  "type": "string",
                  "title": "static"
                },
                "model": {
                  "type": "string"
                },
                "name": {
                  "description": "display name",
                  "type": "string",
                  "title": "kind of\nDeviceType type = 19;"
                },
                "password": {
                  "type": "string",
                  "title": "password"
                },
                "provision": {
                  "type": "object",
                  "title": "provision extra data",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "reged": {
                  "type": "boolean",
                  "title": "TODO: something like PresenceStatus instead of Registration\n repeated Registration contacts = 16;"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "updated_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "user": {
                  "title": "[optional] The user that 'owns' the device;",
                  "$ref": "#/definitions/api.UserId"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "PATCH: partial update",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateDeviceResponse"
            }
          }
        }
      }
    },
    "/devices/{device.id}/registered": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListRegistrations",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "device.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "device.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ListRegistrationsResponse"
            }
          }
        }
      }
    },
    "/devices/{device.id}/users/audit": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "----- Details (1:M) ----------------------------------------------",
        "operationId": "Devices_SearchDeviceAudit",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "device.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "device.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter: timing range (optional)\n\nunix milliseconds",
            "name": "time_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "unix milliseconds",
            "name": "time_till",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Search Options",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeviceAuditResponse"
            }
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ReadDevice",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "output selection",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadDeviceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_DeleteDevice",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "permanent",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "bulk",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteDeviceResponse"
            }
          }
        }
      }
    },
    "/dictionaries/{repo}": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Lookup a dictionary dataset.",
        "operationId": "Dictionaries_SearchData",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`]",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of result records (per page).\nDefault: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result set of records.\nDefault: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[`record.id`]",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        }
      },
      "post": {
        "description": "(Record) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Create a dictionary record.",
        "operationId": "Dictionaries_CreateData",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`]",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "description": "Record data.",
            "name": "record",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "example": {
                "capital": {
                  "id": 44,
                  "name": "Київ"
                },
                "code": 38,
                "name": "Україна"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Delete a dictionary records.",
        "operationId": "Dictionaries_DeleteData",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`]",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result dataset.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[`record.id`]",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        }
      }
    },
    "/dictionaries/{repo}/csv": {
      "post": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Import dataset from CSV file.",
        "operationId": "Dictionaries_ImportCSV",
        "parameters": [
          {
            "type": "string",
            "description": "`types.repo`",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte",
                  "title": "CSV data"
                },
                "fields": {
                  "type": "object",
                  "title": "map \u003c field, column \u003e index",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "line_begin": {
                  "type": "integer",
                  "format": "int64"
                },
                "line_end": {
                  "type": "integer",
                  "format": "int64"
                },
                "on_data_error": {
                  "$ref": "#/definitions/webitel.proto.data.ImportCSVRequest.action"
                },
                "on_empty_line": {
                  "$ref": "#/definitions/webitel.proto.data.ImportCSVRequest.action"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        }
      }
    },
    "/dictionaries/{repo}/{id}": {
      "get": {
        "description": "(Record) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Locate a dictionary record.",
        "operationId": "Dictionaries_LocateData",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`]",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "[`record.id`]",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "description": "(Record) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Update a dictionary record.",
        "operationId": "Dictionaries_UpdateData2",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`] data source",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "[`record.id`] for update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Record data fields changes.",
            "name": "record",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Delete a dictionary records.",
        "operationId": "Dictionaries_DeleteData2",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`]",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "[`record.id`]",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result dataset.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Dataset"
            }
          }
        }
      },
      "patch": {
        "description": "(Record) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Update a dictionary record.",
        "operationId": "Dictionaries_UpdateData",
        "parameters": [
          {
            "type": "string",
            "description": "[`types.repo`] data source",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "[`record.id`] for update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Record data fields changes.",
            "name": "record",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/domain": {
      "get": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_ReadDomain",
        "parameters": [
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "dc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadDomainResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_DeleteDomain",
        "parameters": [
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "dc",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteDomainResponse"
            }
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_SearchDomains",
        "parameters": [
          {
            "type": "string",
            "description": "like",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attrs",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchDomainsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_CreateDomain",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.CreateDomainRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.CreateDomainResponse"
            }
          }
        }
      }
    },
    "/domains/{dc}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_ReadDomain2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadDomainResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_DeleteDomain2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "dc",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteDomainResponse"
            }
          }
        }
      }
    },
    "/domains/{domain.dc}": {
      "put": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_UpdateDomain",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "component",
            "name": "domain.dc",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Domains.UpdateDomainBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateDomainResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Domains"
        ],
        "operationId": "Domains_UpdateDomain2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "component",
            "name": "domain.dc",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Domains.UpdateDomainBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateDomainResponse"
            }
          }
        }
      }
    },
    "/email/profile": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Search EmailProfile",
        "operationId": "SearchEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListEmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Create EmailProfile",
        "operationId": "CreateEmailProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateEmailProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/email/profile/{id}": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "EmailProfile item",
        "operationId": "ReadEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Update EmailProfile",
        "operationId": "UpdateEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.EmailProfileService.UpdateEmailProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Remove EmailProfile",
        "operationId": "DeleteEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "PatchEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.EmailProfileService.PatchEmailProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.EmailProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/email/profile/{id}/login": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "LoginEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.LoginEmailProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/email/profile/{id}/logout": {
      "patch": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "LogoutEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.LogoutEmailProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/email/profile/{id}/test": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "EmailProfile check login",
        "operationId": "TestEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TestEmailProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/feedback": {
      "get": {
        "tags": [
          "FeedbackService"
        ],
        "operationId": "GetFeedback",
        "parameters": [
          {
            "type": "string",
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Feedback"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "FeedbackService"
        ],
        "operationId": "CreateFeedback",
        "parameters": [
          {
            "type": "string",
            "name": "key",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "payload[string]",
            "in": "query"
          },
          {
            "type": "number",
            "format": "float",
            "name": "rating",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Feedback"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/hook": {
      "get": {
        "tags": [
          "WebHookService"
        ],
        "summary": "List of WebHook",
        "operationId": "SearchWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListWebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Create WebHook",
        "operationId": "CreateWebHook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateWebHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.WebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/hook/{id}": {
      "get": {
        "tags": [
          "WebHookService"
        ],
        "summary": "WebHook item",
        "operationId": "ReadWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.WebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Update WebHook",
        "operationId": "UpdateWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.WebHookService.UpdateWebHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.WebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Remove WebHook",
        "operationId": "DeleteWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.WebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Patch WebHook",
        "operationId": "PatchWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.WebHookService.PatchWebHookBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.WebHook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/ldap": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "Search for LDAP directories ...",
        "operationId": "LDAP_SearchLDAPCatalog",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Search Basic Filters ---------------------------\n\nselection: by unique identifier",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "term-of-search: lookup[name]",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "case-ignore substring match: ILIKE '*' - any; '?' - one",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!",
            "name": "access",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchLDAPResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LDAP"
        ],
        "summary": "Create LDAP profile",
        "operationId": "LDAP_CreateLDAPCatalog",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LDAP"
        ],
        "summary": "Delete LDAP profile(s) ...",
        "operationId": "LDAP_DeleteLDAPCatalog2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.DeleteLDAPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      }
    },
    "/ldap/search": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "LDAPSearch performs LDAP Search operation ...",
        "operationId": "LDAP_LDAPSearch4",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "----- connection -----\nOptional. ID of the preconfigured LDAP catalog",
            "name": "catalog_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Optional. URL to establish connection to LDAP catalog\n\nURL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
            "name": "url",
            "in": "query"
          },
          {
            "type": "string",
            "format": "byte",
            "description": "TODO: (!)\n\nbase64",
            "name": "tls.PEM",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- BIND: Authorization -----\n\nauthorization method e.g.: SIMPLE, SAML, NTLM, etc.",
            "name": "bind",
            "in": "query"
          },
          {
            "type": "string",
            "description": "bind_dn",
            "name": "username",
            "in": "query"
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- SearchRequest -----\nbaseObject [D]istinguished[N]ame",
            "name": "baseObject",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "baseObject              (0),\nsingleLevel             (1),\nwholeSubtree            (2)",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "neverDerefAliases       (0),\nderefInSearching        (1),\nderefFindingBaseObj     (2),\nderefAlways             (3)",
            "name": "derefAliases",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "INTEGER (0 ..  maxInt),",
            "name": "sizeLimit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "INTEGER (0 ..  maxInt),",
            "name": "timeLimit",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "BOOLEAN,",
            "name": "typesOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter,",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "AttributeSelection",
            "name": "attributes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPSearchResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LDAP"
        ],
        "summary": "LDAPSearch performs LDAP Search operation ...",
        "operationId": "LDAP_LDAPSearch3",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAPSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPSearchResponse"
            }
          }
        }
      }
    },
    "/ldap/{catalog.id}": {
      "put": {
        "tags": [
          "LDAP"
        ],
        "summary": "Update LDAP profile details",
        "operationId": "LDAP_UpdateLDAPCatalog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identity\nint64 dc = 1;",
            "name": "catalog.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.UpdateLDAPCatalogBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "LDAP"
        ],
        "summary": "Update LDAP profile details",
        "operationId": "LDAP_UpdateLDAPCatalog2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identity\nint64 dc = 1;",
            "name": "catalog.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.UpdateLDAPCatalogBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      }
    },
    "/ldap/{catalog.id}/templates": {
      "post": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_CreateLDAPTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "catalog.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.CreateLDAPTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplate"
            }
          }
        }
      }
    },
    "/ldap/{catalog_id}/rsync": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "(ResyncLDAPResponse) {",
        "operationId": "LDAP_SearchLDAProcess",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search process by unique .id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "OPTIONAL. Filter(s) SET",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "objclass",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "WITH .errs",
            "name": "failed",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "created|updated",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "deleted",
            "name": "disabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAProcessResponse"
            }
          }
        }
      },
      "post": {
        "description": "(ResyncLDAPResponse) {",
        "tags": [
          "LDAP"
        ],
        "summary": "Resync LDAP directory catalog changes ...",
        "operationId": "LDAP_ResyncLDAPCatalog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "LDAP Catalog unique IDentifier to sync with\n\ncatalog_id",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.ResyncLDAPCatalogBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAProcess"
            }
          }
        }
      }
    },
    "/ldap/{catalog_id}/rsync/{id}": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "(ResyncLDAPResponse) {",
        "operationId": "LDAP_LocateLDAProcess",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search process by unique .id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "OPTIONAL. Filter(s) SET",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "template",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "objclass",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "WITH .errs",
            "name": "failed",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "created|updated",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "deleted",
            "name": "disabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAProcess"
            }
          }
        }
      }
    },
    "/ldap/{catalog_id}/search": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "LDAPSearch performs LDAP Search operation ...",
        "operationId": "LDAP_LDAPSearch2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "----- connection -----\nOptional. ID of the preconfigured LDAP catalog",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Optional. URL to establish connection to LDAP catalog\n\nURL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
            "name": "url",
            "in": "query"
          },
          {
            "type": "string",
            "format": "byte",
            "description": "TODO: (!)\n\nbase64",
            "name": "tls.PEM",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- BIND: Authorization -----\n\nauthorization method e.g.: SIMPLE, SAML, NTLM, etc.",
            "name": "bind",
            "in": "query"
          },
          {
            "type": "string",
            "description": "bind_dn",
            "name": "username",
            "in": "query"
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- SearchRequest -----\nbaseObject [D]istinguished[N]ame",
            "name": "baseObject",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "baseObject              (0),\nsingleLevel             (1),\nwholeSubtree            (2)",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "neverDerefAliases       (0),\nderefInSearching        (1),\nderefFindingBaseObj     (2),\nderefAlways             (3)",
            "name": "derefAliases",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "INTEGER (0 ..  maxInt),",
            "name": "sizeLimit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "INTEGER (0 ..  maxInt),",
            "name": "timeLimit",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "BOOLEAN,",
            "name": "typesOnly",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter,",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "AttributeSelection",
            "name": "attributes",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPSearchResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "LDAP"
        ],
        "summary": "LDAPSearch performs LDAP Search operation ...",
        "operationId": "LDAP_LDAPSearch",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "----- connection -----\nOptional. ID of the preconfigured LDAP catalog",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.LDAPSearchBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPSearchResponse"
            }
          }
        }
      }
    },
    "/ldap/{catalog_id}/templates": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_SearchLDAPTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search templates by .id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "OPTIONAL. Filter(s) SET",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "base_dn",
            "in": "query"
          },
          {
            "type": "string",
            "name": "objclass",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "disabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplateResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_DeleteLDAPTemplate2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.DeleteLDAPTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplateResponse"
            }
          }
        }
      }
    },
    "/ldap/{catalog_id}/templates/{id}": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_LocateLDAPTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search templates by .id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "OPTIONAL. Filter(s) SET",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "base_dn",
            "in": "query"
          },
          {
            "type": "string",
            "name": "objclass",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "disabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplate"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_DeleteLDAPTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "REQUIRED. Parent LDAP catalog IDentifier",
            "name": "catalog_id",
            "in": "path",
            "required": true
          },
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search templates by .id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.DeleteLDAPTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplateResponse"
            }
          }
        }
      }
    },
    "/ldap/{id}": {
      "get": {
        "tags": [
          "LDAP"
        ],
        "summary": "Read LDAP catalog profile by .id",
        "operationId": "LDAP_LocateLDAPCatalog",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "----- Search Basic Filters ---------------------------\n\nselection: by unique identifier",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "term-of-search: lookup[name]",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "case-ignore substring match: ILIKE '*' - any; '?' - one",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!",
            "name": "access",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LDAP"
        ],
        "summary": "Delete LDAP profile(s) ...",
        "operationId": "LDAP_DeleteLDAPCatalog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "catalog id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "WITH objects bound to ?",
            "name": "related_objects",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPCatalog"
            }
          }
        }
      }
    },
    "/ldap/{template.catalog.id}/templates/{template.id}": {
      "put": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_UpdateLDAPTemplate2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "template.catalog.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "ID unique",
            "name": "template.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.UpdateLDAPTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplate"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "LDAP"
        ],
        "operationId": "LDAP_UpdateLDAPTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "template.catalog.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "ID unique",
            "name": "template.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LDAP.UpdateLDAPTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LDAPTemplate"
            }
          }
        }
      }
    },
    "/license": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_LicenseUsage2",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Search Options ----- //\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "set of output fields",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "domain.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "domain.name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "customer_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by serial number(s)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by product name(s)",
            "name": "product",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "view: all|valid|grantable\n\nshow: available to be granted",
            "name": "valid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LicenseUsageResponse"
            }
          }
        }
      }
    },
    "/logger/available_objects": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_ReadSystemObjects",
        "parameters": [
          {
            "type": "boolean",
            "name": "include_existing",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerSystemObjects"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_SearchConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "cc_queue",
                "schema",
                "users",
                "devices",
                "calendars",
                "cc_list",
                "cc_team",
                "cc_agent",
                "cc_resource",
                "cc_resource_group",
                "chat_bots",
                "cases",
                "contacts",
                "cc_list_number",
                "case_comments",
                "record_file"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "NOT USED.",
            "name": "object",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfigs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_CreateConfig",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerCreateConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config/{config_id}": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_ReadConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_UpdateConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerUpdateConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_DeleteConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_PatchConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerPatchConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config/{config_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByConfigId",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/user/{user_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByUserId",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "REQUIRED filter",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "SPECIFIC filter.",
            "name": "object_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "GENERAL filters.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/{object}/record/{record_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByRecordId",
        "parameters": [
          {
            "enum": [
              "cc_queue",
              "schema",
              "users",
              "devices",
              "calendars",
              "cc_list",
              "cc_team",
              "cc_agent",
              "cc_resource",
              "cc_resource_group",
              "chat_bots",
              "cases",
              "contacts",
              "cc_list_number",
              "case_comments",
              "record_file"
            ],
            "type": "string",
            "description": "SPECIFIC filter",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "REQUIRED filter",
            "name": "record_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "GENERAL filters.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/oauth/apps": {
      "get": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_SearchOAuthService",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Search Basic Filters ---------------------------\n\nselection: by unique identifier",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "term-of-search: lookup[name]",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "case-ignore substring match: ILIKE '*' - any; '?' - one",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!",
            "name": "access",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "----- OAuthService-Specific Filters ----------------",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchOAuthServiceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_CreateOAuthService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OAuthService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.OAuthService"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_DeleteOAuthService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.DeleteOAuthServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteOAuthServiceResponse"
            }
          }
        }
      }
    },
    "/oauth/apps/{changes.id}": {
      "put": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_UpdateOAuthService",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "changes.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OAuth2Federation.UpdateOAuthServiceBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.OAuthService"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_UpdateOAuthService2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "changes.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OAuth2Federation.UpdateOAuthServiceBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.OAuthService"
            }
          }
        }
      }
    },
    "/oauth/apps/{id}": {
      "get": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_LocateOAuthService",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "description": "----- Search Basic Filters ---------------------------\n\nselection: by unique identifier",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Select Options -------------------------\n\ndefault: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "attributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "term-of-search: lookup[name]",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "case-ignore substring match: ILIKE '*' - any; '?' - one",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[M]andatory[A]ccess[C]ontrol: with access mode (action) granted!",
            "name": "access",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "----- OAuthService-Specific Filters ----------------",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.OAuthService"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OAuth2Federation"
        ],
        "operationId": "OAuth2Federation_DeleteOAuthService2",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OAuth2Federation.DeleteOAuthServiceBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteOAuthServiceResponse"
            }
          }
        }
      }
    },
    "/objclass": {
      "get": {
        "tags": [
          "Classes"
        ],
        "operationId": "Classes_SearchClasses",
        "parameters": [
          {
            "type": "string",
            "description": "TO BE REMOVED // bound to session.domain.id",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[filter]: like '%class%'",
            "name": "class",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "int64 id = 3;  // [filter]: obj.id = id\ncontrols\n\noutput",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "sort: \"field\" asc; \"!field\" desc",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchClassesResponse"
            }
          }
        }
      }
    },
    "/objclass/{class.id}": {
      "put": {
        "tags": [
          "Classes"
        ],
        "operationId": "Classes_UpdateClass",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "(class::object).id",
            "name": "class.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Classes.UpdateClassBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateClassResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Classes"
        ],
        "operationId": "Classes_UpdateClass2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "(class::object).id",
            "name": "class.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Classes.UpdateClassBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateClassResponse"
            }
          }
        }
      }
    },
    "/objclass/{id}": {
      "get": {
        "tags": [
          "Classes"
        ],
        "operationId": "Classes_ReadClass",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "[filter]: obj.id = id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[filter]: like '%class%'",
            "name": "class",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadClassResponse"
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "GetPermissions list available from application",
        "operationId": "Permissions_GetPermissions",
        "parameters": [
          {
            "type": "string",
            "description": "TermOfSearch",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "= ANY(id)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "\u003c\u003e ANY(not)",
            "name": "not",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "controls\n\noutput",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "sort: \"field\" asc; \"!field\" desc",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchPermissionResponse"
            }
          }
        }
      }
    },
    "/presence": {
      "patch": {
        "description": "(UserPresence) {",
        "tags": [
          "Presence"
        ],
        "summary": "set(presence) (notify, error)",
        "operationId": "Presence_SetStatus2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.PresenceStatus"
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_LicenseUsage3",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Search Options ----- //\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "set of output fields",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "domain.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "domain.name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "customer_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by serial number(s)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "by product name(s)",
            "name": "product",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "view: all|valid|grantable\n\nshow: available to be granted",
            "name": "valid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LicenseUsageResponse"
            }
          }
        }
      }
    },
    "/products/{id}/users": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_LicenseUsers",
        "parameters": [
          {
            "type": "string",
            "description": "----- Search Filters ----- //\n\nREQUIRED Product ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "----- Search Options ----- //\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "set of output fields",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search (username)",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LicenseUsersResponse"
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "RegionService"
        ],
        "operationId": "SearchRegion",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "timezone_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListRegion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RegionService"
        ],
        "operationId": "CreateRegion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Region"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "RegionService"
        ],
        "operationId": "ReadRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Region"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RegionService"
        ],
        "operationId": "UpdateRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RegionService.UpdateRegionBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Region"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RegionService"
        ],
        "operationId": "DeleteRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Region"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RegionService"
        ],
        "operationId": "PatchRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RegionService.PatchRegionBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Region"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_SearchRoles",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Role-specific Filters ----------------- //\n\nfilter: .id = any(:ids...)",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: group name like",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search (name, description)",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "bool admin = 4;  // filter: where CURRENT user is 'ADMIN' of\ncontrols\n\noutput",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "sort: \"field\" asc; \"!field\" desc",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchRolesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_CreateRole",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.CreateRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.CreateRoleResponse"
            }
          }
        }
      }
    },
    "/roles/metadata": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_RoleMetadata",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Optional. Unique ID of metadata role owner",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Optional. Partial metadata document key name",
            "name": "key",
            "in": "query"
          },
          {
            "enum": [
              "NULL_VALUE"
            ],
            "type": "string",
            "default": "NULL_VALUE",
            "description": "Represents a null value.\n\n - NULL_VALUE: Null value.",
            "name": "merge.null_value",
            "in": "query"
          },
          {
            "type": "number",
            "format": "double",
            "description": "Represents a double value.",
            "name": "merge.number_value",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Represents a string value.",
            "name": "merge.string_value",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Represents a boolean value.",
            "name": "merge.bool_value",
            "in": "query"
          },
          {
            "type": "object",
            "description": "Represents a structured value.",
            "name": "merge.struct_value",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.RoleMetadataResponse"
            }
          }
        }
      }
    },
    "/roles/objects/{object}/records/{record.id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_SearchRecordAvailableRoles",
        "parameters": [
          {
            "enum": [
              "contacts",
              "cc_list",
              "cc_bucket",
              "calendars",
              "devices",
              "cc_agent",
              "cc_team",
              "cc_resource",
              "cc_resource_group",
              "cc_queue",
              "roles",
              "users",
              "cognitive_profile"
            ],
            "type": "string",
            "description": "bool admin = 4;  // filter: where CURRENT user is 'ADMIN' of\nREQUIRED !",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "record.id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Role-specific Filters ----------------- //\n\nfilter: .id = any(:ids...)",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: group name like",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Display Name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: term of search (name, description)",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "display name",
            "name": "record.name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "controls\n\noutput",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "sort: \"field\" asc; \"!field\" desc",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "page size",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchRolesResponse"
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_ReadRole",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "role.id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "select projection\n\nselect: output (fields,...)",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadRoleResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_DeleteRole",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "DELETE /roles/{id}",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "POST /roles/delete {\"ids\"}",
            "name": "ids",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "deleteOrMark 'deleted' ?",
            "name": "permanent",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteRoleResponse"
            }
          }
        }
      }
    },
    "/roles/{role.id}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_UpdateRole",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "oid",
            "name": "role.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Roles.UpdateRoleBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateRoleResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_UpdateRole2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "oid",
            "name": "role.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Roles.UpdateRoleBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateRoleResponse"
            }
          }
        }
      }
    },
    "/routing/outbound/calls": {
      "get": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "List of RoutingOutboundCall",
        "operationId": "SearchRoutingOutboundCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "pattern",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListRoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Create RoutingOutboundCall",
        "operationId": "CreateRoutingOutboundCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateRoutingOutboundCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/outbound/calls/{from_id}/to/{to_id}": {
      "patch": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Move RoutingOutboundCall",
        "operationId": "MovePositionRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "from_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "to_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.MovePositionRoutingOutboundCallResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/outbound/calls/{id}": {
      "get": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "RoutingOutboundCall item",
        "operationId": "ReadRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Update RoutingOutboundCall",
        "operationId": "UpdateRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Remove RoutingOutboundCall",
        "operationId": "DeleteRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Patch RoutingOutboundCall",
        "operationId": "PatchRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingOutboundCall"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/outbound/chat": {
      "get": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "SearchChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "CreateChatPlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateChatPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/outbound/chat/{id}": {
      "get": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "ReadChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "UpdateChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingChatPlanService.UpdateChatPlanBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "DeleteChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "PatchChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingChatPlanService.PatchChatPlanBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ChatPlan"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "List RoutingSchema",
        "operationId": "SearchRoutingSchema",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default",
                "voice",
                "chat",
                "processing",
                "service"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "editor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListRoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Create RoutingSchema",
        "operationId": "CreateRoutingSchema",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateRoutingSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema/tags": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "List RoutingSchemaTags",
        "operationId": "SearchRoutingSchemaTags",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default",
                "voice",
                "chat",
                "processing",
                "service"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListRoutingSchemaTags"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema/variables": {
      "get": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "SearchSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListSchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "CreateSchemaVariable",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateSchemaVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema/variables/{id}": {
      "get": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "ReadSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "UpdateSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariablesService.UpdateSchemaVariableBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "DeleteSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "PatchSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariablesService.PatchSchemaVariableBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SchemaVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema/{id}": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "RoutingSchema item",
        "operationId": "ReadRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Update RoutingSchema",
        "operationId": "UpdateRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchemaService.UpdateRoutingSchemaBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Remove RoutingSchema",
        "operationId": "DeleteRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Patch RoutingSchema",
        "operationId": "PatchRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchemaService.PatchRoutingSchemaBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/schema/{schema_id}/versions": {
      "get": {
        "tags": [
          "SchemaVersionService"
        ],
        "operationId": "SearchSchemaVersion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "schema_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SearchSchemaVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/variables": {
      "get": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "List of RoutingVariable",
        "operationId": "SearchRoutingVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListRoutingVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Create RoutingVariable",
        "operationId": "CreateRoutingVariable",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateRoutingVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/routing/variables/{id}": {
      "get": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "RoutingVariable item",
        "operationId": "ReadRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Update RoutingVariable",
        "operationId": "UpdateRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.RoutingVariableService.UpdateRoutingVariableBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Remove RoutingVariable",
        "operationId": "DeleteRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.RoutingVariable"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "FTSService"
        ],
        "operationId": "Search",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "object_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ftsSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "SearchSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "empty_system_settings_name",
                "enable_omnichannel",
                "member_chunk_size",
                "amd_cancel_not_human",
                "scheme_version_limit",
                "enable_2fa",
                "export_settings",
                "search_number_length",
                "chat_ai_connection",
                "password_reg_exp",
                "password_validation_text",
                "autolink_call_to_contact",
                "period_to_playback_records",
                "is_fulltext_search_enabled",
                "wbt_hide_contact",
                "show_full_contact",
                "call_end_sound_notification",
                "call_end_push_notification",
                "chat_end_sound_notification",
                "chat_end_push_notification",
                "task_end_sound_notification",
                "task_end_push_notification",
                "push_notification_timeout",
                "labels_to_limit_contacts",
                "autolink_mail_to_contact",
                "new_message_sound_notification",
                "new_chat_sound_notification",
                "screenshot_interval",
                "password_expiry_days",
                "password_min_length",
                "password_min_categories"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter by setting names",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListSystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "CreateSystemSetting",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateSystemSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/settings/available": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "SearchAvailableSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListAvailableSystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/settings/{id}": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "ReadSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "UpdateSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SystemSettingService.UpdateSystemSettingBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "DeleteSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "PatchSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.SystemSettingService.PatchSystemSettingBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.SystemSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signup new domain with superior access token",
        "operationId": "Auth_Signup",
        "parameters": [
          {
            "type": "string",
            "description": "domain name",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "username",
            "name": "username",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user password",
            "name": "password",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "scope request control",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "format": "byte",
            "description": "license/certificate",
            "name": "certificate",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "OPTIONAL. Mobile device /login request ?",
            "name": "mobile",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LoginResponse"
            }
          }
        }
      }
    },
    "/slas/{sla_id}/sla_condition": {
      "post": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Create a new SLACondition",
        "operationId": "CreateSLACondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLACondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/slas/{sla_id}/sla_condition/{id}": {
      "get": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Locate an SLACondition by ID",
        "operationId": "LocateSLACondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Unique identifier of the SLACondition",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Unique identifier of the SLACondition",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateSLAConditionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Update an existing SLACondition",
        "operationId": "UpdateSLACondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLACondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Delete an SLACondition",
        "operationId": "DeleteSLACondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Update an existing SLACondition",
        "operationId": "UpdateSLACondition2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputSLACondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLACondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/slas/{sla_id}/sla_conditions": {
      "get": {
        "tags": [
          "SLAConditions"
        ],
        "summary": "Retrieve a list of SLAConditions or search SLACondition conditions",
        "operationId": "ListSLAConditions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Filter by SLA Id",
            "name": "sla_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Filter by SLACondition Id.",
            "name": "sla_condition_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "filter by priority id",
            "name": "priority_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.SLAConditionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/spaces": {
      "get": {
        "description": "| Field       | Type \n| ----------- | ---- \n| **----------- READ-ONLY -----------** | \n| `id`        | int64 \n| `ver`       | int32 \n| `etag`      | string \n| **---------- OPERATIONAL ----------** | \n| `created_at` | int64(epoch:milli) \n| `created_by` | lookup(user) \n| `updated_at` | int64(epoch:milli) \n| `updated_by` | lookup(user) \n| **---------- ATTRIBUTES -----------** | \n| `name`      | name! \n| `home_page`   | string (home_page) \n| `state`       | bool \n| `has_children`| bool \n",
        "tags": [
          "Spaces"
        ],
        "operationId": "Spaces_ListSpaces",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Limit of result page records count.   _default(16); limit=(size\u003c=0?-1:size+1);_\n\n```javascript\nconst\n    default = 16\n  , maximum = 32\n;\n\n```",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\nUsed to query records within a set of `qin` fields, eg: name, etc...",
            "name": "q",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "type": "string",
              "default": "id"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `state`",
            "name": "sort",
            "in": "query"
          },
          {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Records with unique IDentifier(s).\nAccept: `id` -or- `etag`.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.SpaceList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Spaces"
        ],
        "summary": "Create NEW Space",
        "operationId": "Spaces_CreateSpace",
        "parameters": [
          {
            "description": "NEW Spaces source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.knowledgebase.InputSpace"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Space"
            }
          }
        }
      }
    },
    "/spaces/search": {
      "get": {
        "tags": [
          "KnowledgebaseSearch"
        ],
        "operationId": "KnowledgebaseSearch_SpacesArticlesSearch",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: location name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Active Article only.",
            "name": "state",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tags associated with the article.",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.CombinedList"
            }
          }
        }
      }
    },
    "/spaces/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List of the all Articles's Tag(s).",
        "operationId": "Tags_ListTags",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.TagsList"
            }
          }
        }
      }
    },
    "/spaces/{etag}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "Locate spaces source",
        "operationId": "Spaces_LocateSpace",
        "parameters": [
          {
            "type": "string",
            "description": "The Space source IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Space"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Spaces"
        ],
        "summary": "Remove Space source",
        "operationId": "Spaces_DeleteSpace",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of a resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Space"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Spaces"
        ],
        "summary": "NEW Update of the Space source",
        "operationId": "Spaces_UpdateSpace",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Space source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Space source changes",
              "properties": {
                "home_page": {
                  "description": "BIO. Short description about the space.\nOPTIONAL. Multi-lined text.",
                  "type": "string"
                },
                "name": {
                  "description": "Represents the name of the knowledge base space.",
                  "type": "string"
                },
                "state": {
                  "description": "The state of the space.",
                  "type": "boolean"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Space"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "List of the Space's Article(s).",
        "operationId": "Articles_ListArticles",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: location name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Record(s) with unique ID only.",
            "name": "article_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Active Article only.",
            "name": "state",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tags associated with the article.",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "operationId": "Articles_CreateArticle",
        "parameters": [
          {
            "type": "string",
            "description": "Link space ID.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the Article link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.InputArticle"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleList"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles/{article_id}/attachments": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "Articles_ArticlesAttachmentList",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record(s) with unique ID only.",
            "name": "article_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.AttachmentList"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles/{article_id}/childrens": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "List of the Space's Article(s).",
        "operationId": "Articles_ListArticles2",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record(s) with unique ID only.",
            "name": "article_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: location name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Active Article only.",
            "name": "state",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tags associated with the article.",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleList"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles/{article_id}/history": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "Articles_ArticleVersionsList",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record(s) with unique ID only.",
            "name": "article_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleVersionList"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles/{article_id}/history/{version_id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "operationId": "Articles_LocateArticleVersion",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Record(s) with unique ID only.",
            "name": "article_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The unique ID of version record",
            "name": "version_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleVersion"
            }
          }
        }
      }
    },
    "/spaces/{space_id}/articles/{etag}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Locate the space's Article association.",
        "operationId": "Articles_LocateArticle",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique Article link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Article"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Remove the space's Article association.",
        "operationId": "Articles_DeleteArticle",
        "parameters": [
          {
            "type": "string",
            "description": "Space ID associated with.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.Article"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "Update the space's Article details.",
        "operationId": "Articles_UpdateArticle",
        "parameters": [
          {
            "type": "string",
            "description": "Link space ID.",
            "name": "space_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the Article link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the Article link.",
              "properties": {
                "parent_article": {
                  "description": "The parent article ID.",
                  "type": "string",
                  "format": "int64"
                },
                "pinned": {
                  "description": "Indicates that the article is pinned on the top of list.",
                  "type": "boolean"
                },
                "space_id": {
                  "description": "[VALUE]: --------------------------------------\nSpace ID associated with.",
                  "type": "string",
                  "format": "int64"
                },
                "state": {
                  "description": "Indicates if article is active and actual.",
                  "type": "boolean"
                },
                "tags": {
                  "description": "Tags associated with the article.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "text": {
                  "description": "The text content of the article.",
                  "type": "string"
                },
                "title": {
                  "description": "The title of the article.",
                  "type": "string"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.knowledgebase.ArticleList"
            }
          }
        }
      }
    },
    "/srvinfo": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "Customers_ServerInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ServerInfoResponse"
            }
          }
        }
      }
    },
    "/statuses/{status_id}/status": {
      "get": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Retrieve a list of statuses or search status conditions",
        "operationId": "ListStatusConditions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Filter by Status Id.",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "Filter by unique IDs.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search query string for filtering by name. Supports:\n- Wildcards (*) for substring matching\n- Placeholder (?) for single character substitution\n- Exact match for full names",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusConditionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Create a new status condition",
        "operationId": "CreateStatusCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputCreateStatusCondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/statuses/{status_id}/status/{id}": {
      "get": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Locate a status condition by ID",
        "operationId": "LocateStatusCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the status to be located",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "ID of the status condition to be located",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.LocateStatusConditionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Update an existing status condition",
        "operationId": "UpdateStatusCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputStatusCondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Delete a status condition",
        "operationId": "DeleteStatusCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "StatusConditions"
        ],
        "summary": "Update an existing status condition",
        "operationId": "UpdateStatusCondition2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "status_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.cases.InputStatusCondition"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.cases.StatusCondition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/backend_profiles": {
      "get": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "List of BackendProfile",
        "operationId": "SearchBackendProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Create BackendProfile",
        "operationId": "CreateBackendProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CreateBackendProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.BackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/backend_profiles/{id}": {
      "get": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "BackendProfile item",
        "operationId": "ReadBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.BackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Update BackendProfile",
        "operationId": "UpdateBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.BackendProfileService.UpdateBackendProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.BackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Remove BackendProfile",
        "operationId": "DeleteBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.BackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Patch BackendProfile",
        "operationId": "PatchBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.BackendProfileService.PatchBackendProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.BackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/cognitive_profiles": {
      "get": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "SearchCognitiveProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "DefaultService",
                "STT",
                "TTS"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "service",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CreateCognitiveProfile",
        "parameters": [
          {
            "description": "Create cognitive profile request body for TTS and TTS",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CreateCognitiveProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/cognitive_profiles/{id}": {
      "get": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "ReadCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "UpdateCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfileService.UpdateCognitiveProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CognitiveProfileService"
        ],
        "summary": "Remove BackendProfile",
        "operationId": "DeleteCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "PatchCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfileService.PatchCognitiveProfileBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.CognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/cognitive_profiles/{id}/voice": {
      "get": {
        "tags": [
          "CognitiveProfileService"
        ],
        "summary": "Search Voices",
        "operationId": "SearchCognitiveProfileVoices",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListCognitiveProfileVoices"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/file": {
      "get": {
        "tags": [
          "FileService"
        ],
        "operationId": "SearchFiles",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "uploaded_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "uploaded_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "uploaded_by",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "reference_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "UnknownChannel",
                "ChatChannel",
                "MailChannel",
                "CallChannel",
                "LogChannel",
                "MediaChannel",
                "KnowledgebaseChannel",
                "CasesChannel",
                "ScreenshotChannel",
                "ScreenSharingChannel"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channel",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "retention_until.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "retention_until.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FileService"
        ],
        "operationId": "DeleteFiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.DeleteFilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.DeleteFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/file_policies": {
      "get": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "List of FilePolicy",
        "operationId": "SearchFilePolicies",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListFilePolicies"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "Create FilePolicy",
        "operationId": "CreateFilePolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CreateFilePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/file_policies/{from_id}/to/{to_id}": {
      "patch": {
        "tags": [
          "FilePoliciesService"
        ],
        "operationId": "MovePositionFilePolicy",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "from_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "to_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.FilePoliciesService.MovePositionFilePolicyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.MovePositionFilePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/file_policies/{id}": {
      "get": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "FilePolicy item",
        "operationId": "ReadFilePolicy",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "Update FilePolicy",
        "operationId": "UpdateFilePolicy",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.FilePoliciesService.UpdateFilePolicyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "Remove FilePolicy",
        "operationId": "DeleteFilePolicy",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FilePoliciesService"
        ],
        "summary": "Patch FilePolicy",
        "operationId": "PatchFilePolicy",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.FilePoliciesService.PatchFilePolicyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/file_policies/{id}/apply": {
      "patch": {
        "tags": [
          "FilePoliciesService"
        ],
        "operationId": "FilePolicyApply",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.FilePoliciesService.FilePolicyApplyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.FilePolicyApplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/import_templates": {
      "get": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "SearchImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "CreateImportTemplate",
        "parameters": [
          {
            "description": "Create import template for CSV",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.CreateImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/import_templates/{id}": {
      "get": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ReadImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "UpdateImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplateService.UpdateImportTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "DeleteImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "PatchImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplateService.PatchImportTemplateBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/media": {
      "get": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "Search MediaFile",
        "operationId": "SearchMediaFile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListMedia"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/media/{id}": {
      "get": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "MediaFile item",
        "operationId": "ReadMediaFile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.MediaFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "Remove MediaFile",
        "operationId": "DeleteMediaFile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.MediaFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/transcript_file": {
      "put": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "PutFileTranscript",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.PutFileTranscriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.PutFileTranscriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "CreateFileTranscript",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.StartFileTranscriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.StartFileTranscriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "DeleteFileTranscript",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.DeleteFileTranscriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.DeleteFileTranscriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/transcript_file/{id}/phrases": {
      "get": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "GetFileTranscriptPhrases",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListPhrases"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/users/{user_id}": {
      "get": {
        "tags": [
          "FileService"
        ],
        "operationId": "SearchScreenRecordings",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "uploaded_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "uploaded_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "reference_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "retention_until.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "retention_until.to",
            "in": "query"
          },
          {
            "enum": [
              "UnknownChannel",
              "ChatChannel",
              "MailChannel",
              "CallChannel",
              "LogChannel",
              "MediaChannel",
              "KnowledgebaseChannel",
              "CasesChannel",
              "ScreenshotChannel",
              "ScreenSharingChannel"
            ],
            "type": "string",
            "default": "UnknownChannel",
            "name": "channel",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.ListFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/storage/users/{user_id}/{id}": {
      "delete": {
        "tags": [
          "FileService"
        ],
        "operationId": "DeleteScreenRecordings",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage.FileService.DeleteScreenRecordingsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storage.DeleteFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/trigger": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "summary": "List of Trigger",
        "operationId": "SearchTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Create Trigger",
        "operationId": "CreateTrigger",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.CreateTriggerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/trigger/{id}": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Trigger item",
        "operationId": "ReadTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Update Trigger",
        "operationId": "UpdateTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TriggerService.UpdateTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Remove Trigger",
        "operationId": "DeleteTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "PatchTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TriggerService.PatchTriggerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/trigger/{trigger_id}/job": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "SearchTriggerJob",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "trigger_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "started_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "started_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "idle",
                "active",
                "done",
                "error"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListTriggerJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "CreateTriggerJob",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "trigger_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engine.TriggerService.CreateTriggerJobBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.TriggerJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "tags": [
          "Types"
        ],
        "summary": "Lookup data types registry.",
        "operationId": "Types_Search",
        "parameters": [
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.id`",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.name`",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.repo`",
            "name": "repo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.path`",
            "name": "path",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] [ system / custom ] types only",
            "name": "readonly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Extend[able] types only.",
            "name": "extendable",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] include extensions/* types.",
            "name": "extensions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Extend[ed] types only.",
            "name": "extended",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Administer access control only",
            "name": "administered",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of result records (per page).\nDefault: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result set of records.\nDefault: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      }
    },
    "/types/dictionaries": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Lookup dictionaries data types.",
        "operationId": "Dictionaries_SearchType",
        "parameters": [
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.id`",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.name`",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.repo`",
            "name": "repo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "`types.path`",
            "name": "path",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] [ system / custom ] types only",
            "name": "readonly",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Extend[able] types only.",
            "name": "extendable",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] include extensions/* types.",
            "name": "extensions",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Extend[ed] types only.",
            "name": "extended",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "[NOT] Administer access control only",
            "name": "administered",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of result records (per page).\nDefault: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result set of records.\nDefault: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      },
      "delete": {
        "description": "(DictionaryList) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Delete custom dictionaries.",
        "operationId": "Dictionaries_DeleteType",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to retrive into result dataset.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "`types.repo`\n\n// `record.pk`\n repeated string id = 3;",
            "name": "repo",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      }
    },
    "/types/dictionaries/{repo}": {
      "get": {
        "description": "(Dictionary) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Locate the dictionary type.",
        "operationId": "Dictionaries_LocateType",
        "parameters": [
          {
            "type": "string",
            "description": "`types.repo`",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      },
      "put": {
        "description": "(Dictionary) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Update custom dictionary.",
        "operationId": "Dictionaries_UpdateType",
        "parameters": [
          {
            "type": "string",
            "description": "[**repo**] name of the dataset type, e.g.: `countries`.",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "description": "The dictionary [**type**] changes.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputDictionary"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      },
      "post": {
        "description": "(Dictionary) {",
        "tags": [
          "Dictionaries"
        ],
        "summary": "Create custom dictionary.",
        "operationId": "Dictionaries_CreateType",
        "parameters": [
          {
            "type": "string",
            "description": "NEW [`types.repo`] repository name, e.g.: `countries`.",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW dictionary [type] definition.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputDictionary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      }
    },
    "/types/extensions": {
      "get": {
        "description": "(ExtensionList) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Search for type extensions.",
        "operationId": "Extensions_SearchType",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of result records (per page).\nDefault: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result set of records.\nDefault: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\ne.g.: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "extension.type.id",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      },
      "delete": {
        "description": "returns (ExtensionList) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Delete extension for types.",
        "operationId": "Extensions_DeleteType2",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "`type.repo`",
            "name": "repo",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      }
    },
    "/types/extensions/{repo}": {
      "get": {
        "description": "returns (Extension) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Type extension details.",
        "operationId": "Extensions_LocateType",
        "parameters": [
          {
            "type": "string",
            "description": "`type.repo`\n\nid",
            "name": "repo",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      },
      "put": {
        "description": "returns (Extension) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Update type extension.",
        "operationId": "Extensions_UpdateType",
        "parameters": [
          {
            "type": "string",
            "description": "`type.repo`",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputExtension"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      },
      "post": {
        "description": "returns (Extension) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Create type extension.",
        "operationId": "Extensions_CreateType",
        "parameters": [
          {
            "type": "string",
            "description": "SUPER `types.repo` to extend, e.g.: `contacts`.\nLookup: GET /types?extendable=true",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "description": "Extension type fields.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.InputExtension"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      },
      "delete": {
        "description": "returns (ExtensionList) {",
        "tags": [
          "Extensions"
        ],
        "summary": "Delete extension for types.",
        "operationId": "Extensions_DeleteType",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "`type.repo`",
            "name": "repo",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.StructList"
            }
          }
        }
      }
    },
    "/types/{path}": {
      "get": {
        "tags": [
          "Types"
        ],
        "summary": "Structured data type details.",
        "operationId": "Types_Locate",
        "parameters": [
          {
            "type": "string",
            "format": "path",
            "description": "`types.path`",
            "name": "path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.proto.data.Struct"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_ReadUser2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "partial output",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadUserResponse"
            }
          }
        }
      }
    },
    "/user/device/config/{type}": {
      "get": {
        "tags": [
          "UserHelperService"
        ],
        "operationId": "DefaultDeviceConfig",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.DefaultDeviceConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/user/settings/{key}": {
      "get": {
        "tags": [
          "UserSettings"
        ],
        "summary": "GET /user/settings/{key=*}",
        "operationId": "UserSettings_GetUserSettings",
        "parameters": [
          {
            "pattern": "[^/]+",
            "type": "string",
            "name": "key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserSetting"
            }
          }
        }
      },
      "put": {
        "description": "PUT /user/settings/{key=*}\nContent-Type: application/json; charset=utf-8\n\n${value=.body}",
        "tags": [
          "UserSettings"
        ],
        "summary": "Create -or- Update",
        "operationId": "UserSettings_SetUserSettings",
        "parameters": [
          {
            "pattern": "[^/]+",
            "type": "string",
            "name": "key",
            "in": "path",
            "required": true
          },
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserSetting"
            }
          }
        }
      }
    },
    "/user/widget/activity/today": {
      "get": {
        "tags": [
          "UserHelperService"
        ],
        "operationId": "ActivityWorkspaceWidget",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ActivityWorkspaceWidgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/user/{user_id}/websockets": {
      "get": {
        "tags": [
          "UserHelperService"
        ],
        "operationId": "OpenedWebSockets",
        "parameters": [
          {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "csv",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engine.ListOpenedWebSocket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        }
      }
    },
    "/userinfo": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User.",
        "operationId": "Auth_UserInfo2",
        "parameters": [
          {
            "type": "string",
            "description": "string id_token = 2;",
            "name": "access_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.Userinfo"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User.",
        "operationId": "Auth_UserInfo",
        "parameters": [
          {
            "type": "string",
            "description": "string id_token = 2;",
            "name": "access_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.Userinfo"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_SearchUsers",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "----- Base Filters ---------------------------\n\nfilter: .id = any({id}...)",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "filter: .id \u003c\u003e all({not_ids}...)",
            "name": "not_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "----- User-specific Filters ------------------\n\nfilter: (.name|.username|.extension|.status) ILIKE '{q}'",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: .name ILIKE '{name}'",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: .status ILIKE '{status}'",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: .username ILIKE '{username}'",
            "name": "username",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter: .extension LIKE '{extension}'",
            "name": "extension",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "----- View Modes -----------------------------\nNOTE: by default, search NOT 'deleted' objects ONLY\n\nfilter: include 'deleted' ALSO ! (inactive)",
            "name": "any",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter: .deleted_at NOTNULL (view: RECYCLE)",
            "name": "deleted",
            "in": "query"
          },
          {
            "type": "string",
            "name": "presence.status",
            "in": "query"
          },
          {
            "type": "string",
            "name": "presence.note",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "// navigation filter\nrepeated int64 roles = 7;\n----- Search Options -------------------------\n\nselect: output (fields,...)",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "select: order by (fields,...)",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "select: offset {page}",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "select: limit {size}",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchUsersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_CreateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.CreateUserResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_DeleteUsers2",
        "parameters": [
          {
            "description": "MANY /users .ids=[id,...]",
            "name": "selection",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              }
            }
          },
          {
            "type": "string",
            "format": "int64",
            "description": "ONE /users/{id}",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "permanent",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteUsersResponse"
            }
          }
        }
      }
    },
    "/users/search": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_SearchUsers2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.SearchUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.SearchUsersResponse"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_ReadUser",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "partial output",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ReadUserResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_DeleteUsers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "ONE /users/{id}",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "MANY /users .ids=[id,...]",
            "name": "selection",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "permanent",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.DeleteUsersResponse"
            }
          }
        }
      }
    },
    "/users/{id}/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_LogoutUser",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Users.LogoutUserBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.LogoutUserResponse"
            }
          }
        }
      }
    },
    "/users/{publish.id}/presence": {
      "patch": {
        "description": "(UserPresence) {",
        "tags": [
          "Presence"
        ],
        "summary": "set(presence) (notify, error)",
        "operationId": "Presence_SetStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "[required] user identity",
            "name": "publish.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.Presence.SetStatusBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.PresenceStatus"
            }
          }
        }
      }
    },
    "/users/{token.user.id}/tokens": {
      "post": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_AddUserAccessToken",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "token.user.id",
            "in": "path",
            "required": true
          },
          {
            "description": "processing\n------------\ntoken.user.id // [required] authorization\ntoken.usage   // [optional] short description",
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "processing\n------------\ntoken.user.id // [required] authorization\ntoken.usage   // [optional] short description",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "created_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "[optional] disabled at"
                },
                "deleted_by": {
                  "title": "[optional] disabled by",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "id": {
                  "type": "string",
                  "title": "tokenKey::token_key"
                },
                "token": {
                  "type": "string",
                  "title": "tokenString::access_token"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "updated_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "usage": {
                  "type": "string",
                  "title": "[optional] short usage description"
                },
                "user": {
                  "type": "object",
                  "title": "[optional] output depends on API endpoint",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "display name"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "boolean",
            "description": "ObjectId user = 1; // [required]\n string usage = 2;  // [optional] usage description\n bool enable = 3;",
            "name": "enable",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessToken"
            }
          }
        }
      }
    },
    "/users/{update.user.id}/tokens/{update.id}": {
      "put": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_UpdateUserAccessToken",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "update.user.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tokenKey::token_key",
            "name": "update.id",
            "in": "path",
            "required": true
          },
          {
            "description": "[required] identification + modifications(about)",
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "[required] identification + modifications(about)",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "created_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "[optional] disabled at"
                },
                "deleted_by": {
                  "title": "[optional] disabled by",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "token": {
                  "type": "string",
                  "title": "tokenString::access_token"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "updated_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "usage": {
                  "type": "string",
                  "title": "[optional] short usage description"
                },
                "user": {
                  "type": "object",
                  "title": "[optional] output depends on API endpoint",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "display name"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[optional] PATCH implementation",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enable",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessToken"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_UpdateUserAccessToken2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "update.user.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tokenKey::token_key",
            "name": "update.id",
            "in": "path",
            "required": true
          },
          {
            "description": "[required] identification + modifications(about)",
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "[required] identification + modifications(about)",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "created_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "[optional] disabled at"
                },
                "deleted_by": {
                  "title": "[optional] disabled by",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "token": {
                  "type": "string",
                  "title": "tokenString::access_token"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix::ms"
                },
                "updated_by": {
                  "$ref": "#/definitions/api.ObjectId"
                },
                "usage": {
                  "type": "string",
                  "title": "[optional] short usage description"
                },
                "user": {
                  "type": "object",
                  "title": "[optional] output depends on API endpoint",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "display name"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[optional] PATCH implementation",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enable",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessToken"
            }
          }
        }
      }
    },
    "/users/{user.id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UpdateUser",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "path",
            "required": true
          },
          {
            "description": "body: modifications/changes",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "body: modifications/changes",
              "properties": {
                "chat_name": {
                  "description": "The \"chat_name\" field is used to store the name displayed externally on the platform.\nFor example, \"chat_name\" is shown when an agent connects to chats with clients.",
                  "type": "string"
                },
                "contact": {
                  "description": "[optional] contact connected to this user",
                  "title": "repeated Call calls = 13; // order by created_at\nrepeated Registration reged = 13; // order by register_last",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "created_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "deleted_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "device": {
                  "title": "[optional] default device assigned ? WebRTC register ?",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "devices": {
                  "description": "[editable] list of unique `regular` devices, attached to this user",
                  "type": "array",
                  "title": "map\u003cint64, string\u003e devices = 13;",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "email": {
                  "type": "string"
                },
                "extension": {
                  "type": "string",
                  "title": "Caller-ID-Number:"
                },
                "hotdesks": {
                  "type": "array",
                  "title": "[readonly] list of unique `hotdesk` devices, assigned to this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "license": {
                  "type": "array",
                  "title": "list of unique licenses, granted to this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.LicenseUser"
                  }
                },
                "name": {
                  "type": "string",
                  "title": "Caller-ID-Name: Display Name"
                },
                "password": {
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "title": "set of operational permission grants",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.Permission"
                  }
                },
                "presence": {
                  "description": "string presence = 7; // unique set of \u003cuser\u003e presentity \u003cstatus:basic\u003e tuples open[ed]\n string status = 8; // short display status (short description)",
                  "title": "CallerId caller = 5; // extension\nPresenceStatus presence = 8;",
                  "$ref": "#/definitions/api.UserPresence"
                },
                "profile": {
                  "type": "object",
                  "title": "list of variables, assigned to this user as an environment unit",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "roles": {
                  "type": "array",
                  "title": "roles, member of which is this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "totp_url": {
                  "type": "string",
                  "title": "[readonly][optional] one time password if setting (2fa) is enabled"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "updated_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "username": {
                  "type": "string",
                  "title": "alphanumeric username (login)"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "PATCH: partial update",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/api.User"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UpdateUser2",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "Object ID",
            "name": "user.id",
            "in": "path",
            "required": true
          },
          {
            "description": "body: modifications/changes",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "body: modifications/changes",
              "properties": {
                "chat_name": {
                  "description": "The \"chat_name\" field is used to store the name displayed externally on the platform.\nFor example, \"chat_name\" is shown when an agent connects to chats with clients.",
                  "type": "string"
                },
                "contact": {
                  "description": "[optional] contact connected to this user",
                  "title": "repeated Call calls = 13; // order by created_at\nrepeated Registration reged = 13; // order by register_last",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "created_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "created_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "deleted_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "device": {
                  "title": "[optional] default device assigned ? WebRTC register ?",
                  "$ref": "#/definitions/api.ObjectId"
                },
                "devices": {
                  "description": "[editable] list of unique `regular` devices, attached to this user",
                  "type": "array",
                  "title": "map\u003cint64, string\u003e devices = 13;",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "email": {
                  "type": "string"
                },
                "extension": {
                  "type": "string",
                  "title": "Caller-ID-Number:"
                },
                "hotdesks": {
                  "type": "array",
                  "title": "[readonly] list of unique `hotdesk` devices, assigned to this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "license": {
                  "type": "array",
                  "title": "list of unique licenses, granted to this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.LicenseUser"
                  }
                },
                "name": {
                  "type": "string",
                  "title": "Caller-ID-Name: Display Name"
                },
                "password": {
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "title": "set of operational permission grants",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.Permission"
                  }
                },
                "presence": {
                  "description": "string presence = 7; // unique set of \u003cuser\u003e presentity \u003cstatus:basic\u003e tuples open[ed]\n string status = 8; // short display status (short description)",
                  "title": "CallerId caller = 5; // extension\nPresenceStatus presence = 8;",
                  "$ref": "#/definitions/api.UserPresence"
                },
                "profile": {
                  "type": "object",
                  "title": "list of variables, assigned to this user as an environment unit",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "roles": {
                  "type": "array",
                  "title": "roles, member of which is this user",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/api.ObjectId"
                  }
                },
                "totp_url": {
                  "type": "string",
                  "title": "[readonly][optional] one time password if setting (2fa) is enabled"
                },
                "updated_at": {
                  "type": "string",
                  "format": "int64",
                  "title": "unix"
                },
                "updated_by": {
                  "title": "user",
                  "$ref": "#/definitions/api.UserId"
                },
                "username": {
                  "type": "string",
                  "title": "alphanumeric username (login)"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "PATCH: partial update",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "$ref": "#/definitions/api.User"
            }
          }
        }
      }
    },
    "/users/{user.id}/tokens": {
      "get": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_ListUserAccessToken",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "int32 page = 2;\nint64 size = 3;\n\n.usage ILIKE :q",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "----- Search Options -------------------------\n\nselect: output (fields,...)",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "select: order by (fields,...)",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "select: offset {page}",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "select: limit {size}",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessTokenList"
            }
          }
        }
      }
    },
    "/users/{user.id}/tokens/{id}": {
      "get": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_GetUserAccessToken",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tokenKey::uuid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessToken"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserAccessTokens"
        ],
        "operationId": "UserAccessTokens_DeleteUserAccessToken",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "user.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "tokenKey::uuid",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "display name",
            "name": "user.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UserAccessToken"
            }
          }
        }
      }
    },
    "/users/{user_id}/2fa": {
      "get": {
        "tags": [
          "TwoFactorAuthentication"
        ],
        "summary": "GetUserTfaKey locates the secret for user and returns it as a TOTP url",
        "operationId": "TwoFactorAuthentication_GetUserTfaKey",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.GetUserTfaKeyResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TwoFactorAuthentication"
        ],
        "summary": "GenerateUserTfaKey generates new or regenerates secret for the concrete user",
        "operationId": "TwoFactorAuthentication_GenerateUserTfaKey",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.GenerateUserTfaKeyResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/absences": {
      "get": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Searches absences by filters.",
        "operationId": "AgentAbsenceService_SearchAgentsAbsences",
        "parameters": [
          {
            "type": "string",
            "description": "Searches by agent name.",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filters",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchAgentsAbsencesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Creates absences for multiple specified agents.",
        "operationId": "AgentAbsenceService_CreateAgentsAbsences",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreateAgentsAbsencesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateAgentsAbsencesResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/working_schedules/{working_schedule_id}": {
      "get": {
        "tags": [
          "AgentWorkingScheduleService"
        ],
        "operationId": "AgentWorkingScheduleService_SearchAgentsWorkingSchedule",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "working_schedule_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchAgentsWorkingScheduleResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentWorkingScheduleService"
        ],
        "operationId": "AgentWorkingScheduleService_CreateAgentsWorkingScheduleShifts",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "working_schedule_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "agents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/wfmLookupEntity"
                  }
                },
                "date": {
                  "$ref": "#/definitions/wfmFilterBetween"
                },
                "items": {
                  "description": "Map key is a day of week: 0 - Sunday, ..., 6 - Saturday.",
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/wfmAgentScheduleShift"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateAgentsWorkingScheduleShiftsResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/{agent_id}/absences": {
      "get": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Searches agent absences by filters.",
        "operationId": "AgentAbsenceService_SearchAgentAbsence",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "filters",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchAgentAbsenceResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Creates one-day-absence for one agent.",
        "operationId": "AgentAbsenceService_CreateAgentAbsence",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "$ref": "#/definitions/wfmAbsence"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateAgentAbsenceResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/{agent_id}/absences/{id}": {
      "get": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Reads one absence per agent by its id.",
        "operationId": "AgentAbsenceService_ReadAgentAbsence",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadAgentAbsenceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Deletes agent concrete absence by its id.",
        "operationId": "AgentAbsenceService_DeleteAgentAbsence",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeleteAgentAbsenceResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/{agent_id}/absences/{item.id}": {
      "put": {
        "tags": [
          "AgentAbsenceService"
        ],
        "summary": "Updates agent concrete absence by its id.",
        "operationId": "AgentAbsenceService_UpdateAgentAbsence",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "absent_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "type_id": {
                      "$ref": "#/definitions/wfmAbsenceType"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateAgentAbsenceResponse"
            }
          }
        }
      }
    },
    "/wfm/agents/{agent_id}/conditions": {
      "get": {
        "tags": [
          "AgentWorkingConditionsService"
        ],
        "operationId": "AgentWorkingConditionsService_ReadAgentWorkingConditions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadAgentWorkingConditionsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentWorkingConditionsService"
        ],
        "operationId": "AgentWorkingConditionsService_UpdateAgentWorkingConditions",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "$ref": "#/definitions/wfmAgentWorkingConditions"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateAgentWorkingConditionsResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/forecast_calculation": {
      "get": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_SearchForecastCalculation",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchForecastCalculationResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_CreateForecastCalculation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreateForecastCalculationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateForecastCalculationResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/forecast_calculation/{id}": {
      "get": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_ReadForecastCalculation",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadForecastCalculationResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_DeleteForecastCalculation",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeleteForecastCalculationResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/forecast_calculation/{id}/execute": {
      "get": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_ExecuteForecastCalculation",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "forecast_data.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "forecast_data.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmExecuteForecastCalculationResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/forecast_calculation/{item.id}": {
      "put": {
        "tags": [
          "ForecastCalculationService"
        ],
        "operationId": "ForecastCalculationService_UpdateForecastCalculation",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "description": {
                      "type": "string"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "procedure": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateForecastCalculationResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/pause_templates": {
      "get": {
        "tags": [
          "PauseTemplateService"
        ],
        "operationId": "PauseTemplateService_SearchPauseTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchPauseTemplateResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PauseTemplateService"
        ],
        "operationId": "PauseTemplateService_CreatePauseTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreatePauseTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreatePauseTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/pause_templates/{id}": {
      "get": {
        "tags": [
          "PauseTemplateService"
        ],
        "operationId": "PauseTemplateService_ReadPauseTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadPauseTemplateResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PauseTemplateService"
        ],
        "operationId": "PauseTemplateService_DeletePauseTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeletePauseTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/pause_templates/{item.id}": {
      "put": {
        "tags": [
          "PauseTemplateService"
        ],
        "summary": "UpdatePauseTemplateCauseBulk updates a pause template with a list of causes.\nUpdate existing cause, create that not exists in database and delete that not exists in the list.",
        "operationId": "PauseTemplateService_UpdatePauseTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/definitions/wfmPauseTemplateCause"
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "description": {
                      "type": "string"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdatePauseTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/shift_templates": {
      "get": {
        "tags": [
          "ShiftTemplateService"
        ],
        "operationId": "ShiftTemplateService_SearchShiftTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchShiftTemplateResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ShiftTemplateService"
        ],
        "operationId": "ShiftTemplateService_CreateShiftTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreateShiftTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateShiftTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/shift_templates/{id}": {
      "get": {
        "tags": [
          "ShiftTemplateService"
        ],
        "operationId": "ShiftTemplateService_ReadShiftTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadShiftTemplateResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShiftTemplateService"
        ],
        "operationId": "ShiftTemplateService_DeleteShiftTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeleteShiftTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/shift_templates/{item.id}": {
      "put": {
        "tags": [
          "ShiftTemplateService"
        ],
        "summary": "UpdateShiftTemplate updates a shift template with a list times.\nUpdate existing time, create that not exists in database and delete that not exists in the list.",
        "operationId": "ShiftTemplateService_UpdateShiftTemplate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "description": {
                      "type": "string"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "times": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/definitions/wfmShiftTemplateTime"
                      }
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateShiftTemplateResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_conditions": {
      "get": {
        "tags": [
          "WorkingConditionService"
        ],
        "operationId": "WorkingConditionService_SearchWorkingCondition",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchWorkingConditionResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkingConditionService"
        ],
        "operationId": "WorkingConditionService_CreateWorkingCondition",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreateWorkingConditionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateWorkingConditionResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_conditions/{id}": {
      "get": {
        "tags": [
          "WorkingConditionService"
        ],
        "operationId": "WorkingConditionService_ReadWorkingCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadWorkingConditionResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkingConditionService"
        ],
        "operationId": "WorkingConditionService_DeleteWorkingCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeleteWorkingConditionResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_conditions/{item.id}": {
      "put": {
        "tags": [
          "WorkingConditionService"
        ],
        "operationId": "WorkingConditionService_UpdateWorkingCondition",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "days_off": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": {
                      "type": "string"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pause_duration": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "pause_template": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "shift_template": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "sick_leaves": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "vacation": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "workday_hours": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "workdays_per_month": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateWorkingConditionResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules": {
      "get": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_SearchWorkingSchedule",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmSearchWorkingScheduleResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_CreateWorkingSchedule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/wfmCreateWorkingScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmCreateWorkingScheduleResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules/{id}": {
      "get": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_ReadWorkingSchedule",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadWorkingScheduleResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_DeleteWorkingSchedule",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmDeleteWorkingScheduleResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules/{id}/agents": {
      "post": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_UpdateWorkingScheduleAddAgents",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "agents": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/wfmLookupEntity"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateWorkingScheduleAddAgentsResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules/{id}/agents/{agent_id}": {
      "delete": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_UpdateWorkingScheduleRemoveAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateWorkingScheduleRemoveAgentResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules/{id}/forecast": {
      "get": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_ReadWorkingScheduleForecast",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmReadWorkingScheduleForecastResponse"
            }
          }
        }
      }
    },
    "/wfm/lookups/working_schedules/{item.id}": {
      "put": {
        "tags": [
          "WorkingScheduleService"
        ],
        "operationId": "WorkingScheduleService_UpdateWorkingSchedule",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "item.id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "object",
                  "properties": {
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/definitions/wfmLookupEntity"
                      }
                    },
                    "block_outside_activity": {
                      "type": "boolean"
                    },
                    "calendar": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "created_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "domain_id": {
                      "type": "string",
                      "format": "int64"
                    },
                    "end_date_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "end_time_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "extra_skills": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/definitions/wfmLookupEntity"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "start_date_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "start_time_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "state": {
                      "$ref": "#/definitions/wfmWorkingScheduleState"
                    },
                    "team": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    },
                    "total_agents": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "int64"
                    },
                    "updated_by": {
                      "$ref": "#/definitions/wfmLookupEntity"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/wfmUpdateWorkingScheduleResponse"
            }
          }
        }
      }
    },
    "/{object.name}/{object.id}/acl": {
      "get": {
        "tags": [
          "AccessStore"
        ],
        "operationId": "AccessStore_ListObjectAccess",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "object.name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "object.id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "--- filters ---\n\n[optional] [FROM] each rule owner is any of role(s) id; user -or- role",
            "name": "grantor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "[optional] [TO] subject role(s) id; user -or- role",
            "name": "grantee",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[xrwdxrwd] [R]ecord-[b]ased-[A]ccess-[C]ontrol level check(!)",
            "name": "granted",
            "in": "query"
          },
          {
            "type": "string",
            "description": "[optional] [TO] subject.name ILIKE ?q=; user -or- role",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "----- Select Options -------------------------\n\nattributes list",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "pagedResultsControl\n\ndefault: 16",
            "name": "size",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "default: 1",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.ListAccessResponseV1"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AccessStore"
        ],
        "summary": "TODO: replace with GrantAccess API, to become command like GRANT REVOKE ... with empty access rights string",
        "operationId": "AccessStore_ToggleObjectAccess",
        "parameters": [
          {
            "type": "string",
            "description": "display name",
            "name": "object.name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "identifier",
            "name": "object.id",
            "in": "path",
            "required": true
          },
          {
            "name": "list",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.GrantAccessRequestV1"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api.UpdateAccessResponseV1"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateAgentsAbsencesRequestabsentType": {
      "type": "object",
      "properties": {
        "date_from": {
          "type": "string",
          "format": "int64"
        },
        "date_to": {
          "type": "string",
          "format": "int64"
        },
        "type_id": {
          "$ref": "#/definitions/wfmAbsenceType"
        }
      }
    },
    "api.AccessRule": {
      "type": "object",
      "properties": {
        "granted": {
          "type": "string",
          "title": "[WHAT]: full: [xrwdxrwd]; privileges: [----xrwd]; grantable: [xrwd----]"
        },
        "grantee": {
          "title": "[WHOM]: required; NEED to be rechecked !!!",
          "$ref": "#/definitions/api.RoleId"
        },
        "grantor": {
          "description": "[WHO]: operational; current user NEED to be rechecked !!!",
          "title": "ObjectId object = 1;",
          "$ref": "#/definitions/api.RoleId"
        }
      }
    },
    "api.AccessStore.ToggleDefaultAccessBody": {
      "type": "object",
      "properties": {
        "list": {
          "description": "list of changes ...\n\n[TO] (GRANT/REVOKE)",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.GrantAccessRequestV1"
          }
        },
        "object": {
          "type": "object",
          "title": "[ON] objclass (either: by entity .id -or- class .name)"
        }
      }
    },
    "api.AccessToken": {
      "type": "object",
      "title": "OAuth 2.0 Access Token Response compatible",
      "properties": {
        "access_token": {
          "description": "REQUIRED. The access token issued by the authorization server.",
          "type": "string"
        },
        "expires_in": {
          "description": "RECOMMENDED. The lifetime in seconds of the access token.",
          "type": "integer",
          "format": "int32"
        },
        "refresh_token": {
          "description": "OPTIONAL. The refresh token, which can be used to obtain\nnew access tokens using the same authorization grant.",
          "type": "string"
        },
        "state": {
          "description": "OPTIONAL, if identical to the scope requested by the client;\notherwise, REQUIRED. The scope of the access token.\nrepeated string scope = 5 [ json_name = \"scope\" ];\nREQUIRED if the \"state\" parameter was present in the client\nauthorization request. The exact value received from the client.",
          "type": "string"
        },
        "token_type": {
          "description": "REQUIRED. The type of the token issued. Value is case insensitive.",
          "type": "string"
        }
      }
    },
    "api.Claim": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "api.Classes.UpdateClassBody": {
      "type": "object",
      "properties": {
        "class": {
          "type": "object",
          "properties": {
            "abac": {
              "type": "boolean",
              "title": "[a]ttribute-[b]ased [a]ccess [c]ontrol"
            },
            "class": {
              "type": "string",
              "title": "(class::object).name"
            },
            "obac": {
              "type": "boolean",
              "title": "[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)"
            },
            "rbac": {
              "type": "boolean",
              "title": "[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)"
            }
          }
        },
        "domain": {
          "type": "string",
          "title": "TO BE REMOVED // bound to session.domain.id"
        },
        "fields": {
          "type": "array",
          "title": "PATCH: partial update",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.CreateDeviceResponse": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/api.Device"
        }
      }
    },
    "api.CreateDomainRequest": {
      "type": "object",
      "title": "POST /domains",
      "properties": {
        "organization": {
          "$ref": "#/definitions/api.Organization"
        },
        "password": {
          "type": "string"
        },
        "superuser": {
          "type": "string"
        }
      }
    },
    "api.CreateDomainResponse": {
      "type": "object"
    },
    "api.CreateRoleRequest": {
      "type": "object",
      "properties": {
        "copy_id": {
          "type": "string",
          "format": "int64",
          "title": "----- Query parameters -----\nOptional. Source role unique identifier\nto copy access (+default) control list from"
        },
        "role": {
          "title": "entity to be created",
          "$ref": "#/definitions/api.Role"
        }
      }
    },
    "api.CreateRoleResponse": {
      "type": "object",
      "properties": {
        "created": {
          "title": "entity to be created",
          "$ref": "#/definitions/api.Role"
        }
      }
    },
    "api.CreateUserRequest": {
      "type": "object",
      "properties": {
        "confirm_password": {
          "type": "string",
          "title": "cleartext passphrase"
        },
        "user": {
          "title": "user entity to be created",
          "$ref": "#/definitions/api.User"
        },
        "user_password": {
          "type": "string",
          "title": "cleartext passphrase"
        }
      }
    },
    "api.CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/api.User"
        }
      }
    },
    "api.Customer": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "local created ms",
          "type": "string",
          "format": "int64",
          "title": "string version = 2; // version\nlocal store details"
        },
        "dnsrv": {
          "type": "array",
          "title": "[optional] domains",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "id": {
          "type": "string",
          "title": "serial number assigned (global::Customer-ID)"
        },
        "issued_at": {
          "description": "[required] issuer(CA) created at",
          "type": "string",
          "format": "int64",
          "title": "validity boundaries"
        },
        "license": {
          "description": "grants issued",
          "type": "array",
          "title": "int32 competitive = 13; // zero-based competitive sessions limit ?",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LicenseV1"
          }
        },
        "limit": {
          "description": "defines map[class]limit usage",
          "type": "object",
          "title": "extensions granted",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "next_update": {
          "type": "string",
          "format": "int64",
          "title": "[optional]: signature expires; update required after"
        },
        "not_after": {
          "type": "string",
          "format": "int64",
          "title": "[required] valid till"
        },
        "not_before": {
          "type": "string",
          "format": "int64",
          "title": "[optional] valid from"
        },
        "organization": {
          "type": "string",
          "title": "registration name"
        },
        "revoked_at": {
          "type": "string",
          "format": "int64",
          "title": "local revoked ms"
        },
        "this_update": {
          "description": "[optional]: issuer(CA) signed at",
          "type": "string",
          "format": "int64",
          "title": "signature validity"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "last uploaded ms"
        },
        "verify": {
          "description": "[optional] validation results",
          "title": "Verification status",
          "$ref": "#/definitions/api.Verification"
        }
      }
    },
    "api.DeleteDeviceResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Device"
          }
        }
      }
    },
    "api.DeleteDomainResponse": {
      "type": "object"
    },
    "api.DeleteLDAPRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "catalog id"
        },
        "related_objects": {
          "type": "boolean",
          "title": "WITH objects bound to ?"
        }
      }
    },
    "api.DeleteOAuthServiceRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "permanent": {
          "type": "boolean"
        }
      }
    },
    "api.DeleteOAuthServiceResponse": {
      "type": "object"
    },
    "api.DeleteRoleResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "$ref": "#/definitions/api.Role"
        }
      }
    },
    "api.DeleteUsersResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.User"
          }
        }
      }
    },
    "api.Device": {
      "type": "object",
      "title": "Device profile",
      "properties": {
        "account": {
          "description": "username",
          "type": "string",
          "title": "credentials"
        },
        "brand": {
          "description": "vendor brand name",
          "type": "string",
          "title": "provision"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "deleted_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "deleted_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "hotdesk": {
          "description": "act as a hotdesk",
          "type": "boolean",
          "title": "Hotdesk: this workstation aliases"
        },
        "hotdesks": {
          "type": "array",
          "title": "associated aliases",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "object id"
        },
        "ip": {
          "type": "string"
        },
        "logged_in": {
          "type": "string",
          "format": "int64",
          "title": "caller profile\n webitel.adt.caller caller = 4;"
        },
        "mac": {
          "type": "string",
          "title": "static"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "description": "display name",
          "type": "string",
          "title": "kind of\nDeviceType type = 19;"
        },
        "password": {
          "type": "string",
          "title": "password"
        },
        "provision": {
          "type": "object",
          "title": "provision extra data",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reged": {
          "type": "boolean",
          "title": "TODO: something like PresenceStatus instead of Registration\n repeated Registration contacts = 16;"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "user": {
          "title": "[optional] The user that 'owns' the device;",
          "$ref": "#/definitions/api.UserId"
        }
      }
    },
    "api.DeviceAudit": {
      "type": "object",
      "title": "Device login audit",
      "properties": {
        "device": {
          "title": "/users/:id/audit related",
          "$ref": "#/definitions/api.DeviceId"
        },
        "hotdesk": {
          "type": "string"
        },
        "logged_in": {
          "type": "string",
          "format": "int64"
        },
        "logged_out": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "title": "/devices/:id/audit related",
          "$ref": "#/definitions/api.UserId"
        }
      }
    },
    "api.DeviceAuditResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "audit_logs",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.DeviceAudit"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.DeviceId": {
      "type": "object",
      "title": "DeviceId lookup value",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Object ID"
        },
        "name": {
          "type": "string",
          "title": "Display Name"
        }
      }
    },
    "api.Domains.UpdateDomainBody": {
      "type": "object",
      "title": "PUT /domain/{domain.dc}",
      "properties": {
        "domain": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "createdBy": {
              "type": "string",
              "title": "user"
            },
            "domain": {
              "type": "string",
              "title": "FQDN"
            },
            "email": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "organization": {
              "type": "string"
            },
            "postalAddress": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "stateOrProvince": {
              "type": "string"
            },
            "streetAddress": {
              "type": "string"
            },
            "telephoneNumber": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updatedBy": {
              "type": "string",
              "title": "user"
            }
          }
        }
      }
    },
    "api.GenerateTfaKeysForNecessaryUsersResponse": {
      "type": "object",
      "properties": {
        "affected": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api.GenerateUserTfaKeyResponse": {
      "type": "object",
      "properties": {
        "totp": {
          "$ref": "#/definitions/api.TfaUrl"
        }
      }
    },
    "api.GetCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/api.Customer"
        }
      }
    },
    "api.GetUserTfaKeyResponse": {
      "type": "object",
      "properties": {
        "totp": {
          "$ref": "#/definitions/api.TfaUrl"
        }
      }
    },
    "api.GrantAccessRequestV1": {
      "type": "object",
      "properties": {
        "grantee": {
          "type": "string",
          "format": "int64",
          "title": "grantee.role.id"
        },
        "grants": {
          "type": "string",
          "title": "repeated string privileges = 5; // [\"SEARCH\",\"MODIFY\",\"DELETE\",\"CREATE\"]\nbool grantable = 6; // WITH GRANT OPTION"
        },
        "object": {
          "title": "string class = 2;\nint64 object = 3; // class.object.id",
          "$ref": "#/definitions/api.ObjectId"
        }
      }
    },
    "api.GrantRoleResponse": {
      "type": "object"
    },
    "api.LDAP.CreateLDAPTemplateBody": {
      "type": "object",
      "title": "LDAPTemplate is an LDAP search entries to webitel objects transformation template",
      "properties": {
        "agent": {
          "type": "object",
          "title": "OPTIONAL. Agent objclass fields mapping"
        },
        "base_dn": {
          "type": "string",
          "title": "Optional. LDAP Search base entry DN"
        },
        "catalog": {
          "type": "object",
          "title": "LDAPCatalog belongs to",
          "properties": {
            "name": {
              "type": "string",
              "title": "display name"
            }
          }
        },
        "created_at": {
          "description": "unix",
          "type": "string",
          "format": "int64",
          "title": "READONLY. Operational attributes"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "device": {
          "type": "object",
          "title": "OPTIONAL. Device objclass fields mapping"
        },
        "enabled": {
          "type": "boolean",
          "title": "Optional. This Template is activated ?"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID unique"
        },
        "name": {
          "type": "string",
          "title": "Name this template"
        },
        "role": {
          "type": "object",
          "title": "OPTIONAL. Role objclass fields mapping (Not implemented yet)"
        },
        "search": {
          "type": "string",
          "title": "Required. LDAP Search filter string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "user": {
          "type": "object",
          "title": "OPTIONAL. User objclass fields mapping"
        }
      }
    },
    "api.LDAP.DeleteLDAPTemplateBody": {
      "type": "object",
      "properties": {
        "base_dn": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "title": "attributes list",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "array",
          "title": "----- Search Basic Filters ---------------------------\nOPTIONAL. Search templates by .id",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "objclass": {
          "type": "string"
        },
        "page": {
          "description": "default: 1",
          "type": "integer",
          "format": "int32",
          "title": "----- Select Options -------------------------"
        },
        "q": {
          "type": "string",
          "title": "OPTIONAL. Filter(s) SET"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "default: 16"
        },
        "sort": {
          "type": "array",
          "title": "e.g.: \"updated_at\" - ASC; \"!updated_at\" - DESC;",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.LDAP.LDAPSearchBody": {
      "type": "object",
      "title": "https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1",
      "properties": {
        "attributes": {
          "type": "array",
          "title": "AttributeSelection",
          "items": {
            "type": "string"
          }
        },
        "baseObject": {
          "type": "string",
          "title": "----- SearchRequest -----\nbaseObject [D]istinguished[N]ame"
        },
        "bind": {
          "description": "authorization method e.g.: SIMPLE, SAML, NTLM, etc.",
          "type": "string",
          "title": "----- BIND: Authorization -----"
        },
        "controls": {
          "type": "array",
          "title": "----- LDAPMessage -----\nControls NOT implemented yet !",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPControl"
          }
        },
        "derefAliases": {
          "type": "integer",
          "format": "int32",
          "title": "neverDerefAliases       (0),\nderefInSearching        (1),\nderefFindingBaseObj     (2),\nderefAlways             (3)"
        },
        "filter": {
          "type": "string",
          "title": "Filter,"
        },
        "password": {
          "type": "string",
          "title": "password"
        },
        "scope": {
          "type": "integer",
          "format": "int32",
          "title": "baseObject              (0),\nsingleLevel             (1),\nwholeSubtree            (2)"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "INTEGER (0 ..  maxInt),"
        },
        "timeLimit": {
          "type": "string",
          "format": "int64",
          "title": "INTEGER (0 ..  maxInt),"
        },
        "tls": {
          "$ref": "#/definitions/api.LDAPSearchRequest.TLSConfig"
        },
        "typesOnly": {
          "type": "boolean",
          "title": "BOOLEAN,"
        },
        "url": {
          "description": "URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
          "type": "string",
          "title": "Optional. URL to establish connection to LDAP catalog"
        },
        "username": {
          "type": "string",
          "title": "bind_dn"
        }
      }
    },
    "api.LDAP.ResyncLDAPCatalogBody": {
      "type": "object",
      "properties": {
        "options": {
          "title": "Options",
          "$ref": "#/definitions/api.LDAProcessOptions"
        }
      }
    },
    "api.LDAP.UpdateLDAPCatalogBody": {
      "type": "object",
      "properties": {
        "catalog": {
          "description": "LDAP Catalog changes.",
          "type": "object",
          "title": "LDAP Catalog changes.",
          "properties": {
            "base_dn": {
              "type": "string",
              "title": "base_dn, aka domain e.g.: 'dc=example,dc=org'"
            },
            "bind": {
              "description": "authorization method e.g.: SIMPLE, SAML, NTLM, etc.",
              "type": "string",
              "title": "----- BIND: Authorization -----"
            },
            "created_at": {
              "description": "unix",
              "type": "string",
              "format": "int64",
              "title": "basic: last operation details"
            },
            "created_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "cron": {
              "description": "[CRON]OS SPEC ! github.com/robfig/cron/v3",
              "type": "string",
              "title": "----- RSYNC Processing -----\nint32  priority = 4;"
            },
            "entry_modify": {
              "type": "string",
              "title": "last modification timestamp attribute type"
            },
            "entry_uuid": {
              "description": "entry unique id (except DN which may be updated)",
              "type": "string",
              "title": "----- DOMAIN: Entry model -----"
            },
            "name": {
              "type": "string",
              "title": "Meaningfull title name"
            },
            "password": {
              "type": "string",
              "title": "password"
            },
            "process": {
              "title": "Last OR Current SYNC process details",
              "$ref": "#/definitions/api.LDAProcess"
            },
            "sync": {
              "$ref": "#/definitions/api.LDAProcessOptions"
            },
            "templates": {
              "type": "array",
              "title": "// // ----- MAP: user(s) settings -----\nLDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead\nSYNC Object's search and mappings",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.LDAPTemplate"
              }
            },
            "tls": {
              "$ref": "#/definitions/api.LDAPCatalog.TLSConfig"
            },
            "updated_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updated_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "url": {
              "description": "URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
              "type": "string",
              "title": "----- Connection Options -----"
            },
            "username": {
              "type": "string",
              "title": "bind_dn"
            }
          }
        },
        "fields": {
          "type": "array",
          "title": "Fields for partial update. PATCH",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.LDAP.UpdateLDAPTemplateBody": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "OPTIONAL. Fields for partial update. PATCH",
          "items": {
            "type": "string"
          }
        },
        "template": {
          "description": "Template changes.",
          "type": "object",
          "title": "Template changes.",
          "properties": {
            "agent": {
              "type": "object",
              "title": "OPTIONAL. Agent objclass fields mapping"
            },
            "base_dn": {
              "type": "string",
              "title": "Optional. LDAP Search base entry DN"
            },
            "catalog": {
              "type": "object",
              "title": "LDAPCatalog belongs to",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "display name"
                }
              }
            },
            "created_at": {
              "description": "unix",
              "type": "string",
              "format": "int64",
              "title": "READONLY. Operational attributes"
            },
            "created_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "device": {
              "type": "object",
              "title": "OPTIONAL. Device objclass fields mapping"
            },
            "enabled": {
              "type": "boolean",
              "title": "Optional. This Template is activated ?"
            },
            "name": {
              "type": "string",
              "title": "Name this template"
            },
            "role": {
              "type": "object",
              "title": "OPTIONAL. Role objclass fields mapping (Not implemented yet)"
            },
            "search": {
              "type": "string",
              "title": "Required. LDAP Search filter string"
            },
            "updated_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updated_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "user": {
              "type": "object",
              "title": "OPTIONAL. User objclass fields mapping"
            }
          }
        }
      }
    },
    "api.LDAPCatalog": {
      "type": "object",
      "title": "LDAPCatalog profile",
      "properties": {
        "base_dn": {
          "type": "string",
          "title": "base_dn, aka domain e.g.: 'dc=example,dc=org'"
        },
        "bind": {
          "description": "authorization method e.g.: SIMPLE, SAML, NTLM, etc.",
          "type": "string",
          "title": "----- BIND: Authorization -----"
        },
        "created_at": {
          "description": "unix",
          "type": "string",
          "format": "int64",
          "title": "basic: last operation details"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "cron": {
          "description": "[CRON]OS SPEC ! github.com/robfig/cron/v3",
          "type": "string",
          "title": "----- RSYNC Processing -----\nint32  priority = 4;"
        },
        "entry_modify": {
          "type": "string",
          "title": "last modification timestamp attribute type"
        },
        "entry_uuid": {
          "description": "entry unique id (except DN which may be updated)",
          "type": "string",
          "title": "----- DOMAIN: Entry model -----"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "identity\nint64 dc = 1;"
        },
        "name": {
          "type": "string",
          "title": "Meaningfull title name"
        },
        "password": {
          "type": "string",
          "title": "password"
        },
        "process": {
          "title": "Last OR Current SYNC process details",
          "$ref": "#/definitions/api.LDAProcess"
        },
        "sync": {
          "$ref": "#/definitions/api.LDAProcessOptions"
        },
        "templates": {
          "type": "array",
          "title": "// // ----- MAP: user(s) settings -----\nLDAPUsersMap users = 26; // DEPRECATED: Use Template(s) instead\nSYNC Object's search and mappings",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPTemplate"
          }
        },
        "tls": {
          "$ref": "#/definitions/api.LDAPCatalog.TLSConfig"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "url": {
          "description": "URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
          "type": "string",
          "title": "----- Connection Options -----"
        },
        "username": {
          "type": "string",
          "title": "bind_dn"
        }
      }
    },
    "api.LDAPCatalog.TLSConfig": {
      "type": "object",
      "title": "TLS configuration options",
      "properties": {
        "ca": {
          "type": "string",
          "format": "byte",
          "title": "PEM: base64"
        },
        "cert": {
          "description": "PEM: base64",
          "type": "string",
          "format": "byte",
          "title": "TODO: (!)"
        },
        "key": {
          "type": "string",
          "format": "byte",
          "title": "PEM: base64"
        }
      }
    },
    "api.LDAPControl": {
      "type": "object",
      "title": "https://datatracker.ietf.org/doc/html/rfc4511#section-4.1.11",
      "properties": {
        "controlType": {
          "type": "string",
          "title": "LDAPOID,"
        },
        "controlValue": {
          "type": "string",
          "title": "OCTET STRING OPTIONAL"
        },
        "criticality": {
          "type": "boolean",
          "title": "BOOLEAN DEFAULT FALSE,"
        }
      }
    },
    "api.LDAPObjentry": {
      "type": "object",
      "title": "LDAP entry object associatetions performed",
      "properties": {
        "class": {
          "type": "string",
          "title": "Internal object class been associated with this LDAP .entry"
        },
        "entry": {
          "description": "map\u003cstring, string\u003e entry = 1;",
          "type": "object",
          "title": "LDAP Entry Attributes fetched"
        },
        "errs": {
          "type": "array",
          "title": "FATAL Error(s). NON empty indicates that this process failed",
          "items": {
            "type": "string"
          }
        },
        "object": {
          "type": "object",
          "title": "Internal object state; DUMP"
        },
        "proc": {
          "type": "string",
          "title": "Operation been performed: create|update|delete"
        },
        "warn": {
          "type": "array",
          "title": "An error(s) if any occured\nNON-FATAL Warnings",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.LDAPSearchRequest": {
      "type": "object",
      "title": "https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.1",
      "properties": {
        "attributes": {
          "type": "array",
          "title": "AttributeSelection",
          "items": {
            "type": "string"
          }
        },
        "baseObject": {
          "type": "string",
          "title": "----- SearchRequest -----\nbaseObject [D]istinguished[N]ame"
        },
        "bind": {
          "description": "authorization method e.g.: SIMPLE, SAML, NTLM, etc.",
          "type": "string",
          "title": "----- BIND: Authorization -----"
        },
        "catalog_id": {
          "type": "string",
          "format": "int64",
          "title": "----- connection -----\nOptional. ID of the preconfigured LDAP catalog"
        },
        "controls": {
          "type": "array",
          "title": "----- LDAPMessage -----\nControls NOT implemented yet !",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPControl"
          }
        },
        "derefAliases": {
          "type": "integer",
          "format": "int32",
          "title": "neverDerefAliases       (0),\nderefInSearching        (1),\nderefFindingBaseObj     (2),\nderefAlways             (3)"
        },
        "filter": {
          "type": "string",
          "title": "Filter,"
        },
        "password": {
          "type": "string",
          "title": "password"
        },
        "scope": {
          "type": "integer",
          "format": "int32",
          "title": "baseObject              (0),\nsingleLevel             (1),\nwholeSubtree            (2)"
        },
        "sizeLimit": {
          "type": "string",
          "format": "int64",
          "title": "INTEGER (0 ..  maxInt),"
        },
        "timeLimit": {
          "type": "string",
          "format": "int64",
          "title": "INTEGER (0 ..  maxInt),"
        },
        "tls": {
          "$ref": "#/definitions/api.LDAPSearchRequest.TLSConfig"
        },
        "typesOnly": {
          "type": "boolean",
          "title": "BOOLEAN,"
        },
        "url": {
          "description": "URL e.g.: [(ldap|ldapi|ldaps)://]host[:port]",
          "type": "string",
          "title": "Optional. URL to establish connection to LDAP catalog"
        },
        "username": {
          "type": "string",
          "title": "bind_dn"
        }
      }
    },
    "api.LDAPSearchRequest.TLSConfig": {
      "type": "object",
      "title": "TLS configuration options",
      "properties": {
        "PEM": {
          "description": "base64",
          "type": "string",
          "format": "byte",
          "title": "TODO: (!)"
        }
      }
    },
    "api.LDAPSearchResponse": {
      "type": "object",
      "title": "https://datatracker.ietf.org/doc/html/rfc4511#section-4.5.2",
      "properties": {
        "controls": {
          "type": "array",
          "title": "----- LDAPMessage -----",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPControl"
          }
        },
        "diagnosticMessage": {
          "type": "string",
          "title": "LDAPString,"
        },
        "entries": {
          "type": "array",
          "title": "----- SearchResult (Entry|Reference) -----",
          "items": {
            "type": "object"
          }
        },
        "matchedDN": {
          "type": "string",
          "title": "LDAPDN,"
        },
        "referral": {
          "type": "array",
          "title": "[3] Referral OPTIONAL",
          "items": {
            "type": "string"
          }
        },
        "resultCode": {
          "type": "integer",
          "format": "int32",
          "title": "----- LDAPResult -----"
        }
      }
    },
    "api.LDAPTemplate": {
      "type": "object",
      "title": "LDAPTemplate is an LDAP search entries to webitel objects transformation template",
      "properties": {
        "agent": {
          "type": "object",
          "title": "OPTIONAL. Agent objclass fields mapping"
        },
        "base_dn": {
          "type": "string",
          "title": "Optional. LDAP Search base entry DN"
        },
        "catalog": {
          "title": "LDAPCatalog belongs to",
          "$ref": "#/definitions/api.ObjectId"
        },
        "created_at": {
          "description": "unix",
          "type": "string",
          "format": "int64",
          "title": "READONLY. Operational attributes"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "device": {
          "type": "object",
          "title": "OPTIONAL. Device objclass fields mapping"
        },
        "enabled": {
          "type": "boolean",
          "title": "Optional. This Template is activated ?"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID unique"
        },
        "name": {
          "type": "string",
          "title": "Name this template"
        },
        "role": {
          "type": "object",
          "title": "OPTIONAL. Role objclass fields mapping (Not implemented yet)"
        },
        "search": {
          "type": "string",
          "title": "Required. LDAP Search filter string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "user": {
          "type": "object",
          "title": "OPTIONAL. User objclass fields mapping"
        }
      }
    },
    "api.LDAPTemplateResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPTemplate"
          }
        },
        "next": {
          "type": "boolean",
          "title": "result: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "result: {page} number"
        }
      }
    },
    "api.LDAProcess": {
      "type": "object",
      "title": "LDAP synchronization process details",
      "properties": {
        "complete_at": {
          "description": "Optional. If not \u003czero\u003e indicates that this process is completed.",
          "type": "string",
          "format": "int64"
        },
        "execute_at": {
          "type": "string",
          "format": "int64",
          "title": "Readonly. Process start timestamp"
        },
        "execute_by": {
          "title": "Optional. Start manually by the user or role",
          "$ref": "#/definitions/api.RoleId"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Readonly. Process unique identifier"
        },
        "options": {
          "title": "Readonly. Executed with options",
          "$ref": "#/definitions/api.LDAProcessOptions"
        },
        "progress": {
          "type": "array",
          "title": "Optional. List of entries been already processed",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPObjentry"
          }
        },
        "status": {
          "type": "string",
          "title": "Optional. Status description or an error if any occured"
        }
      }
    },
    "api.LDAProcessOptions": {
      "type": "object",
      "properties": {
        "link_existing_objects": {
          "type": "boolean",
          "title": "Allows to create links\nwith fetched LDAP entries\nfor manually created objects"
        },
        "reassign_device_users": {
          "type": "boolean",
          "title": "Allows to reassign device's owner user\ndue to preconfigured mapping LDAP template"
        },
        "test": {
          "type": "boolean",
          "title": "Will NOT perform any operations on storage.\nTo review potential processing only"
        },
        "timeout": {
          "type": "string",
          "format": "int64",
          "title": "Operation timeout. Not implemented yet"
        }
      }
    },
    "api.LDAProcessResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAProcess"
          }
        },
        "next": {
          "type": "boolean",
          "title": "result: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "result: {page} number"
        }
      }
    },
    "api.LicenseUsageResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "size = (.next ? len(items) : undef (\u003e len(size)))\n----- Result entries ----- //",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LicenseV1"
          }
        },
        "next": {
          "type": "boolean",
          "title": "next page exists ? more results ?"
        },
        "page": {
          "description": "this page number !",
          "type": "integer",
          "format": "int32",
          "title": "----- Result paging ----- //"
        }
      }
    },
    "api.LicenseUser": {
      "type": "object",
      "title": "USAGE details",
      "properties": {
        "expires_at": {
          "type": "string",
          "format": "int64",
          "title": "not after"
        },
        "id": {
          "type": "string",
          "title": "license.id"
        },
        "issued_at": {
          "type": "string",
          "format": "int64",
          "title": "not before"
        },
        "prod": {
          "type": "string",
          "title": "license.prod"
        },
        "scope": {
          "type": "array",
          "title": "setof objclass grants",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "title": "grant to::user",
          "$ref": "#/definitions/api.ObjectId"
        }
      }
    },
    "api.LicenseUsersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "size = (.next ? len(items) : undef (\u003e len(size)))\n----- Result entries ----- //",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ProductUser"
          }
        },
        "next": {
          "type": "boolean",
          "title": "next page exists ? more results ?"
        },
        "page": {
          "description": "this page number !",
          "type": "integer",
          "format": "int32",
          "title": "----- Result paging ----- //"
        }
      }
    },
    "api.LicenseV1": {
      "type": "object",
      "properties": {
        "competitive": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "title": "serial number assigned (global::License-ID)"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "title": "required: limit count (maximum allowed usage quantity)"
        },
        "not_after": {
          "type": "string",
          "format": "int64",
          "title": "optional"
        },
        "not_before": {
          "type": "string",
          "format": "int64",
          "title": "optional"
        },
        "product": {
          "type": "string",
          "title": "product name, e.g.: DEVICE, MANAGER, OPERATOR"
        },
        "remain": {
          "description": "available",
          "type": "integer",
          "format": "int32",
          "title": "operational attributes ...\nremain = limit - len(users)"
        },
        "scope": {
          "description": "list of known classes, \u0026this product grants mandatory access to, e.g.: 'users', 'roles', 'cc_agent', 'calendars', ...",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/api.Verification"
        },
        "users": {
          "type": "array",
          "title": "users.id (grantees)",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LicenseUser"
          }
        }
      }
    },
    "api.ListAccessResponseV1": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "endregion",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.AccessRule"
          }
        },
        "next": {
          "type": "boolean",
          "title": "indicate partial response: ( next || page \u003e 1 ? partial : full )"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "region: paged result control response value"
        }
      }
    },
    "api.ListRegistrationsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "registered",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Registration"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.LoginResponse": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/api.AccessToken"
        }
      }
    },
    "api.LogoutUserResponse": {
      "type": "object"
    },
    "api.OAuth2Federation.DeleteOAuthServiceBody": {
      "type": "object",
      "properties": {
        "permanent": {
          "type": "boolean"
        }
      }
    },
    "api.OAuth2Federation.UpdateOAuthServiceBody": {
      "type": "object",
      "properties": {
        "changes": {
          "description": "Configuration changes.",
          "type": "object",
          "title": "Configuration changes.",
          "properties": {
            "auth_url": {
              "type": "string",
              "title": "OAuth 2.0 Authorization Endpoint"
            },
            "claims": {
              "description": "google.protobuf.Struct claims = 7;",
              "type": "array",
              "title": "Identity claims policy rules\nNOTE: Order matters",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.Claim"
              }
            },
            "client_id": {
              "type": "string"
            },
            "client_secret": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "created_by": {
              "title": "user",
              "$ref": "#/definitions/api.ObjectId"
            },
            "discovery_url": {
              "type": "string",
              "title": "OpenID Connect Service Discovery"
            },
            "domain": {
              "$ref": "#/definitions/api.ObjectId"
            },
            "enabled": {
              "type": "boolean"
            },
            "logo": {
              "type": "string"
            },
            "metadata": {
              "type": "object"
            },
            "name": {
              "type": "string",
              "title": "display"
            },
            "scopes": {
              "type": "array",
              "title": "Scopes to be requested",
              "items": {
                "type": "string"
              }
            },
            "token_url": {
              "type": "string",
              "title": "OAuth 2.0 Token Endpoint"
            },
            "type": {
              "type": "string",
              "title": "well-known vendor; provider"
            },
            "updated_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updated_by": {
              "title": "user",
              "$ref": "#/definitions/api.ObjectId"
            },
            "userinfo_url": {
              "type": "string",
              "title": "OpenID Connect Userinfo Endpoint"
            }
          }
        },
        "fields": {
          "type": "array",
          "title": "Fields for partial update. PATCH",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.OAuthService": {
      "type": "object",
      "title": "OAuth 2.0 Authentication [S]ervice [P]rovider Application Configuration",
      "properties": {
        "auth_url": {
          "type": "string",
          "title": "OAuth 2.0 Authorization Endpoint"
        },
        "claims": {
          "description": "google.protobuf.Struct claims = 7;",
          "type": "array",
          "title": "Identity claims policy rules\nNOTE: Order matters",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Claim"
          }
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.ObjectId"
        },
        "discovery_url": {
          "type": "string",
          "title": "OpenID Connect Service Discovery"
        },
        "domain": {
          "$ref": "#/definitions/api.ObjectId"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "logo": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "name": {
          "type": "string",
          "title": "display"
        },
        "scopes": {
          "type": "array",
          "title": "Scopes to be requested",
          "items": {
            "type": "string"
          }
        },
        "token_url": {
          "type": "string",
          "title": "OAuth 2.0 Token Endpoint"
        },
        "type": {
          "type": "string",
          "title": "well-known vendor; provider"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.ObjectId"
        },
        "userinfo_url": {
          "type": "string",
          "title": "OpenID Connect Userinfo Endpoint"
        }
      }
    },
    "api.Objclass": {
      "type": "object",
      "title": "AccessScope represents authorized access level\nto object class declaration within domain namespace",
      "properties": {
        "abac": {
          "description": "[A]ttribute-[b]ased;  not implemented; next releases ...",
          "type": "boolean",
          "title": "Is [?]-[b]ased [A]ccess [C]ontrol *model enabled ?"
        },
        "access": {
          "description": "flags: [ CREATE | SELECT | UPDATE | DELETE ]",
          "type": "string",
          "title": "Extension: discretionary access control"
        },
        "class": {
          "type": "string",
          "title": "class: alphanumeric code name"
        },
        "id": {
          "description": "class: object id",
          "type": "string",
          "format": "int64",
          "title": "Inherit::ObjectClass"
        },
        "name": {
          "type": "string",
          "title": "class: display common name"
        },
        "obac": {
          "type": "boolean",
          "title": "[O]peration-[b]ased;  Mandatory: control access to object.class (alias: collection, section, etc.)"
        },
        "rbac": {
          "type": "boolean",
          "title": "[R]ecord-[b]ased; Discretionary: control access to object.entry (alias: resource, record, etc.)"
        }
      }
    },
    "api.ObjectClass": {
      "type": "object",
      "properties": {
        "abac": {
          "type": "boolean",
          "title": "[a]ttribute-[b]ased [a]ccess [c]ontrol"
        },
        "class": {
          "type": "string",
          "title": "(class::object).name"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "(class::object).id"
        },
        "obac": {
          "type": "boolean",
          "title": "[o]peration-[b]ased [a]ccess [c]ontrol (from::collection.dal)"
        },
        "rbac": {
          "type": "boolean",
          "title": "[r]ecord-[b]ased [a]ccess [c]ontrol (from::resource.acl)"
        }
      }
    },
    "api.ObjectId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "identifier"
        },
        "name": {
          "type": "string",
          "title": "display name"
        }
      }
    },
    "api.Organization": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "createdBy": {
          "type": "string",
          "title": "user"
        },
        "dc": {
          "type": "string",
          "format": "int64",
          "title": "component"
        },
        "domain": {
          "type": "string",
          "title": "FQDN"
        },
        "email": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "postalAddress": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateOrProvince": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updatedBy": {
          "type": "string",
          "title": "user"
        }
      }
    },
    "api.Permission": {
      "type": "object",
      "properties": {
        "id": {
          "description": "[required] e.g.: 'read', 'playback_record_file', ...",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "[optional] e.g.: 'Select Any'"
        },
        "usage": {
          "type": "string",
          "title": "[optional] e.g.: 'Grants permission to select any objects'"
        }
      }
    },
    "api.Presence.SetStatusBody": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "PATCH: partial attributes",
          "items": {
            "type": "string"
          }
        },
        "publish": {
          "description": "BODY: partial modifications",
          "type": "object",
          "title": "int64 id = 1; // user.id",
          "properties": {
            "expires": {
              "type": "integer",
              "format": "int32",
              "title": "[optional] \u003cnote\u003e will be cleaned up after seconds"
            },
            "note": {
              "type": "string",
              "title": "[optional] human readable comment"
            },
            "status": {
              "type": "string",
              "title": "[optional] set of unique 'active' presentities {dnd,dlg,sip,wss}; assume {offline} if omitted"
            },
            "timestamp": {
              "type": "string",
              "format": "int64",
              "title": "[required] last activity time"
            }
          }
        }
      }
    },
    "api.PresenceStatus": {
      "type": "object",
      "title": "PresenceStatus PUBLISH",
      "properties": {
        "app": {
          "type": "string",
          "title": "[optional] service node identity"
        },
        "closed": {
          "type": "boolean",
          "title": "[optional] signify \u003cstatus\u003e tuple gone from user's presence; equls to (open == 0)"
        },
        "contact": {
          "type": "string",
          "title": "[optional] communication \u003curl\u003e"
        },
        "domain_id": {
          "type": "string",
          "format": "int64",
          "title": "[hidden] for cluster purpose"
        },
        "expires": {
          "type": "string",
          "format": "int64",
          "title": "NOTE: \u003cdnd\u003e actualy has no expires until user manualy switch it off"
        },
        "id": {
          "description": "[required] tuple unique id; \u003ctrack\u003e",
          "type": "string",
          "title": "basic:latest"
        },
        "note": {
          "type": "string",
          "title": "[optional] human readable comment"
        },
        "open": {
          "type": "integer",
          "format": "int32",
          "title": "[optional] positive value signify 'active'"
        },
        "presence": {
          "description": "// FIXME: well-known types ?\r\n repeated Dialog  call = 9;\r\n repeated Sipreg  sip = 9;\r\n repeated Websock wss = 9;",
          "type": "array",
          "title": "detailed: -registered -tracking tuples",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.PresenceStatus"
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "[optional] importance level of this within presentity's"
        },
        "sequence": {
          "type": "string",
          "format": "int64",
          "title": "[optional] this tuple (document) modifications version"
        },
        "status": {
          "type": "string",
          "title": "[optional] unique set of \u003cenum:dnd|call|sip|wss\u003e; assume \u003coffline\u003e if blank; \u003cscope\u003e on request"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "[required] opened time"
        }
      }
    },
    "api.ProductUser": {
      "type": "object",
      "title": "ProductUser GRANT details",
      "properties": {
        "domain": {
          "title": "grant to::domain",
          "$ref": "#/definitions/api.ObjectId"
        },
        "expires_at": {
          "type": "string",
          "format": "int64",
          "title": "not after"
        },
        "issued_at": {
          "type": "string",
          "format": "int64",
          "title": "not before"
        },
        "sessions": {
          "type": "integer",
          "format": "int32",
          "title": "User's active sessions count !"
        },
        "user": {
          "title": "grant to::user",
          "$ref": "#/definitions/api.ObjectId"
        }
      }
    },
    "api.ReadClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/api.ObjectClass"
        }
      }
    },
    "api.ReadDeviceResponse": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/api.Device"
        }
      }
    },
    "api.ReadDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/api.Organization"
        }
      }
    },
    "api.ReadRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/api.Role"
        }
      }
    },
    "api.ReadUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/api.User"
        }
      }
    },
    "api.Registration": {
      "type": "object",
      "title": "REGISTER SIP status",
      "properties": {
        "callid": {
          "type": "string"
        },
        "contact": {
          "type": "string",
          "title": "binding_uri"
        },
        "device": {
          "$ref": "#/definitions/api.DeviceId"
        },
        "expires_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "instance": {
          "type": "string",
          "title": "?sip.instance= register contact option"
        },
        "received": {
          "type": "string",
          "title": "registrant: remote side (proxy)"
        },
        "register_at": {
          "type": "string",
          "format": "int64"
        },
        "socket": {
          "type": "string",
          "title": "registrar: local side (host) e.g.:"
        },
        "user": {
          "$ref": "#/definitions/api.UserId"
        },
        "user_agent": {
          "type": "string"
        }
      }
    },
    "api.RevokeRoleResponse": {
      "type": "object"
    },
    "api.Role": {
      "type": "object",
      "title": "Role represents group of users",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "deleted_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "deleted_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "description": {
          "type": "string",
          "title": "short description"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "oid"
        },
        "members": {
          "description": "users/roles",
          "type": "array",
          "title": "Caller caller = 4; // TOBE removed !!!\nmap\u003cint64, string\u003e users = 4;",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "metadata": {
          "type": "object",
          "title": "Optional. Metadata bound to this role by the third party integrations\nEach attribute of this object represents separate various data\nto be able to store and merge separate keys (documents)"
        },
        "name": {
          "type": "string",
          "title": "display common name"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Permission"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "user": {
          "type": "boolean",
          "title": "READONLY. Report whether this Role refers to the internal User(=true) or Group(=false)"
        }
      }
    },
    "api.Role.Member": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "boolean",
          "title": "admin of the group ?"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "type": "string",
          "title": "user.[id|name]"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "user.id"
        },
        "name": {
          "type": "string",
          "title": "user.name"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "type": "string",
          "title": "user"
        }
      }
    },
    "api.RoleId": {
      "description": "RoleId lookup value.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique Object IDentifier"
        },
        "name": {
          "type": "string",
          "title": "Display Name"
        },
        "user": {
          "type": "boolean",
          "title": "Optional. Indicates that this role ID refers\nto the internal user as the system administrative unit"
        }
      }
    },
    "api.RoleMembersResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Role.Member"
          }
        }
      }
    },
    "api.RoleMetadataResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Optional. Partial metadata document key name"
        },
        "value": {
          "title": "Metadata value"
        }
      }
    },
    "api.Roles.UpdateRoleBody": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "partial changes",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "object",
          "title": "modifications",
          "properties": {
            "created_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "created_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "deleted_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "deleted_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "description": {
              "type": "string",
              "title": "short description"
            },
            "members": {
              "description": "users/roles",
              "type": "array",
              "title": "Caller caller = 4; // TOBE removed !!!\nmap\u003cint64, string\u003e users = 4;",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.ObjectId"
              }
            },
            "metadata": {
              "type": "object",
              "title": "Optional. Metadata bound to this role by the third party integrations\nEach attribute of this object represents separate various data\nto be able to store and merge separate keys (documents)"
            },
            "name": {
              "type": "string",
              "title": "display common name"
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.Permission"
              }
            },
            "updated_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updated_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "user": {
              "type": "boolean",
              "title": "READONLY. Report whether this Role refers to the internal User(=true) or Group(=false)"
            }
          }
        }
      }
    },
    "api.SearchClassesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "list",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectClass"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.SearchDeviceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "devices",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Device"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.SearchDomainsResponse": {
      "type": "object",
      "properties": {
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Organization"
          }
        }
      }
    },
    "api.SearchLDAPResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LDAPCatalog"
          }
        },
        "next": {
          "type": "boolean",
          "title": "result: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "result: {page} number"
        }
      }
    },
    "api.SearchOAuthServiceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.OAuthService"
          }
        },
        "next": {
          "type": "boolean",
          "title": "result: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "result: {page} number"
        }
      }
    },
    "api.SearchPermissionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "result entries",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Permission"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.SearchRolesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "roles",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Role"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "description": "select: offset {page}",
          "type": "integer",
          "format": "int32",
          "title": "pagedResultsControl response value"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.SearchUsersRequest": {
      "type": "object",
      "properties": {
        "any": {
          "description": "filter: include 'deleted' ALSO ! (inactive)",
          "type": "boolean",
          "title": "----- View Modes -----------------------------\nNOTE: by default, search NOT 'deleted' objects ONLY"
        },
        "deleted": {
          "type": "boolean",
          "title": "filter: .deleted_at NOTNULL (view: RECYCLE)"
        },
        "extension": {
          "type": "string",
          "title": "filter: .extension LIKE '{extension}'"
        },
        "fields": {
          "description": "select: output (fields,...)",
          "type": "array",
          "title": "// navigation filter\nrepeated int64 roles = 7;\n----- Search Options -------------------------",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "filter: .id = any({id}...)",
          "type": "array",
          "title": "----- Base Filters ---------------------------",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "name": {
          "type": "string",
          "title": "filter: .name ILIKE '{name}'"
        },
        "not_id": {
          "type": "array",
          "title": "filter: .id \u003c\u003e all({not_ids}...)",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "presence": {
          "$ref": "#/definitions/api.SearchUsersRequest.Presence"
        },
        "q": {
          "description": "filter: (.name|.username|.extension|.status) ILIKE '{q}'",
          "type": "string",
          "title": "----- User-specific Filters ------------------"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "select: limit {size}"
        },
        "sort": {
          "type": "array",
          "title": "select: order by (fields,...)",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "title": "filter: .status ILIKE '{status}'"
        },
        "username": {
          "type": "string",
          "title": "filter: .username ILIKE '{username}'"
        }
      }
    },
    "api.SearchUsersRequest.Presence": {
      "type": "object",
      "title": "simplified presence filter params",
      "properties": {
        "note": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "api.SearchUsersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "title": "users",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.User"
          }
        },
        "next": {
          "type": "boolean",
          "title": "search: has {next} page ?"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "select: offset {page}"
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "title": "search: limit {size}"
        }
      }
    },
    "api.ServerInfoResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "title": "int64 time = 1; // current timestamp (ms)"
        }
      }
    },
    "api.SetStatusRequest": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "PATCH: partial attributes",
          "items": {
            "type": "string"
          }
        },
        "publish": {
          "description": "BODY: partial modifications",
          "title": "int64 id = 1; // user.id",
          "$ref": "#/definitions/api.UserPresence"
        }
      }
    },
    "api.SystemObjects": {
      "type": "string",
      "default": "contacts",
      "enum": [
        "contacts",
        "cc_list",
        "cc_bucket",
        "calendars",
        "devices",
        "cc_agent",
        "cc_team",
        "cc_resource",
        "cc_resource_group",
        "cc_queue",
        "roles",
        "users",
        "cognitive_profile"
      ]
    },
    "api.TfaUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/api.UserId"
        }
      }
    },
    "api.ToggleDefaultAccessResponse": {
      "type": "object",
      "properties": {
        "granted": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.AccessRule"
          }
        },
        "revoked": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.AccessRule"
          }
        }
      }
    },
    "api.UpdateAccessResponseV1": {
      "type": "object",
      "properties": {
        "granted": {
          "type": "string",
          "format": "int64",
          "title": "Affected rules count"
        },
        "revoked": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api.UpdateClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "title": "updated",
          "$ref": "#/definitions/api.ObjectClass"
        }
      }
    },
    "api.UpdateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "title": "detailed",
          "$ref": "#/definitions/api.Customer"
        }
      }
    },
    "api.UpdateDeviceResponse": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/api.Device"
        }
      }
    },
    "api.UpdateDomainResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/api.Organization"
        }
      }
    },
    "api.UpdateRoleResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "$ref": "#/definitions/api.Role"
        }
      }
    },
    "api.UpdateUserResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "$ref": "#/definitions/api.User"
        }
      }
    },
    "api.User": {
      "description": "User profile.",
      "type": "object",
      "properties": {
        "chat_name": {
          "description": "The \"chat_name\" field is used to store the name displayed externally on the platform.\nFor example, \"chat_name\" is shown when an agent connects to chats with clients.",
          "type": "string"
        },
        "contact": {
          "description": "[optional] contact connected to this user",
          "title": "repeated Call calls = 13; // order by created_at\nrepeated Registration reged = 13; // order by register_last",
          "$ref": "#/definitions/api.ObjectId"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "deleted_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "deleted_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "device": {
          "title": "[optional] default device assigned ? WebRTC register ?",
          "$ref": "#/definitions/api.ObjectId"
        },
        "devices": {
          "description": "[editable] list of unique `regular` devices, attached to this user",
          "type": "array",
          "title": "map\u003cint64, string\u003e devices = 13;",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "email": {
          "type": "string"
        },
        "extension": {
          "type": "string",
          "title": "Caller-ID-Number:"
        },
        "hotdesks": {
          "type": "array",
          "title": "[readonly] list of unique `hotdesk` devices, assigned to this user",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Object ID"
        },
        "license": {
          "type": "array",
          "title": "list of unique licenses, granted to this user",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LicenseUser"
          }
        },
        "name": {
          "type": "string",
          "title": "Caller-ID-Name: Display Name"
        },
        "password": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "title": "set of operational permission grants",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Permission"
          }
        },
        "presence": {
          "description": "string presence = 7; // unique set of \u003cuser\u003e presentity \u003cstatus:basic\u003e tuples open[ed]\n string status = 8; // short display status (short description)",
          "title": "CallerId caller = 5; // extension\nPresenceStatus presence = 8;",
          "$ref": "#/definitions/api.UserPresence"
        },
        "profile": {
          "type": "object",
          "title": "list of variables, assigned to this user as an environment unit",
          "additionalProperties": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "title": "roles, member of which is this user",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "totp_url": {
          "type": "string",
          "title": "[readonly][optional] one time password if setting (2fa) is enabled"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/api.UserId"
        },
        "username": {
          "type": "string",
          "title": "alphanumeric username (login)"
        }
      }
    },
    "api.UserAccessToken": {
      "description": "UserId lookup value.",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix::ms"
        },
        "created_by": {
          "$ref": "#/definitions/api.ObjectId"
        },
        "deleted_at": {
          "type": "string",
          "format": "int64",
          "title": "[optional] disabled at"
        },
        "deleted_by": {
          "title": "[optional] disabled by",
          "$ref": "#/definitions/api.ObjectId"
        },
        "id": {
          "type": "string",
          "title": "tokenKey::token_key"
        },
        "token": {
          "type": "string",
          "title": "tokenString::access_token"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix::ms"
        },
        "updated_by": {
          "$ref": "#/definitions/api.ObjectId"
        },
        "usage": {
          "type": "string",
          "title": "[optional] short usage description"
        },
        "user": {
          "title": "[optional] output depends on API endpoint",
          "$ref": "#/definitions/api.ObjectId"
        }
      }
    },
    "api.UserAccessTokenList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.UserAccessToken"
          }
        },
        "next": {
          "type": "boolean",
          "title": "is there more results ? next page is available ?"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "api.UserId": {
      "description": "UserId lookup value.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Object ID"
        },
        "name": {
          "type": "string",
          "title": "Display Name"
        }
      }
    },
    "api.UserPresence": {
      "type": "object",
      "properties": {
        "expires": {
          "type": "integer",
          "format": "int32",
          "title": "[optional] \u003cnote\u003e will be cleaned up after seconds"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "[required] user identity"
        },
        "note": {
          "type": "string",
          "title": "[optional] human readable comment"
        },
        "status": {
          "type": "string",
          "title": "[optional] set of unique 'active' presentities {dnd,dlg,sip,wss}; assume {offline} if omitted"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "[required] last activity time"
        }
      }
    },
    "api.UserSetting": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {}
      }
    },
    "api.Userinfo": {
      "type": "object",
      "title": "https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims",
      "properties": {
        "dc": {
          "type": "string",
          "format": "int64",
          "title": "current domain component id"
        },
        "domain": {
          "type": "string",
          "title": "session domain.name"
        },
        "expires_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "extension": {
          "type": "string"
        },
        "license": {
          "type": "array",
          "title": "map[key]details",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.LicenseUser"
          }
        },
        "name": {
          "type": "string",
          "title": "current user.id"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Permission"
          }
        },
        "preferred_username": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "title": "map[role]oid",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.ObjectId"
          }
        },
        "scope": {
          "type": "array",
          "title": "map[class]dac",
          "items": {
            "type": "object",
            "$ref": "#/definitions/api.Objclass"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "user last updated"
        },
        "user_id": {
          "type": "string",
          "format": "int64",
          "title": "current user.id"
        },
        "username": {
          "type": "string",
          "title": "session end-user login"
        }
      }
    },
    "api.Users.LogoutUserBody": {
      "type": "object"
    },
    "api.Users.UpdateUserBody": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "PATCH: partial update",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "object",
          "title": "body: modifications/changes",
          "properties": {
            "contact": {
              "description": "[optional] contact connected to this user",
              "title": "repeated Call calls = 13; // order by created_at\nrepeated Registration reged = 13; // order by register_last",
              "$ref": "#/definitions/api.ObjectId"
            },
            "created_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "created_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "deleted_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "deleted_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "device": {
              "title": "[optional] default device assigned ? WebRTC register ?",
              "$ref": "#/definitions/api.ObjectId"
            },
            "devices": {
              "description": "[editable] list of unique `regular` devices, attached to this user",
              "type": "array",
              "title": "map\u003cint64, string\u003e devices = 13;",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.ObjectId"
              }
            },
            "email": {
              "type": "string"
            },
            "extension": {
              "type": "string",
              "title": "Caller-ID-Number:"
            },
            "hotdesks": {
              "type": "array",
              "title": "[readonly] list of unique `hotdesk` devices, assigned to this user",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.ObjectId"
              }
            },
            "license": {
              "type": "array",
              "title": "list of unique licenses, granted to this user",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.LicenseUser"
              }
            },
            "name": {
              "type": "string",
              "title": "Caller-ID-Name: Display Name"
            },
            "password": {
              "type": "string"
            },
            "permissions": {
              "type": "array",
              "title": "set of operational permission grants",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.Permission"
              }
            },
            "presence": {
              "description": "string presence = 7; // unique set of \u003cuser\u003e presentity \u003cstatus:basic\u003e tuples open[ed]\n string status = 8; // short display status (short description)",
              "title": "CallerId caller = 5; // extension\nPresenceStatus presence = 8;",
              "$ref": "#/definitions/api.UserPresence"
            },
            "profile": {
              "type": "object",
              "title": "list of variables, assigned to this user as an environment unit",
              "additionalProperties": {
                "type": "string"
              }
            },
            "roles": {
              "type": "array",
              "title": "roles, member of which is this user",
              "items": {
                "type": "object",
                "$ref": "#/definitions/api.ObjectId"
              }
            },
            "totp_url": {
              "type": "string",
              "title": "[readonly][optional] one time password if setting (2fa) is enabled"
            },
            "updated_at": {
              "type": "string",
              "format": "int64",
              "title": "unix"
            },
            "updated_by": {
              "title": "user",
              "$ref": "#/definitions/api.UserId"
            },
            "username": {
              "type": "string",
              "title": "alphanumeric username (login)"
            }
          }
        }
      }
    },
    "api.Verification": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "title": "invalid",
          "items": {
            "type": "string"
          }
        },
        "notify": {
          "type": "array",
          "title": "non-fatal warnings, e.g.:",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "engine.AcceptOfDay": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "disabled": {
          "type": "boolean"
        },
        "end_time_of_day": {
          "type": "integer",
          "format": "int32"
        },
        "start_time_of_day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.ActiveCall": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "app_id": {
          "type": "string"
        },
        "bill_sec": {
          "type": "integer",
          "format": "int32"
        },
        "blind_transfer": {
          "type": "string"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bridged_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/engine.Endpoint"
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "hold_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "member": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "parent_id": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "queue_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "queue_duration_sec": {
          "type": "integer",
          "format": "int32"
        },
        "queue_wait_sec": {
          "type": "integer",
          "format": "int32"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "reporting_sec": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "to": {
          "$ref": "#/definitions/engine.Endpoint"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.ActivityWorkspaceWidgetResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "call_abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "call_dialer_queue": {
          "type": "integer",
          "format": "int32"
        },
        "call_handled": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound_queue": {
          "type": "integer",
          "format": "int32"
        },
        "call_manual": {
          "type": "integer",
          "format": "int32"
        },
        "call_missed": {
          "type": "integer",
          "format": "int32"
        },
        "call_queue_missed": {
          "type": "integer",
          "format": "int32"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "number",
          "format": "float"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "online": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "integer",
          "format": "int32"
        },
        "queue_talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_optional_sum": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_sum": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "string",
          "format": "int64"
        },
        "task_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "voice_mail": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.Agent": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allow_set_screen_control": {
          "type": "boolean"
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "channel": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentChannel"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "greeting_media": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_supervisor": {
          "type": "boolean"
        },
        "last_status_change": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "screen_control": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentCallStatistics": {
      "type": "object",
      "properties": {
        "abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "handles": {
          "type": "integer",
          "format": "int32"
        },
        "max_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "max_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "min_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "min_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "name": {
          "type": "string"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "sum_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.AgentCallStatisticsList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentCallStatistics"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.AgentChannel": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.AgentInQueue": {
      "type": "object",
      "properties": {
        "active_members": {
          "type": "integer",
          "format": "int32"
        },
        "agents": {
          "$ref": "#/definitions/engine.AgentInQueue.AgentsInQueue"
        },
        "count_members": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "max_member_limit": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "strategy": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "waiting_members": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.AgentInQueue.AgentsInQueue": {
      "type": "object",
      "properties": {
        "allow_pause": {
          "type": "integer",
          "format": "int32"
        },
        "free": {
          "type": "integer",
          "format": "int64"
        },
        "offline": {
          "type": "integer",
          "format": "int64"
        },
        "online": {
          "type": "integer",
          "format": "int64"
        },
        "pause": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engine.AgentInQueueStatistics": {
      "type": "object",
      "properties": {
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "statistics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentInQueueStatistics.AgentInQueueStatisticsItem"
          }
        }
      }
    },
    "engine.AgentInQueueStatistics.AgentInQueueStatisticsItem": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "member_waiting": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentInQueueStatisticsList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentInQueueStatistics"
          }
        }
      }
    },
    "engine.AgentInTeam": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentPauseCause": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean"
        },
        "allow_agent": {
          "type": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentPauseCauseService.PatchAgentPauseCauseBody": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean"
        },
        "allow_agent": {
          "type": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.AgentPauseCauseService.UpdateAgentPauseCauseBody": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean"
        },
        "allow_agent": {
          "type": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.AgentService.AgentSetStateBody": {
      "type": "object"
    },
    "engine.AgentService.PatchAgentBody": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greeting_media": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "is_supervisor": {
          "type": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "screen_control": {
          "type": "boolean"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentService.UpdateAgentBody": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "greeting_media": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "is_supervisor": {
          "type": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "screen_control": {
          "type": "boolean"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentService.UpdateAgentStatusBody": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "on_demand": {
          "type": "boolean"
        },
        "payload": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "FIXME enumerate"
        }
      }
    },
    "engine.AgentSetStateResponse": {
      "type": "object"
    },
    "engine.AgentSkill": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentSkillItem": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentSkillService.CreateAgentSkillBody": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentSkillService.CreateAgentSkillsBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CreateAgentSkillBulkItem"
          }
        }
      }
    },
    "engine.AgentSkillService.PatchAgentSkillBody": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentSkillService.PatchAgentSkillsBody": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "skill_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engine.AgentSkillService.UpdateAgentSkillBody": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentState": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "channel": {
          "type": "string"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "engine.AgentStatsStatistic": {
      "type": "object",
      "properties": {
        "active_call_id": {
          "type": "string"
        },
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "call_time": {
          "type": "string",
          "format": "int64"
        },
        "chat_count": {
          "type": "integer",
          "format": "int32"
        },
        "desc_track": {
          "type": "boolean"
        },
        "extension": {
          "type": "string"
        },
        "handles": {
          "type": "integer",
          "format": "int32"
        },
        "max_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "max_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "missed": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "offline": {
          "type": "string",
          "format": "int64"
        },
        "online": {
          "type": "string",
          "format": "int64"
        },
        "pause": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "transferred": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.AgentStatusStatisticItem": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "desc_track": {
          "type": "boolean"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offline": {
          "type": "string",
          "format": "int64"
        },
        "online": {
          "type": "string",
          "format": "int64"
        },
        "pause": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int64"
        },
        "region": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AgentTeam": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "forecast_calculation": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "screen_control": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.AgentTeamService.UpdateAgentTeamBody": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "forecast_calculation": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "screen_control": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.AgentTodayStatisticsResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "call_abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "call_dialer_queue": {
          "type": "integer",
          "format": "int32"
        },
        "call_handled": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound_queue": {
          "type": "integer",
          "format": "int32"
        },
        "call_manual": {
          "type": "integer",
          "format": "int32"
        },
        "call_missed": {
          "type": "integer",
          "format": "int32"
        },
        "call_queue_missed": {
          "type": "integer",
          "format": "int32"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "number",
          "format": "float"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "online": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "integer",
          "format": "int32"
        },
        "queue_talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_optional_sum": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_sum": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "string",
          "format": "int64"
        },
        "task_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "voice_mail": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.AgentUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.AggregateHistoryCallRequest": {
      "type": "object",
      "properties": {
        "agent_description": {
          "type": "string"
        },
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "aggs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AggregateRequest"
          }
        },
        "amd_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answered_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "dependency_id": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "fts": {
          "type": "string"
        },
        "gateway_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "has_file": {
          "type": "boolean"
        },
        "has_transcript": {
          "type": "boolean"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "missed": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "parent_id": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "skip_parent": {
          "type": "boolean"
        },
        "stored_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "team_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "transfer_from": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transfer_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.AggregateRequest": {
      "type": "object",
      "properties": {
        "avg": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "count": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AggregateRequest.Group"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "min": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "engine.AggregateRequest.Group": {
      "type": "object",
      "properties": {
        "aggregate": {
          "type": "string"
        },
        "desc": {
          "type": "boolean"
        },
        "field": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "top": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.AggregateResult": {
      "type": "object",
      "properties": {
        "data": {},
        "name": {
          "type": "string"
        }
      }
    },
    "engine.Attempt": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "agent_call_id": {
          "type": "string"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "channel": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/engine.MemberCommunication"
        },
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "last_state_change": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "list": {
          "title": "black list ?",
          "$ref": "#/definitions/engine.Lookup"
        },
        "member": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "member_call_id": {
          "type": "string"
        },
        "offering_at": {
          "type": "string",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "result": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.AttemptHistory": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "agent_call_id": {
          "type": "string"
        },
        "amd_result": {
          "type": "string"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "channel": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/engine.MemberCommunication"
        },
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "list": {
          "title": "black list ?",
          "$ref": "#/definitions/engine.Lookup"
        },
        "member": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "member_call_id": {
          "type": "string"
        },
        "offered_agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "offering_at": {
          "type": "string",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "result": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.AttemptRenewalResultResponse": {
      "type": "object"
    },
    "engine.AttemptResultResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engine.AuditForm": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "editable": {
          "type": "boolean",
          "title": "bool archive = 11;"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AuditFormService.PatchAuditFormBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question"
          }
        },
        "teams": {
          "type": "array",
          "title": "bool archive = 8;",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        }
      }
    },
    "engine.AuditFormService.UpdateAuditFormBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question"
          }
        },
        "teams": {
          "type": "array",
          "title": "bool archive = 7;",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        }
      }
    },
    "engine.AuditFormService.UpdateAuditRateBody": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.UpdateQuestionAnswerRequest"
          }
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "engine.AuditQuestionType": {
      "type": "string",
      "default": "question_default",
      "enum": [
        "question_default",
        "question_score",
        "question_option",
        "question_yes"
      ]
    },
    "engine.AuditRate": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QuestionAnswer"
          }
        },
        "comment": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "critical_count": {
          "type": "string",
          "format": "int64"
        },
        "form": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question"
          }
        },
        "rated_user": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "score_optional": {
          "type": "number",
          "format": "float"
        },
        "score_required": {
          "type": "number",
          "format": "float"
        },
        "select_yes_count": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.AvailableSystemSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engine.BlindTransferCallResponse": {
      "type": "object"
    },
    "engine.Bucket": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.BucketService.UpdateBucketBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.Calendar": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ExceptDate"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "specials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CalendarService.UpdateCalendarBody": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ExceptDate"
          }
        },
        "name": {
          "type": "string"
        },
        "specials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CallAnnotation": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CallFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "start_record": {
          "type": "string"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallHold": {
      "type": "object",
      "properties": {
        "sec": {
          "type": "number",
          "format": "float"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "stop": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.BlindTransferCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.CreateCallAnnotationBody": {
      "type": "object",
      "properties": {
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.CallService.DtmfCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "digit": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.EavesdropCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "control": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/engine.EavesdropCallRequest.EndpointRequest"
        },
        "listen_a": {
          "type": "boolean"
        },
        "listen_b": {
          "type": "boolean"
        },
        "whisper_a": {
          "type": "boolean"
        },
        "whisper_b": {
          "type": "boolean"
        }
      }
    },
    "engine.CallService.HangupCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.HoldCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.PatchHistoryCallBody": {
      "type": "object",
      "properties": {
        "hide_missed": {
          "type": "boolean"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CallService.RedialCallBody": {
      "type": "object"
    },
    "engine.CallService.SetVariablesCallBody": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CallService.UnHoldCallBody": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CallService.UpdateCallAnnotationBody": {
      "type": "object",
      "properties": {
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.ChatPlan": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CommunicationChannels": {
      "type": "string",
      "default": "Undefined",
      "enum": [
        "Undefined",
        "Phone",
        "Email",
        "Messaging"
      ]
    },
    "engine.CommunicationType": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engine.CommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CommunicationTypeRequest": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engine.CommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CommunicationTypeService.PatchCommunicationTypeBody": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engine.CommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CommunicationTypeService.UpdateCommunicationTypeBody": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engine.CommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.ConfirmPushResponse": {
      "type": "object"
    },
    "engine.CreateAgentPauseCauseRequest": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean"
        },
        "allow_agent": {
          "type": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CreateAgentRequest": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "greeting_media": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "is_supervisor": {
          "type": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "screen_control": {
          "type": "boolean"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateAgentSkillBulkItem": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateAgentSkillsResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engine.CreateAgentTeamRequest": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "forecast_calculation": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "screen_control": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.CreateAttemptResponse": {
      "type": "object",
      "properties": {
        "attempt_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CreateAuditFormRateRequest": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CreateQuestionAnswerRequest"
          }
        },
        "call_id": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "form": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateAuditFormRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        }
      }
    },
    "engine.CreateBucketRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CreateCalendarRequest": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ExceptDate"
          }
        },
        "name": {
          "type": "string"
        },
        "specials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AcceptOfDay"
          }
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateCallRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "from": {
          "$ref": "#/definitions/engine.CreateCallRequest.EndpointRequest"
        },
        "params": {
          "$ref": "#/definitions/engine.CreateCallRequest.CallSettings"
        },
        "to": {
          "$ref": "#/definitions/engine.CreateCallRequest.EndpointRequest"
        }
      }
    },
    "engine.CreateCallRequest.CallSettings": {
      "type": "object",
      "properties": {
        "audio": {
          "type": "boolean"
        },
        "cancel_distribute": {
          "type": "boolean"
        },
        "disable_auto_answer": {
          "type": "boolean"
        },
        "disable_stun": {
          "type": "boolean"
        },
        "display": {
          "type": "string"
        },
        "hide_number": {
          "type": "boolean"
        },
        "is_online": {
          "type": "boolean"
        },
        "record": {
          "type": "boolean"
        },
        "screen": {
          "type": "boolean"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "video": {
          "type": "boolean"
        }
      }
    },
    "engine.CreateCallRequest.EndpointRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engine.CreateCallResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "engine.CreateChatPlanRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateEmailProfileRequest": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engine.EmailAuthType"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engine.EmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.CreateListRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CreateMemberBulkItem": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunicationCreateRequest"
          }
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CreateOutboundResourceDisplayRequest": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.CreateOutboundResourceGroupRequest": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResourceTimeRange"
          }
        }
      }
    },
    "engine.CreateOutboundResourceRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engine.OutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CreatePresetQueryRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "preset": {},
        "section": {
          "type": "string"
        }
      }
    },
    "engine.CreateQuestionAnswerRequest": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.CreateQueueRequest": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "calendar": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "form_schema": {
          "title": "deprecated",
          "$ref": "#/definitions/engine.Lookup"
        },
        "grantee": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "title": "deprecated"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "ringtone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Tag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engine.TaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CreateQuickReplyRequest": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "name": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "engine.CreateRegionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateRoutingOutboundCallRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.CreateRoutingSchemaRequest": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "schema": {},
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engine.RoutingSchemaType"
        }
      }
    },
    "engine.CreateRoutingVariableRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engine.CreateSchemaVariableRequest": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "value": {}
      }
    },
    "engine.CreateSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SkillAgentItem"
          }
        }
      }
    },
    "engine.CreateSkillRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.CreateSystemSettingRequest": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/engine.SystemSettingName"
        },
        "value": {}
      }
    },
    "engine.CreateTriggerRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TriggerEventType"
        },
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/engine.TriggerObjectType"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "type": {
          "$ref": "#/definitions/engine.TriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.CreateWebHookRequest": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.DefaultDeviceConfigResponse": {
      "type": "object",
      "properties": {
        "sip": {
          "$ref": "#/definitions/engine.DefaultDeviceConfigResponse.SipDeviceConfig"
        },
        "webrtc": {
          "$ref": "#/definitions/engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig"
        }
      }
    },
    "engine.DefaultDeviceConfigResponse.SipDeviceConfig": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "proxy": {
          "type": "string"
        }
      }
    },
    "engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig": {
      "type": "object",
      "properties": {
        "authorization_user": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "ha1": {
          "type": "string"
        },
        "realm": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "engine.DeleteAllMembersRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "attempts": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "bucket_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "destination": {
          "type": "string"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offering_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "priority": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "stop_cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "without_members": {
          "type": "boolean"
        }
      }
    },
    "engine.DeleteSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SkillAgentItem"
          }
        }
      }
    },
    "engine.DtmfCallResponse": {
      "type": "object"
    },
    "engine.EavesdropCallRequest.EndpointRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engine.EmailAuthType": {
      "type": "string",
      "default": "EmailAuthTypeUndefined",
      "enum": [
        "EmailAuthTypeUndefined",
        "Plain",
        "OAuth2"
      ]
    },
    "engine.EmailProfile": {
      "type": "object",
      "properties": {
        "activity_at": {
          "type": "string",
          "format": "int64"
        },
        "auth_type": {
          "$ref": "#/definitions/engine.EmailAuthType"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fetch_error": {
          "type": "string"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean"
        },
        "logged": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engine.EmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.EmailProfileParams": {
      "type": "object",
      "properties": {
        "oauth2": {
          "$ref": "#/definitions/engine.EmailProfileParams.OAuth2"
        }
      }
    },
    "engine.EmailProfileParams.OAuth2": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        }
      }
    },
    "engine.EmailProfileService.PatchEmailProfileBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.EmailProfileService.UpdateEmailProfileBody": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engine.EmailAuthType"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engine.EmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.EmptyResponse": {
      "type": "object"
    },
    "engine.Endpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engine.ExceptDate": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64"
        },
        "disabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "repeat": {
          "type": "boolean"
        },
        "work_start": {
          "type": "integer",
          "format": "int32"
        },
        "work_stop": {
          "type": "integer",
          "format": "int32"
        },
        "working": {
          "type": "boolean"
        }
      }
    },
    "engine.Feedback": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "rating": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.FilterBetween": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "int64"
        },
        "to": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.ForAgentPauseCause": {
      "type": "object",
      "properties": {
        "duration_min": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.ForAgentPauseCauseList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ForAgentPauseCause"
          }
        }
      }
    },
    "engine.GenerateFeedbackResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "engine.GetQueuesGlobalStateResponse": {
      "type": "object",
      "properties": {
        "is_all_enabled": {
          "type": "boolean"
        }
      }
    },
    "engine.HangupCallResponse": {
      "type": "object"
    },
    "engine.HistoryCall": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "agent_description": {
          "type": "string"
        },
        "allow_evaluation": {
          "type": "boolean"
        },
        "amd_ai_logs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amd_ai_result": {
          "type": "string"
        },
        "amd_result": {
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CallAnnotation"
          }
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "app_id": {
          "type": "string"
        },
        "attempt_id": {
          "type": "string",
          "format": "int64"
        },
        "bill_sec": {
          "type": "integer",
          "format": "int32"
        },
        "blind_transfer": {
          "type": "string"
        },
        "blind_transfers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.HistoryCall.BlindTransfer"
          }
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bridged_id": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "destination_name": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CallFile"
          }
        },
        "files_job": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.HistoryFileJob"
          }
        },
        "form_fields": {},
        "forms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.HistoryCall.CallForm"
          }
        },
        "from": {
          "$ref": "#/definitions/engine.Endpoint"
        },
        "from_number": {
          "type": "string"
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "grantee": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "hangup_at": {
          "type": "string",
          "format": "int64"
        },
        "hangup_by": {
          "type": "string"
        },
        "hangup_disposition": {
          "type": "string"
        },
        "hangup_phrase": {
          "type": "string"
        },
        "has_children": {
          "type": "boolean"
        },
        "hold": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CallHold"
          }
        },
        "hold_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "member": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "member_id": {
          "type": "string",
          "format": "int64"
        },
        "parent_id": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "queue_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "queue_duration_sec": {
          "type": "integer",
          "format": "int32"
        },
        "queue_wait_sec": {
          "type": "integer",
          "format": "int32"
        },
        "rate_id": {
          "type": "string",
          "format": "int64"
        },
        "rated_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "rated_user": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "reporting_sec": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "string"
        },
        "schemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "score_optional": {
          "type": "number",
          "format": "float"
        },
        "score_required": {
          "type": "number",
          "format": "float"
        },
        "sip_code": {
          "type": "integer",
          "format": "int32"
        },
        "stored_at": {
          "type": "string",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "to": {
          "$ref": "#/definitions/engine.Endpoint"
        },
        "to_number": {
          "type": "string"
        },
        "transcripts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.TranscriptLookup"
          }
        },
        "transfer_from": {
          "type": "string"
        },
        "transfer_to": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.HistoryCall.BlindTransfer": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.HistoryCall.CallForm": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "form_fields": {},
        "reporting_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.HistoryFileJob": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/engine.HistoryFileJob.HistoryFileJobAction"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "error_detail": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "$ref": "#/definitions/engine.HistoryFileJob.HistoryFileJobState"
        }
      }
    },
    "engine.HistoryFileJob.HistoryFileJobAction": {
      "type": "string",
      "default": "undefined",
      "enum": [
        "undefined",
        "STT",
        "delete"
      ]
    },
    "engine.HistoryFileJob.HistoryFileJobState": {
      "type": "string",
      "title": "- error: TODO",
      "default": "idle",
      "enum": [
        "idle",
        "active",
        "finished",
        "error"
      ]
    },
    "engine.HoldCallResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "engine.List": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.ListAgent": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Agent"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentInQueue": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentInQueue"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentInTeam": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentInTeam"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentPauseCause": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentPauseCause"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentSkillItem"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentStateHistory": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentState"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentStatsStatistic": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentStatsStatistic"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentTeam": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentTeam"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAgentUser": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AgentUser"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAggregate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AggregateResult"
          }
        }
      }
    },
    "engine.ListAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Attempt"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAuditForm": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AuditForm"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAuditRate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AuditRate"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListAvailableSystemSetting": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AvailableSystemSetting"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListBucket": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Bucket"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListCalendar": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Calendar"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ActiveCall"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListChatPlan": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ChatPlan"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListCommunication": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "list_id": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engine.ListCommunicationType": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CommunicationType"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListEmailProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.EmailProfile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListHistoryAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.AttemptHistory"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListHistoryCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.HistoryCall"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListMember": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberInQueue"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListMemberAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberAttempt"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOfList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.List"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOfListCommunication": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ListCommunication"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOpenedWebSocket": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OpenedWebSocket"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOutboundResource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResource"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOutboundResourceDisplay": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.ResourceDisplay"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOutboundResourceGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResourceViewGroup"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListOutboundResourceInGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResourceInGroup"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListPresetQuery": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.PresetQuery"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQueue": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Queue"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQueueBucket": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QueueBucket"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQueueHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QueueHook"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQueueResourceGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QueueResourceGroup"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQueueSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QueueSkill"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListQuickReplies": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QuickReply"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListRegion": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Region"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListReportGeneral": {
      "type": "object",
      "properties": {
        "aggs": {
          "$ref": "#/definitions/engine.QueueReportGeneralAgentStatus"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.QueueReportGeneral"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListResourceDisplay": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engine.ListRoutingOutboundCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.RoutingOutboundCallCompact"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListRoutingSchema": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.RoutingSchema"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListRoutingSchemaTags": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.RoutingSchemaTag"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListRoutingVariable": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.RoutingVariable"
          }
        }
      }
    },
    "engine.ListSchemaVariable": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaVariable"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListService.CreateListCommunicationBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engine.ListService.UpdateListBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.ListService.UpdateListCommunicationBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engine.ListSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Skill"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListSkillAgent": {
      "type": "object",
      "properties": {
        "aggs": {
          "$ref": "#/definitions/engine.ListSkillAgent.ListSkillAgg"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SkillAgentItem"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListSkillAgent.ListSkillAgg": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "engine.ListSystemSetting": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SystemSetting"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTags": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Tag"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTeamHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.TeamHook"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTeamTrigger": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.TeamTrigger"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTimezoneResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Timezone"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTrigger": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Trigger"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListTriggerJob": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.TriggerJob"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListUserStatus": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.UserStatus"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.ListWebHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.WebHook"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.LoginEmailProfileResponse": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engine.EmailAuthType"
        },
        "cookie": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "redirect_url": {
          "type": "string"
        }
      }
    },
    "engine.LogoutEmailProfileResponse": {
      "type": "object"
    },
    "engine.Lookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.MemberAttempt": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "hangup_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "leg_a_id": {
          "type": "string"
        },
        "leg_b_id": {
          "type": "string"
        },
        "logs": {},
        "member": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "node": {
          "type": "string"
        },
        "originate_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "result": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.MemberBulkResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engine.MemberCommunication": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dtmf": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_activity_at": {
          "type": "string",
          "format": "int64"
        },
        "last_cause": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "state": {
          "type": "integer",
          "format": "int32"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.MemberCommunicationCreateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dtmf": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.MemberInQueue": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunication"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_activity_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64",
          "title": "deprecated"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "reserved": {
          "type": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MemberService.AttemptCallbackBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "boolean"
        },
        "exclude_current_communication": {
          "type": "boolean"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "only_current_communication": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_between_retries": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.MemberService.AttemptResultBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "boolean"
        },
        "exclude_current_communication": {
          "type": "boolean"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "next_member_id": {
          "type": "string",
          "format": "int64"
        },
        "only_current_communication": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "transfer_queue_id": {
          "type": "string",
          "format": "int64"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_between_retries": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.MemberService.AttemptsRenewalResultBody": {
      "type": "object",
      "properties": {
        "renewal": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engine.MemberService.CreateAttemptBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.MemberService.CreateMemberBody": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MemberService.CreateMemberBulkBody": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CreateMemberBulkItem"
          }
        }
      }
    },
    "engine.MemberService.DeleteMembersBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "attempts": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "bucket_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "destination": {
          "type": "string"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "ids": {
          "type": "array",
          "title": "deprecated",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offering_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "priority": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "q": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "stop_cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "without_members": {
          "type": "boolean"
        }
      }
    },
    "engine.MemberService.PatchMemberBody": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MemberService.PatchMemberOneBody": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MemberService.ResetMembersBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "bucket_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "stop_cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MemberService.UpdateMemberBody": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.MemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.MovePositionRoutingOutboundCallResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "engine.OpenedWebSocket": {
      "type": "object",
      "properties": {
        "application_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "pong": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "user_agent": {
          "type": "string"
        },
        "ver": {
          "type": "string"
        }
      }
    },
    "engine.OutboundResource": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_error_at": {
          "type": "string",
          "format": "int64"
        },
        "last_error_id": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engine.OutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.OutboundResourceGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResourceTimeRange"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.OutboundResourceGroupService.CreateOutboundResourceInGroupBody": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.OutboundResourceGroupService.UpdateOutboundResourceGroupBody": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.OutboundResourceTimeRange"
          }
        }
      }
    },
    "engine.OutboundResourceGroupService.UpdateOutboundResourceInGroupBody": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.OutboundResourceInGroup": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "resource": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.OutboundResourceParameters": {
      "type": "object",
      "properties": {
        "cid_type": {
          "type": "string"
        },
        "ignore_early_media": {
          "type": "string"
        }
      }
    },
    "engine.OutboundResourceService.CreateOutboundResourceDisplayBody": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.OutboundResourceService.CreateOutboundResourceDisplayBulkBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.CreateOutboundResourceDisplayRequest"
          }
        }
      }
    },
    "engine.OutboundResourceService.PatchOutboundResourceBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engine.OutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.OutboundResourceService.UpdateOutboundResourceBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engine.OutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.OutboundResourceService.UpdateOutboundResourceDisplayBody": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.OutboundResourceTimeRange": {
      "type": "object",
      "properties": {
        "end_time_of_day": {
          "type": "integer",
          "format": "int32"
        },
        "start_time_of_day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.OutboundResourceViewGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        }
      }
    },
    "engine.PatchSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SkillAgentItem"
          }
        }
      }
    },
    "engine.PresetQuery": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "preset": {},
        "section": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.PresetQueryService.PatchPresetQueryBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "preset": {},
        "section": {
          "type": "string"
        }
      }
    },
    "engine.PresetQueryService.UpdatePresetQueryBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "preset": {},
        "section": {
          "type": "string"
        }
      }
    },
    "engine.Question": {
      "type": "object",
      "properties": {
        "critical_violation": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Question.Option"
          }
        },
        "question": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/engine.AuditQuestionType"
        }
      }
    },
    "engine.Question.Option": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.QuestionAnswer": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.Queue": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "after_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "calendar": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "form_schema": {
          "title": "deprecated",
          "$ref": "#/definitions/engine.Lookup"
        },
        "grantee": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "title": "deprecated"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "ringtone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Tag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engine.TaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "waiting": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.QueueBucket": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "disabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.QueueBucketService.CreateQueueBucketBody": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "disabled": {
          "type": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.QueueBucketService.PatchQueueBucketBody": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "disabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.QueueBucketService.UpdateQueueBucketBody": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "disabled": {
          "type": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.QueueHook": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueHookService.CreateQueueHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueHookService.PatchQueueHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueHookService.UpdateQueueHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueReportGeneral": {
      "type": "object",
      "properties": {
        "abandoned": {
          "type": "integer",
          "format": "int64"
        },
        "agent_status": {
          "$ref": "#/definitions/engine.QueueReportGeneralAgentStatus"
        },
        "attempts": {
          "type": "integer",
          "format": "int64"
        },
        "avg_aht_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_asa_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_awt_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_wrap_sec": {
          "type": "number",
          "format": "float"
        },
        "bridged": {
          "type": "number",
          "format": "float"
        },
        "count": {
          "type": "string",
          "format": "uint64"
        },
        "missed": {
          "type": "integer",
          "format": "int64"
        },
        "processed": {
          "type": "integer",
          "format": "int64"
        },
        "queue": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "sl20": {
          "type": "number",
          "format": "float"
        },
        "sl30": {
          "type": "number",
          "format": "float"
        },
        "sum_bill_sec": {
          "type": "number",
          "format": "float"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "transferred": {
          "type": "integer",
          "format": "int64"
        },
        "waiting": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engine.QueueReportGeneralAgentStatus": {
      "type": "object",
      "properties": {
        "free": {
          "type": "integer",
          "format": "int64"
        },
        "offline": {
          "type": "integer",
          "format": "int64"
        },
        "online": {
          "type": "integer",
          "format": "int64"
        },
        "pause": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engine.QueueResourceGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueResourcesService.CreateQueueResourceGroupBody": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueResourcesService.UpdateQueueResourceGroupBody": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueService.PatchQueueBody": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "calendar": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "form_schema": {
          "title": "deprecated",
          "$ref": "#/definitions/engine.Lookup"
        },
        "grantee": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "title": "deprecated"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "ringtone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Tag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engine.TaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.QueueService.UpdateQueueBody": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "calendar": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "form_schema": {
          "title": "deprecated",
          "$ref": "#/definitions/engine.Lookup"
        },
        "grantee": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "title": "deprecated"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64",
          "title": "deprecated"
        },
        "ringtone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Tag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engine.TaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.QueueSkill": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueSkillService.CreateQueueSkillBody": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueSkillService.PatchQueueSkillBody": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QueueSkillService.UpdateQueueSkillBody": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.QuickRepliesService.PatchQuickReplyBody": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "engine.QuickRepliesService.UpdateQuickReplyBody": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "name": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "engine.QuickReply": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "text": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.Region": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RegionService.PatchRegionBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RegionService.UpdateRegionBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.ResetActiveAttemptsRequest": {
      "type": "object",
      "properties": {
        "attempt_type": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idle_for_minutes": {
          "type": "string",
          "format": "int64"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "engine.ResetActiveAttemptsResponse": {
      "type": "object"
    },
    "engine.ResetMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.ResourceDisplay": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engine.RoutingChatPlanService.PatchChatPlanBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingChatPlanService.UpdateChatPlanBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingOutboundCall": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingOutboundCallCompact": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingOutboundCallService.MovePositionRoutingOutboundCallBody": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engine.RoutingOutboundCallService.PatchRoutingOutboundCallBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingOutboundCallService.UpdateRoutingOutboundCallBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingSchema": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "debug": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {},
        "schema": {},
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engine.RoutingSchemaType"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.RoutingSchemaService.PatchRoutingSchemaBody": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "payload": {},
        "schema": {},
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engine.RoutingSchemaType"
        }
      }
    },
    "engine.RoutingSchemaService.UpdateRoutingSchemaBody": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "payload": {},
        "schema": {},
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engine.RoutingSchemaType"
        }
      }
    },
    "engine.RoutingSchemaTag": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.RoutingSchemaType": {
      "type": "string",
      "default": "default",
      "enum": [
        "default",
        "voice",
        "chat",
        "processing",
        "service"
      ]
    },
    "engine.RoutingVariable": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engine.RoutingVariableService.UpdateRoutingVariableBody": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engine.RunTeamTriggerResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        }
      }
    },
    "engine.SchemaTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engine.SchemaVariable": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {}
      }
    },
    "engine.SchemaVariablesService.PatchSchemaVariableBody": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "value": {}
      }
    },
    "engine.SchemaVariablesService.UpdateSchemaVariableBody": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "value": {}
      }
    },
    "engine.SchemaVersion": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "note": {
          "type": "string"
        },
        "payload": {},
        "schema": {},
        "schema_id": {
          "type": "string",
          "format": "int64"
        },
        "version": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "engine.SearchHistoryCallRequest": {
      "type": "object",
      "properties": {
        "agent_description": {
          "type": "string"
        },
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "amd_ai_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amd_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answered_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "dependency_id": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fts": {
          "type": "string"
        },
        "gateway_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "grantee_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "has_file": {
          "type": "boolean"
        },
        "has_transcript": {
          "type": "boolean"
        },
        "has_transfer": {
          "type": "boolean"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "missed": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "owner_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "parent_id": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "rated": {
          "type": "boolean"
        },
        "rated_by": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "rated_user": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "schema_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "score_optional": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "score_required": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "skip_parent": {
          "type": "boolean"
        },
        "sort": {
          "type": "string"
        },
        "stored_at": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "talk": {
          "$ref": "#/definitions/engine.FilterBetween"
        },
        "team_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "timeline": {
          "type": "boolean"
        },
        "transfer_from": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transfer_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "variables[string]": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.SearchSchemaVersionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.SchemaVersion"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "engine.SendPushResponse": {
      "type": "object",
      "properties": {
        "send": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.SetQueuesGlobalStateRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "engine.SetQueuesGlobalStateResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engine.SetVariablesCallResponse": {
      "type": "object"
    },
    "engine.Skill": {
      "type": "object",
      "properties": {
        "active_agents": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "total_agents": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.SkillAgentItem": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "team": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.SkillService.CreateSkillAgentBody": {
      "type": "object",
      "properties": {
        "agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/engine.Lookup"
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "engine.SkillService.DeleteSkillAgentBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engine.SkillService.PatchSkillAgentBody": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "skill": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.SkillService.UpdateSkillBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engine.SystemSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "$ref": "#/definitions/engine.SystemSettingName"
        },
        "value": {}
      }
    },
    "engine.SystemSettingName": {
      "type": "string",
      "default": "empty_system_settings_name",
      "enum": [
        "empty_system_settings_name",
        "enable_omnichannel",
        "member_chunk_size",
        "amd_cancel_not_human",
        "scheme_version_limit",
        "enable_2fa",
        "export_settings",
        "search_number_length",
        "chat_ai_connection",
        "password_reg_exp",
        "password_validation_text",
        "autolink_call_to_contact",
        "period_to_playback_records",
        "is_fulltext_search_enabled",
        "wbt_hide_contact",
        "show_full_contact",
        "call_end_sound_notification",
        "call_end_push_notification",
        "chat_end_sound_notification",
        "chat_end_push_notification",
        "task_end_sound_notification",
        "task_end_push_notification",
        "push_notification_timeout",
        "labels_to_limit_contacts",
        "autolink_mail_to_contact",
        "new_message_sound_notification",
        "new_chat_sound_notification",
        "screenshot_interval",
        "password_expiry_days",
        "password_min_length",
        "password_min_categories"
      ]
    },
    "engine.SystemSettingService.PatchSystemSettingBody": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {}
      }
    },
    "engine.SystemSettingService.UpdateSystemSettingBody": {
      "type": "object",
      "properties": {
        "value": {}
      }
    },
    "engine.Tag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engine.TaskProcessing": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "form_schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "sec": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engine.TeamHook": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TeamHookEvent"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamHookEvent": {
      "type": "string",
      "default": "teamHookEventUndefined",
      "enum": [
        "teamHookEventUndefined",
        "agent_status"
      ]
    },
    "engine.TeamHookService.CreateTeamHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TeamHookEvent"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamHookService.PatchTeamHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TeamHookEvent"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamHookService.UpdateTeamHookBody": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TeamHookEvent"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamTrigger": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamTriggerService.CreateTeamTriggerBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamTriggerService.PatchTeamTriggerBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TeamTriggerService.RunTeamTriggerBody": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.TeamTriggerService.UpdateTeamTriggerBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TestEmailProfileResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "engine.Timezone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "offset": {
          "type": "string"
        }
      }
    },
    "engine.TranscriptLookup": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "file_id": {
          "type": "string",
          "format": "int64",
          "title": "deprecated"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "engine.Trigger": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TriggerEventType"
        },
        "expression": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/engine.TriggerObjectType"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "type": {
          "$ref": "#/definitions/engine.TriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.TriggerEventType": {
      "type": "string",
      "default": "empty_trigger_event",
      "enum": [
        "empty_trigger_event",
        "create",
        "update",
        "remove",
        "resolution_time"
      ]
    },
    "engine.TriggerJob": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "parameters": {},
        "result": {},
        "started_at": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "$ref": "#/definitions/engine.TriggerJobState"
        },
        "stopped_at": {
          "type": "string",
          "format": "int64"
        },
        "trigger": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.TriggerJobState": {
      "type": "string",
      "default": "idle",
      "enum": [
        "idle",
        "active",
        "done",
        "error"
      ]
    },
    "engine.TriggerObjectType": {
      "type": "string",
      "default": "empty_trigger_object",
      "enum": [
        "empty_trigger_object",
        "cases",
        "case_files",
        "case_comments",
        "case_links",
        "related_cases"
      ]
    },
    "engine.TriggerService.CreateTriggerJobBody": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.TriggerService.PatchTriggerBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TriggerEventType"
        },
        "expression": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/engine.TriggerObjectType"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "type": {
          "$ref": "#/definitions/engine.TriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.TriggerService.UpdateTriggerBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engine.TriggerEventType"
        },
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/engine.TriggerObjectType"
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "type": {
          "$ref": "#/definitions/engine.TriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engine.TriggerType": {
      "type": "string",
      "default": "default_trigger_type",
      "enum": [
        "default_trigger_type",
        "cron",
        "event"
      ]
    },
    "engine.UpdateQuestionAnswerRequest": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engine.UserStatus": {
      "type": "object",
      "properties": {
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "presence": {
          "$ref": "#/definitions/engine.UserStatus.UserPresence"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "engine.UserStatus.UserPresence": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engine.WebHook": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.WebHookService.PatchWebHookBody": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "engine.WebHookService.UpdateWebHookBody": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "ftsSearchData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object_name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "ftsSearchResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ftsSearchData"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "general.ExtendedLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "general.Lookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.protobuf.NullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
      "type": "string",
      "default": "NULL_VALUE",
      "enum": [
        "NULL_VALUE"
      ]
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "loggerAction": {
      "type": "string",
      "default": "default_no_action",
      "enum": [
        "default_no_action",
        "create",
        "update",
        "read",
        "delete"
      ]
    },
    "loggerAvailableSystemObjects": {
      "type": "string",
      "default": "cc_queue",
      "enum": [
        "cc_queue",
        "schema",
        "users",
        "devices",
        "calendars",
        "cc_list",
        "cc_team",
        "cc_agent",
        "cc_resource",
        "cc_resource_group",
        "chat_bots",
        "cases",
        "contacts",
        "cc_list_number",
        "case_comments",
        "record_file"
      ]
    },
    "loggerConfig": {
      "type": "object",
      "properties": {
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "logs_count": {
          "type": "string",
          "format": "int64"
        },
        "logs_size": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerConfigStatus": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "type": "boolean"
        }
      }
    },
    "loggerConfigs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerConfig"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "loggerCreateConfigRequest": {
      "type": "object",
      "properties": {
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerEmpty": {
      "type": "object"
    },
    "loggerLog": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "new_state": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "record": {
          "$ref": "#/definitions/loggerRecord"
        },
        "user": {
          "$ref": "#/definitions/loggerLookup"
        },
        "user_ip": {
          "type": "string"
        }
      }
    },
    "loggerLogs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerLog"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "loggerLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "loggerPatchConfigRequest": {
      "type": "object",
      "properties": {
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "loggerSystemObjects": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerLookup"
          }
        }
      }
    },
    "loggerUpdateConfigRequest": {
      "type": "object",
      "properties": {
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "storage.BackendProfile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "data_count": {
          "type": "string",
          "format": "int64"
        },
        "data_size": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "storage.BackendProfileService.PatchBackendProfileBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "storage.BackendProfileService.UpdateBackendProfileBody": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "storage.BulkGenerateFileLinkResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.GenerateFileLinkResponse"
          }
        }
      }
    },
    "storage.CognitiveProfile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "properties": {},
        "provider": {
          "$ref": "#/definitions/storage.ProviderType"
        },
        "service": {
          "$ref": "#/definitions/storage.ServiceType"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "storage.CognitiveProfileService.PatchCognitiveProfileBody": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "properties": {},
        "provider": {
          "$ref": "#/definitions/storage.ProviderType"
        },
        "service": {
          "$ref": "#/definitions/storage.ServiceType"
        }
      }
    },
    "storage.CognitiveProfileService.UpdateCognitiveProfileBody": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "properties": {},
        "provider": {
          "$ref": "#/definitions/storage.ProviderType"
        },
        "service": {
          "$ref": "#/definitions/storage.ServiceType"
        }
      }
    },
    "storage.CognitiveProfileVoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "storage.CreateBackendProfileRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "storage.CreateCognitiveProfileRequest": {
      "description": "Create cognitive profile request body for TTS and TTS",
      "type": "object",
      "title": "Create cognitive profile request body",
      "required": [
        "name",
        "provider",
        "service",
        "properties"
      ],
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "properties": {},
        "provider": {
          "$ref": "#/definitions/storage.ProviderType"
        },
        "service": {
          "$ref": "#/definitions/storage.ServiceType"
        }
      }
    },
    "storage.CreateFilePolicyRequest": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storage.UploadFileChannel"
          }
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encrypt": {
          "type": "boolean"
        },
        "max_upload_size": {
          "type": "string",
          "format": "int64"
        },
        "mime_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_days": {
          "type": "integer",
          "format": "int32"
        },
        "speed_download": {
          "type": "string",
          "format": "int64"
        },
        "speed_upload": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.CreateImportTemplateRequest": {
      "description": "Create import template for CSV",
      "type": "object",
      "title": "Create import template request body",
      "required": [
        "name",
        "source_id",
        "parameters"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "source_id": {
          "type": "string",
          "format": "int64"
        },
        "source_type": {
          "$ref": "#/definitions/storage.ImportSourceType"
        }
      }
    },
    "storage.DeleteFileTranscriptRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "uuid": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storage.DeleteFileTranscriptResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "storage.DeleteFilesRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "storage.DeleteFilesResponse": {
      "type": "object"
    },
    "storage.File": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/storage.UploadFileChannel"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "retention_until": {
          "type": "string",
          "format": "int64"
        },
        "sha256sum": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/storage.Thumbnail"
        },
        "uploaded_at": {
          "type": "string",
          "format": "int64"
        },
        "uploaded_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "uuid": {
          "type": "string",
          "title": "deprecated use reference_id"
        },
        "view_name": {
          "type": "string"
        }
      }
    },
    "storage.FilePoliciesService.FilePolicyApplyBody": {
      "type": "object"
    },
    "storage.FilePoliciesService.MovePositionFilePolicyBody": {
      "type": "object"
    },
    "storage.FilePoliciesService.PatchFilePolicyBody": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storage.UploadFileChannel"
          }
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encrypt": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "max_upload_size": {
          "type": "string",
          "format": "int64"
        },
        "mime_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_days": {
          "type": "integer",
          "format": "int32"
        },
        "speed_download": {
          "type": "string",
          "format": "int64"
        },
        "speed_upload": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.FilePoliciesService.UpdateFilePolicyBody": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storage.UploadFileChannel"
          }
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encrypt": {
          "type": "boolean"
        },
        "max_upload_size": {
          "type": "string",
          "format": "int64"
        },
        "mime_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "retention_days": {
          "type": "integer",
          "format": "int32"
        },
        "speed_download": {
          "type": "string",
          "format": "int64"
        },
        "speed_upload": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.FilePolicy": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storage.UploadFileChannel"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "encrypt": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "max_upload_size": {
          "type": "string",
          "format": "int64"
        },
        "mime_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "retention_days": {
          "type": "integer",
          "format": "int32"
        },
        "speed_download": {
          "type": "string",
          "format": "int64"
        },
        "speed_upload": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "storage.FilePolicyApplyResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.FileService.DeleteScreenRecordingsBody": {
      "type": "object"
    },
    "storage.FileTranscriptSafeResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "file": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "transcript": {
          "type": "string"
        }
      }
    },
    "storage.GenerateFileLinkRequest": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "metadata": {
          "type": "boolean"
        },
        "query": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "type": "string"
        }
      }
    },
    "storage.GenerateFileLinkResponse": {
      "type": "object",
      "properties": {
        "base_url": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/storage.GenerateFileLinkResponse.Metadata"
        },
        "url": {
          "type": "string",
          "title": "deprecated"
        }
      }
    },
    "storage.GenerateFileLinkResponse.Metadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.ImportSourceType": {
      "type": "string",
      "default": "DefaultSourceType",
      "enum": [
        "DefaultSourceType",
        "Dialer"
      ]
    },
    "storage.ImportTemplate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "source_id": {
          "type": "string",
          "format": "int64"
        },
        "source_type": {
          "$ref": "#/definitions/storage.ImportSourceType"
        }
      }
    },
    "storage.ImportTemplateService.PatchImportTemplateBody": {
      "description": "Patch import template for CSV",
      "type": "object",
      "title": "Patch import template request body",
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        }
      }
    },
    "storage.ImportTemplateService.UpdateImportTemplateBody": {
      "description": "Update import template for CSV",
      "type": "object",
      "title": "Update import template request body",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "storage.ListBackendProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.BackendProfile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListCognitiveProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.CognitiveProfile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListCognitiveProfileVoices": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.CognitiveProfileVoice"
          }
        }
      }
    },
    "storage.ListFile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.File"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListFilePolicies": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.FilePolicy"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListImportTemplate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.ImportTemplate"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListMedia": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.MediaFile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.ListPhrases": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.TranscriptPhrase"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storage.MediaFile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engine.Lookup"
        }
      }
    },
    "storage.MovePositionFilePolicyResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "storage.ProviderType": {
      "type": "string",
      "default": "DefaultProvider",
      "enum": [
        "DefaultProvider",
        "Microsoft",
        "Google",
        "ElevenLabs"
      ]
    },
    "storage.PutFileTranscriptRequest": {
      "type": "object",
      "properties": {
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        },
        "phrases": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.TranscriptPhrase"
          }
        },
        "text": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.PutFileTranscriptResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.SafeUploadFileRequest.Metadata": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/storage.UploadFileChannel"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "generate_thumbnail": {
          "type": "boolean"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_id": {
          "type": "string",
          "format": "int64"
        },
        "progress": {
          "type": "boolean"
        },
        "stream_response": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.SafeUploadFileResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/storage.SafeUploadFileResponse.Metadata"
        },
        "part": {
          "$ref": "#/definitions/storage.SafeUploadFileResponse.Part"
        },
        "progress": {
          "$ref": "#/definitions/storage.SafeUploadFileResponse.Progress"
        }
      }
    },
    "storage.SafeUploadFileResponse.Metadata": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/storage.UploadStatusCode"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "file_url": {
          "type": "string"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "sha256sum": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/storage.Thumbnail"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.SafeUploadFileResponse.Part": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "format": "int64"
        },
        "upload_id": {
          "type": "string"
        }
      }
    },
    "storage.SafeUploadFileResponse.Progress": {
      "type": "object",
      "properties": {
        "uploaded": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.ServiceType": {
      "type": "string",
      "default": "DefaultService",
      "enum": [
        "DefaultService",
        "STT",
        "TTS"
      ]
    },
    "storage.StartFileTranscriptRequest": {
      "type": "object",
      "properties": {
        "file_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "locale": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/engine.Lookup"
        },
        "uuid": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storage.StartFileTranscriptResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/storage.StartFileTranscriptResponse.TranscriptJob"
          }
        }
      }
    },
    "storage.StartFileTranscriptResponse.TranscriptJob": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "storage.StreamFile": {
      "type": "object",
      "properties": {
        "chunk": {
          "type": "string",
          "format": "byte"
        },
        "metadata": {
          "$ref": "#/definitions/storage.StreamFile.Metadata"
        }
      }
    },
    "storage.StreamFile.Metadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sha256sum": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/storage.Thumbnail"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.Thumbnail": {
      "type": "object",
      "properties": {
        "mime_type": {
          "type": "string"
        },
        "scale": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storage.TranscriptPhrase": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "end_sec": {
          "type": "number",
          "format": "float"
        },
        "phrase": {
          "type": "string"
        },
        "start_sec": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "storage.UploadFileChannel": {
      "type": "string",
      "default": "UnknownChannel",
      "enum": [
        "UnknownChannel",
        "ChatChannel",
        "MailChannel",
        "CallChannel",
        "LogChannel",
        "MediaChannel",
        "KnowledgebaseChannel",
        "CasesChannel",
        "ScreenshotChannel",
        "ScreenSharingChannel"
      ]
    },
    "storage.UploadFileRequest.Metadata": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/storage.UploadFileChannel"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "generate_thumbnail": {
          "type": "boolean"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_id": {
          "type": "string",
          "format": "int64"
        },
        "stream_response": {
          "type": "boolean"
        },
        "uploaded_by": {
          "type": "string",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storage.UploadFileResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/storage.UploadStatusCode"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "file_url": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "sha256sum": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/storage.Thumbnail"
        }
      }
    },
    "storage.UploadFileUrlResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/storage.UploadStatusCode"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "sha256sum": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "thumbnail": {
          "$ref": "#/definitions/storage.Thumbnail"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "storage.UploadStatusCode": {
      "type": "string",
      "default": "Unknown",
      "enum": [
        "Unknown",
        "Ok",
        "Failed"
      ]
    },
    "webitel.cases.Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webitel.cases.CallEvent": {
      "type": "object",
      "properties": {
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CallFile"
          }
        },
        "flow_scheme": {
          "$ref": "#/definitions/general.Lookup"
        },
        "gateway": {
          "$ref": "#/definitions/general.Lookup"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean"
        },
        "is_inbound": {
          "type": "boolean"
        },
        "is_missed": {
          "type": "boolean"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "queue": {
          "$ref": "#/definitions/general.Lookup"
        },
        "total_duration": {
          "type": "string",
          "format": "int64"
        },
        "transcripts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.TranscriptLookup"
          }
        }
      }
    },
    "webitel.cases.CallFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.Case": {
      "description": "Message representing a case.",
      "type": "object",
      "properties": {
        "assignee": {
          "description": "Assignee responsible for resolving the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "author": {
          "description": "Author or reporter of the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_reason": {
          "title": "Close details",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_reason_group": {
          "description": "Close reason group, immutable once set.",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_result": {
          "type": "string"
        },
        "comments": {
          "description": "List of comments on the case.",
          "$ref": "#/definitions/webitel.cases.CaseCommentList"
        },
        "contact_info": {
          "description": "Contact information for the case.",
          "type": "string"
        },
        "created_at": {
          "description": "Creation timestamp (in milliseconds since Unix epoch).",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Creator of the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "custom": {
          "description": "Custom data extension fields ..",
          "type": "object"
        },
        "dc": {
          "type": "string",
          "format": "int64",
          "title": "System field"
        },
        "description": {
          "description": "Detailed description of the case.",
          "type": "string"
        },
        "difference_in_reaction": {
          "type": "string",
          "format": "int64"
        },
        "difference_in_resolve": {
          "type": "string",
          "format": "int64"
        },
        "etag": {
          "description": "Unique etag identifier.",
          "type": "string"
        },
        "files": {
          "description": "List of attached files.",
          "$ref": "#/definitions/webitel.cases.CaseFileList"
        },
        "group": {
          "description": "Group associated with the case.",
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "id": {
          "description": "Unique case ID.",
          "type": "string",
          "format": "int64"
        },
        "impacted": {
          "description": "Impacted contact (defaults to reporter if null).",
          "$ref": "#/definitions/general.Lookup"
        },
        "links": {
          "description": "List of attached links.",
          "$ref": "#/definitions/webitel.cases.CaseLinkList"
        },
        "name": {
          "description": "Name of the case (may serve as an ID in docs).",
          "type": "string"
        },
        "planned_reaction_at": {
          "description": "Planned reaction time (in milliseconds).",
          "type": "string",
          "format": "int64"
        },
        "planned_resolve_at": {
          "description": "Planned resolution time (in milliseconds).",
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "description": "Priority level of the case.",
          "$ref": "#/definitions/webitel.cases.Priority"
        },
        "rating": {
          "type": "string",
          "format": "int64",
          "title": "Rating details"
        },
        "rating_comment": {
          "type": "string"
        },
        "reacted_at": {
          "type": "string",
          "format": "int64"
        },
        "related": {
          "description": "List of related cases.",
          "$ref": "#/definitions/webitel.cases.RelatedCaseList"
        },
        "reporter": {
          "description": "Reporter of the issue (null if anonymous).",
          "$ref": "#/definitions/general.Lookup"
        },
        "resolved_at": {
          "type": "string",
          "format": "int64",
          "title": "Timing details"
        },
        "role_ids": {
          "type": "array",
          "title": "System field",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "service": {
          "description": "Service associated with the case.",
          "$ref": "#/definitions/webitel.cases.Service"
        },
        "sla": {
          "description": "SLA associated with the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "sla_condition": {
          "description": "List of SLA conditions.",
          "$ref": "#/definitions/general.Lookup"
        },
        "source": {
          "description": "Source of the case.",
          "$ref": "#/definitions/webitel.cases.SourceTypeLookup"
        },
        "status": {
          "description": "Current status of the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "status_condition": {
          "description": "Status condition from status lookup.",
          "$ref": "#/definitions/webitel.cases.StatusCondition"
        },
        "subject": {
          "description": "Subject of the case.",
          "type": "string"
        },
        "updated_at": {
          "description": "Last update timestamp (in milliseconds since Unix epoch).",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "Last updater of the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "ver": {
          "description": "Version number of the case.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CaseComment": {
      "description": "Represents a comment associated with a case.",
      "type": "object",
      "properties": {
        "author": {
          "description": "Contact-author of the comment.",
          "$ref": "#/definitions/general.Lookup"
        },
        "can_edit": {
          "description": "Indicates if the comment can be edited by current user.",
          "type": "boolean"
        },
        "case_id": {
          "description": "Optional relation to the associated case.",
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "description": "Timestamp (in milliseconds) of when the comment was created.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "User who created the comment.",
          "$ref": "#/definitions/general.Lookup"
        },
        "edited": {
          "description": "Indicates if the comment was edited; true if created_at \u003c updated_at.",
          "type": "boolean"
        },
        "etag": {
          "type": "string",
          "title": "entity tag representing id + ver"
        },
        "id": {
          "description": "Main identifier for read, update, and delete operations.",
          "type": "string",
          "format": "int64"
        },
        "role_ids": {
          "type": "array",
          "title": "System field",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "text": {
          "description": "The content of the comment.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp (in milliseconds) of the last update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "User who last updated the comment.",
          "$ref": "#/definitions/general.Lookup"
        },
        "ver": {
          "description": "Version number of the comment, used for concurrency control.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CaseCommentList": {
      "description": "Contains a paginated list of comments.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of comments on the current page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CaseComment"
          }
        },
        "next": {
          "description": "Flag to indicate if more pages are available.",
          "type": "boolean"
        },
        "page": {
          "description": "Current page number.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.CaseCommunication": {
      "description": "Represents a single case communication.",
      "type": "object",
      "properties": {
        "communication_id": {
          "description": "External communication ID.",
          "type": "string"
        },
        "communication_type": {
          "description": "Type of the communication (e.g., Chat, Call).",
          "$ref": "#/definitions/general.Lookup"
        },
        "etag": {
          "description": "Version of the communication record.",
          "type": "string"
        },
        "id": {
          "description": "Database ID of the communication.",
          "type": "string",
          "format": "int64"
        },
        "ver": {
          "description": "Version of the communication record.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CaseFileList": {
      "description": "Contains a list of case files with pagination.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of case files.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.File"
          }
        },
        "next": {
          "description": "Indicator if there is a next page.",
          "type": "boolean"
        },
        "page": {
          "description": "Current page number.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.CaseLink": {
      "type": "object",
      "properties": {
        "author": {
          "title": "contact-author calculated on-flight (optional)",
          "$ref": "#/definitions/general.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unixmilli"
        },
        "created_by": {
          "$ref": "#/definitions/general.Lookup"
        },
        "etag": {
          "type": "string",
          "title": "main field required for read, update and delete"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "title": "link name (optional)"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/general.Lookup"
        },
        "url": {
          "type": "string",
          "title": "URL"
        },
        "ver": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CaseLinkList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CaseLink"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.CaseList": {
      "description": "Response message containing a list of cases.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of cases.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Case"
          }
        },
        "next": {
          "description": "Flag indicating if there are more pages.",
          "type": "boolean"
        },
        "page": {
          "description": "Current page number.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.CaseTimelineEventType": {
      "type": "string",
      "default": "chat",
      "enum": [
        "chat",
        "call",
        "email"
      ]
    },
    "webitel.cases.Catalog": {
      "type": "object",
      "title": "Catalog message represents the main catalog entity with metadata",
      "properties": {
        "close_reason_group": {
          "title": "Close reason group associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the catalog was created"
        },
        "created_by": {
          "title": "User who created the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the catalog (optional)"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier for the catalog"
        },
        "name": {
          "type": "string",
          "title": "Name of the catalog"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix used for case identification (optional)"
        },
        "searched": {
          "type": "boolean",
          "title": "flag showing whether the catalog was searched"
        },
        "service": {
          "type": "array",
          "title": "Service associated with the catalog",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Service"
          }
        },
        "skills": {
          "type": "array",
          "title": "Skills associated with the catalog",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "sla": {
          "title": "SLA associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "state": {
          "type": "boolean",
          "title": "State of the catalog (true for active, false for inactive)"
        },
        "status": {
          "title": "Status associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "teams": {
          "type": "array",
          "title": "Teams associated with the catalog",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the catalog was last updated"
        },
        "updated_by": {
          "title": "User who last updated the catalog",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.CatalogList": {
      "type": "object",
      "title": "CatalogList message contains a list of catalogs with pagination",
      "properties": {
        "items": {
          "type": "array",
          "title": "List of catalog items",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Catalog"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates if there are more pages"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "Page number for pagination"
        }
      }
    },
    "webitel.cases.ChatEvent": {
      "type": "object",
      "properties": {
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "flow_scheme": {
          "$ref": "#/definitions/general.Lookup"
        },
        "gateway": {
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean"
        },
        "is_inbound": {
          "type": "boolean"
        },
        "is_missed": {
          "type": "boolean"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "queue": {
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.CloseReason": {
      "type": "object",
      "title": "CloseReason message represents a close reason entity with metadata",
      "properties": {
        "close_reason_group_id": {
          "type": "string",
          "format": "int64",
          "title": "Close Reason Group ID of the close reason"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason"
        },
        "created_by": {
          "title": "CreatedBy user of the close reason",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason"
        },
        "updated_by": {
          "title": "UpdatedBy user of the close reason",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.CloseReasonGroup": {
      "type": "object",
      "title": "CloseReasonGroup message represents a close reason group entity with metadata",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason group"
        },
        "created_by": {
          "title": "CreatedBy user of the close reason group",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason group"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason group"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason group"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason group"
        },
        "updated_by": {
          "title": "UpdatedBy user of the close reason group",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.CloseReasonGroupList": {
      "type": "object",
      "title": "CloseReasonGroupList message contains a list of CloseReasonGroup items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CloseReasonList": {
      "type": "object",
      "title": "CloseReasonList message contains a list of CloseReason items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CloseReason"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.CreateCaseRelatedCaseInput": {
      "description": "Structure for related cases input when creating a case.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Etag of the related case.",
          "type": "string"
        },
        "related_to": {
          "description": "Identifier of the related case.",
          "type": "string"
        },
        "relation_type": {
          "description": "Type of relation (e.g., duplicate, linked).",
          "$ref": "#/definitions/webitel.cases.RelationType"
        }
      }
    },
    "webitel.cases.CreateInputRelatedCase": {
      "description": "Input for creating a related case.",
      "type": "object",
      "properties": {
        "related_case": {
          "description": "Related case details.",
          "$ref": "#/definitions/general.Lookup"
        },
        "relation_type": {
          "description": "Relation type between the cases.",
          "$ref": "#/definitions/webitel.cases.RelationType"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.DayTimeline": {
      "type": "object",
      "properties": {
        "calls_count": {
          "type": "string",
          "format": "int64"
        },
        "chats_count": {
          "type": "string",
          "format": "int64"
        },
        "day_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "emails_count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Event"
          }
        }
      }
    },
    "webitel.cases.EmailEvent": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Attachment"
          }
        },
        "body": {
          "type": "string",
          "title": "plain text of email"
        },
        "cc": {
          "type": "array",
          "title": "array of ccs (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "array",
          "title": "array of senders (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "html": {
          "type": "string",
          "title": "html body of email"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean",
          "title": "reserved for the open"
        },
        "is_inbound": {
          "type": "boolean",
          "title": "inbound/outbound email"
        },
        "owner": {
          "title": "Agent who sent/accepted",
          "$ref": "#/definitions/general.Lookup"
        },
        "profile": {
          "title": "email profile",
          "$ref": "#/definitions/general.Lookup"
        },
        "sender": {
          "type": "array",
          "title": "array of receivers (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string"
        },
        "to": {
          "type": "array",
          "title": "array of receivers (email addresses)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "webitel.cases.Event": {
      "type": "object",
      "properties": {
        "call": {
          "$ref": "#/definitions/webitel.cases.CallEvent"
        },
        "chat": {
          "$ref": "#/definitions/webitel.cases.ChatEvent"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "email": {
          "$ref": "#/definitions/webitel.cases.EmailEvent"
        },
        "type": {
          "$ref": "#/definitions/webitel.cases.CaseTimelineEventType"
        }
      }
    },
    "webitel.cases.FieldChange": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "title": "Name of the changed field, e.g., \"status\", \"priority\""
        },
        "new_value": {
          "title": "New value (after the update)"
        },
        "old_value": {
          "title": "Old value (before the update)"
        }
      }
    },
    "webitel.cases.File": {
      "description": "Metadata for a file associated with a case.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "Creation timestamp in Unix milliseconds.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Creator of the file.",
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "id": {
          "description": "Storage file ID.",
          "type": "string",
          "format": "int64"
        },
        "mime": {
          "description": "MIME type of the file.",
          "type": "string"
        },
        "name": {
          "description": "File name.",
          "type": "string"
        },
        "size": {
          "description": "File size in bytes.",
          "type": "string",
          "format": "int64"
        },
        "source": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webitel.cases.GetTimelineCounterResponse": {
      "type": "object",
      "properties": {
        "calls_count": {
          "type": "string",
          "format": "int64"
        },
        "chats_count": {
          "type": "string",
          "format": "int64",
          "title": "defined event types"
        },
        "date_from": {
          "type": "string",
          "format": "int64",
          "title": "filter dates"
        },
        "date_to": {
          "type": "string",
          "format": "int64"
        },
        "emails_count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.GetTimelineResponse": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.DayTimeline"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.InputCase": {
      "type": "object",
      "properties": {
        "assignee": {
          "title": "create: not required, default from service or set by UI;",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_reason": {
          "title": "create: not required;",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_result": {
          "type": "string",
          "title": "create: not required; update: required only when case status goes to the final state"
        },
        "contact_info": {
          "type": "string",
          "title": "create: not required;"
        },
        "custom": {
          "description": "Custom data extension fields ..",
          "type": "object"
        },
        "description": {
          "type": "string",
          "title": "create: not required;"
        },
        "etag": {
          "type": "string"
        },
        "group": {
          "title": "create: not required, default from service or set by UI;",
          "$ref": "#/definitions/general.Lookup"
        },
        "impacted": {
          "title": "create: required, default is reporter or ui (if empty recognize as anonymous);",
          "$ref": "#/definitions/general.Lookup"
        },
        "priority": {
          "title": "create: not required, default first value from priority lookup",
          "$ref": "#/definitions/general.Lookup"
        },
        "rating": {
          "type": "string",
          "format": "int64"
        },
        "rating_comment": {
          "type": "string"
        },
        "reporter": {
          "title": "create: required (if empty recognize as anonymous contact);",
          "$ref": "#/definitions/general.Lookup"
        },
        "service": {
          "title": "on this field base many other readonly fields on return",
          "$ref": "#/definitions/general.Lookup"
        },
        "source": {
          "title": "source of the case",
          "$ref": "#/definitions/general.Lookup"
        },
        "status": {
          "title": "create: not required, default initial value from status lookup or ui;",
          "$ref": "#/definitions/general.Lookup"
        },
        "status_condition": {
          "$ref": "#/definitions/webitel.cases.StatusCondition"
        },
        "subject": {
          "type": "string",
          "title": "create: required;"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.InputCaseComment": {
      "description": "Input structure for creating or updating a case comment.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Identifier for the comment.",
          "type": "string"
        },
        "text": {
          "description": "Content of the comment.",
          "type": "string"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      },
      "example": {
        "text": "My new comment"
      }
    },
    "webitel.cases.InputCaseCommunication": {
      "description": "Represents input data for creating or linking a communication.",
      "type": "object",
      "properties": {
        "communication_id": {
          "description": "External communication ID.",
          "type": "string"
        },
        "communication_type": {
          "description": "Type of the communication.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.InputCaseLink": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.InputCatalog": {
      "type": "object",
      "title": "InputCatalog message contains the fields for creating or updating a catalog",
      "properties": {
        "close_reason_group": {
          "title": "Close reason group ID associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "description": {
          "type": "string",
          "title": "Description of the catalog (optional)"
        },
        "name": {
          "type": "string",
          "title": "Name of the catalog (required)"
        },
        "prefix": {
          "type": "string",
          "title": "Prefix for case identification (optional)"
        },
        "skills": {
          "type": "array",
          "title": "List of skill IDs associated with the catalog",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "sla": {
          "title": "SLA ID associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "state": {
          "type": "boolean",
          "title": "State of the catalog (true for active, false for inactive)"
        },
        "status": {
          "title": "Status ID associated with the catalog",
          "$ref": "#/definitions/general.Lookup"
        },
        "teams": {
          "type": "array",
          "title": "List of team IDs associated with the catalog",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        }
      }
    },
    "webitel.cases.InputCloseReason": {
      "type": "object",
      "title": "InputCloseReason message for inputting close reason data",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        }
      }
    },
    "webitel.cases.InputCloseReasonGroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "webitel.cases.InputCreateCase": {
      "description": "Input structure for creating a new case.",
      "type": "object",
      "properties": {
        "assignee": {
          "description": "Optional assignee ID.",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_reason": {
          "description": "Optional close information.",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_reason_group": {
          "description": "Optional close reason.",
          "$ref": "#/definitions/general.Lookup"
        },
        "close_result": {
          "description": "Optional close information.",
          "type": "string"
        },
        "contact_info": {
          "description": "Optional contact information.",
          "type": "string"
        },
        "custom": {
          "description": "Custom data extension fields ..",
          "type": "object"
        },
        "description": {
          "description": "Optional description of the case.",
          "type": "string"
        },
        "group": {
          "description": "Optional group ID.",
          "$ref": "#/definitions/general.Lookup"
        },
        "impacted": {
          "description": "Required impacted user ID (default: reporter).",
          "$ref": "#/definitions/general.Lookup"
        },
        "links": {
          "description": "List of links attached to the case.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.InputCaseLink"
          }
        },
        "priority": {
          "description": "Optional priority level.",
          "$ref": "#/definitions/general.Lookup"
        },
        "rating": {
          "description": "API-only rating information.",
          "type": "string",
          "format": "int64"
        },
        "rating_comment": {
          "description": "API-only rating information.",
          "type": "string"
        },
        "related": {
          "description": "List of related cases.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CreateCaseRelatedCaseInput"
          }
        },
        "reporter": {
          "description": "Required reporter ID (if empty, anonymous contact).",
          "$ref": "#/definitions/general.Lookup"
        },
        "service": {
          "description": "Service ID (affects many other readonly fields).",
          "$ref": "#/definitions/general.Lookup"
        },
        "source": {
          "description": "Source of the case.",
          "$ref": "#/definitions/general.Lookup"
        },
        "status": {
          "description": "Initial case status (default from lookup or UI).",
          "$ref": "#/definitions/general.Lookup"
        },
        "status_condition": {
          "$ref": "#/definitions/general.Lookup"
        },
        "subject": {
          "description": "Required subject of the case.",
          "type": "string"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.InputCreateService": {
      "type": "object",
      "properties": {
        "assignee": {
          "title": "Assignee ID responsible for the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "catalog_id": {
          "type": "string",
          "format": "int64",
          "title": "ID of the root catalog"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "group": {
          "title": "Group ID responsible for the service",
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "name": {
          "type": "string",
          "title": "Name of the service (required)"
        },
        "root_id": {
          "type": "string",
          "format": "int64",
          "title": "Parent catalog ID (required)"
        },
        "sla": {
          "title": "SLA ID associated with the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        }
      }
    },
    "webitel.cases.InputCreateStatusCondition": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "webitel.cases.InputPriority": {
      "type": "object",
      "title": "InputPriority message for creating a new priority",
      "properties": {
        "color": {
          "type": "string",
          "title": "Color of the priority"
        },
        "description": {
          "type": "string",
          "title": "Description of the priority"
        },
        "name": {
          "type": "string",
          "title": "Name of the priority"
        }
      }
    },
    "webitel.cases.InputRelatedCase": {
      "description": "Input for creating or updating a related case.",
      "type": "object",
      "properties": {
        "primary_case": {
          "description": "Primary case details.",
          "$ref": "#/definitions/general.Lookup"
        },
        "related_case": {
          "description": "Related case details.",
          "$ref": "#/definitions/general.Lookup"
        },
        "relation_type": {
          "description": "Relation type.",
          "$ref": "#/definitions/webitel.cases.RelationType"
        },
        "userID": {
          "description": "Optional creator / updater ID. Use this to explicitly set the case creator / updater instead of deriving it from the auth token.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.InputSLA": {
      "type": "object",
      "title": "InputSLA message for inputting SLA data",
      "properties": {
        "calendar": {
          "title": "Calendar ID from the \"Calendars\" dictionary",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the SLA"
        },
        "name": {
          "type": "string",
          "title": "Name of the SLA"
        },
        "reaction_time": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time"
        },
        "resolution_time": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time"
        },
        "valid_from": {
          "type": "string",
          "format": "int64",
          "title": "Validity period for the SLA"
        },
        "valid_to": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.InputSLACondition": {
      "type": "object",
      "title": "InputSLACondition message for inputting SLACondition data",
      "properties": {
        "name": {
          "type": "string"
        },
        "priorities": {
          "type": "array",
          "title": "List of priority IDs for creation",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "reaction_time": {
          "type": "string",
          "format": "int64"
        },
        "resolution_time": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.InputService": {
      "type": "object",
      "title": "InputService message contains the fields for creating or updating a service",
      "properties": {
        "assignee": {
          "title": "Assignee ID responsible for the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "catalog_id": {
          "type": "string",
          "format": "int64",
          "title": "The parent catalog (required)"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "group": {
          "title": "Group ID responsible for the service",
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "name": {
          "type": "string",
          "title": "Name of the service (required)"
        },
        "root_id": {
          "type": "string",
          "format": "int64",
          "title": "ID of the root catalog"
        },
        "sla": {
          "title": "SLA ID associated with the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        }
      }
    },
    "webitel.cases.InputSource": {
      "description": "The data structure representing a source",
      "type": "object",
      "title": "Input structure representing a new Source entity",
      "default": "{ \"name\": \"Default Source\", \"type\": \"CALL\" }",
      "maxProperties": 5,
      "minProperties": 2,
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "description": {
          "description": "A short description of the source",
          "type": "string",
          "title": "Optional short description for context",
          "maxLength": 500
        },
        "name": {
          "description": "The name of the source",
          "type": "string",
          "title": "Display name for the source",
          "default": "New Source",
          "maxLength": 100,
          "minLength": 2
        },
        "type": {
          "description": "The type of the source",
          "title": "Type of the source; restrictable to a fixed set of allowed values",
          "default": "\"CALL\"",
          "$ref": "#/definitions/webitel.cases.SourceType"
        }
      }
    },
    "webitel.cases.InputStatus": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "webitel.cases.InputStatusCondition": {
      "type": "object",
      "title": "InputStatusCondition message for inputting status condition data",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description of the status condition"
        },
        "final": {
          "type": "boolean",
          "title": "Final status condition"
        },
        "initial": {
          "type": "boolean",
          "title": "Initial status condition"
        },
        "name": {
          "type": "string",
          "title": "Name of the status condition"
        }
      }
    },
    "webitel.cases.LinkCommunicationResponse": {
      "description": "Response message after linking communications to a case.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of linked communications.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CaseCommunication"
          }
        }
      }
    },
    "webitel.cases.ListCommunicationsResponse": {
      "description": "Response message for listing communications linked to a case.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of communications.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.CaseCommunication"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "description": "Current page number.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.LocateCatalogResponse": {
      "type": "object",
      "title": "LocateCatalogResponse message contains a single catalog entity",
      "properties": {
        "catalog": {
          "title": "The located catalog",
          "$ref": "#/definitions/webitel.cases.Catalog"
        }
      }
    },
    "webitel.cases.LocateCloseReasonGroupResponse": {
      "type": "object",
      "title": "LocateCloseReasonGroupResponse message contains a single close reason group entity",
      "properties": {
        "close_reason_group": {
          "$ref": "#/definitions/webitel.cases.CloseReasonGroup"
        }
      }
    },
    "webitel.cases.LocateCloseReasonResponse": {
      "type": "object",
      "title": "LocateCloseReasonResponse message contains a single close reason entity",
      "properties": {
        "close_reason": {
          "$ref": "#/definitions/webitel.cases.CloseReason"
        }
      }
    },
    "webitel.cases.LocatePriorityResponse": {
      "type": "object",
      "title": "LocatePriorityResponse message contains a single priority entity",
      "properties": {
        "priority": {
          "$ref": "#/definitions/webitel.cases.Priority"
        }
      }
    },
    "webitel.cases.LocateSLAConditionResponse": {
      "type": "object",
      "title": "LocateSLAConditionResponse message contains a single SLACondition entity",
      "properties": {
        "sla_condition": {
          "$ref": "#/definitions/webitel.cases.SLACondition"
        }
      }
    },
    "webitel.cases.LocateSLAResponse": {
      "type": "object",
      "title": "LocateSLAResponse message contains a single SLA entity",
      "properties": {
        "sla": {
          "$ref": "#/definitions/webitel.cases.SLA"
        }
      }
    },
    "webitel.cases.LocateServiceResponse": {
      "type": "object",
      "title": "LocateServiceResponse message contains a single service entity",
      "properties": {
        "service": {
          "title": "The located service",
          "$ref": "#/definitions/webitel.cases.Service"
        }
      }
    },
    "webitel.cases.LocateSourceResponse": {
      "description": "Response message for locating a source.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The located source.",
          "$ref": "#/definitions/webitel.cases.Source"
        }
      }
    },
    "webitel.cases.LocateStatusConditionResponse": {
      "type": "object",
      "title": "LocateStatusConditionResponse message contains a single status entity",
      "properties": {
        "status": {
          "$ref": "#/definitions/webitel.cases.StatusCondition"
        }
      }
    },
    "webitel.cases.LocateStatusResponse": {
      "type": "object",
      "title": "LocateStatusResponse message contains a single status entity",
      "properties": {
        "status": {
          "$ref": "#/definitions/webitel.cases.Status"
        }
      }
    },
    "webitel.cases.Priority": {
      "type": "object",
      "title": "Priority message represents a priority entity with metadata",
      "properties": {
        "color": {
          "type": "string",
          "title": "Color of the priority"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the priority"
        },
        "created_by": {
          "title": "CreatedBy user of the priority",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the priority"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the priority"
        },
        "name": {
          "type": "string",
          "title": "Name of the priority"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the priority"
        },
        "updated_by": {
          "title": "UpdatedBy user of the priority",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.PriorityList": {
      "type": "object",
      "title": "PriorityList message contains a list of Priority items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Priority"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.RelatedCase": {
      "description": "Represents a related case with its relationship details.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "Timestamp (in milliseconds) of when the relation was created.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "User who created the relation.",
          "$ref": "#/definitions/general.Lookup"
        },
        "etag": {
          "description": "Etag for the related case entity.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the related case.",
          "type": "string",
          "format": "int64"
        },
        "primary_case": {
          "description": "Primary case details.",
          "$ref": "#/definitions/webitel.cases.RelatedCaseLookup"
        },
        "related_case": {
          "description": "Related case details.",
          "$ref": "#/definitions/webitel.cases.RelatedCaseLookup"
        },
        "relation_type": {
          "description": "Relation type between cases.",
          "$ref": "#/definitions/webitel.cases.RelationType"
        },
        "updated_at": {
          "description": "Timestamp (in milliseconds) of the last update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "User who last updated the relation.",
          "$ref": "#/definitions/general.Lookup"
        },
        "ver": {
          "description": "Version number of the related case, used for concurrency control.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.RelatedCaseList": {
      "description": "Paginated list of related cases.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of related cases on the current page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.RelatedCase"
          }
        },
        "next": {
          "description": "Flag to indicate if more pages are available.",
          "type": "boolean"
        },
        "page": {
          "description": "Current page number.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.RelatedCaseLookup": {
      "description": "RelatedCaseLookup is created specifically to include the subject field.",
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "title": "colour ( calculated by attached priority )"
        },
        "etag": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "id"
        },
        "name": {
          "type": "string",
          "title": "name"
        },
        "subject": {
          "type": "string",
          "title": "subject"
        },
        "ver": {
          "type": "integer",
          "format": "int32",
          "title": "ver"
        }
      }
    },
    "webitel.cases.RelationType": {
      "description": "Enum for relation types between cases.",
      "type": "string",
      "default": "RELATION_TYPE_UNSPECIFIED",
      "enum": [
        "RELATION_TYPE_UNSPECIFIED",
        "DUPLICATES",
        "IS_DUPLICATED_BY",
        "BLOCKS",
        "IS_BLOCKED_BY",
        "CAUSES",
        "IS_CAUSED_BY",
        "IS_CHILD_OF",
        "IS_PARENT_OF",
        "RELATES_TO"
      ]
    },
    "webitel.cases.SLA": {
      "type": "object",
      "title": "SLA message represents an SLA entity with metadata",
      "properties": {
        "calendar": {
          "title": "Calendar ID from the \"Calendars\" dictionary - required",
          "$ref": "#/definitions/general.Lookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the SLA"
        },
        "created_by": {
          "title": "CreatedBy user of the SLA",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the SLA - optional"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the SLA"
        },
        "name": {
          "type": "string",
          "title": "Name of the SLA - required"
        },
        "reaction_time": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time - required"
        },
        "resolution_time": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time - required"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the SLA"
        },
        "updated_by": {
          "title": "UpdatedBy user of the SLA",
          "$ref": "#/definitions/general.Lookup"
        },
        "valid_from": {
          "type": "string",
          "format": "int64",
          "title": "Validity period for the SLA - optional"
        },
        "valid_to": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.SLACondition": {
      "type": "object",
      "title": "SLACondition message represents an SLACondition entity with metadata",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the SLACondition"
        },
        "created_by": {
          "title": "CreatedBy user of the SLACondition",
          "$ref": "#/definitions/general.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the SLACondition"
        },
        "name": {
          "type": "string",
          "title": "Name of the SLACondition - required"
        },
        "priorities": {
          "type": "array",
          "title": "Priorities associated with the SLACondition - fetched as Lookup entities [ Priority name + ID ]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/general.Lookup"
          }
        },
        "reaction_time": {
          "type": "string",
          "format": "int64",
          "title": "Reaction time - required"
        },
        "resolution_time": {
          "type": "string",
          "format": "int64",
          "title": "Resolution time - required"
        },
        "sla_id": {
          "type": "string",
          "format": "int64",
          "title": "SLA ID associated with the SLACondition"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the SLACondition"
        },
        "updated_by": {
          "title": "UpdatedBy user of the SLACondition",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.SLAConditionList": {
      "type": "object",
      "title": "SLAConditionList message contains a list of SLACondition items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.SLACondition"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.SLAList": {
      "type": "object",
      "title": "SLAList message contains a list of SLA items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.SLA"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.Service": {
      "type": "object",
      "title": "Service message represents a service entity within a catalog",
      "properties": {
        "assignee": {
          "title": "Assignee responsible for the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "catalog_id": {
          "type": "string",
          "format": "int64",
          "title": "Catalogs associated with the service"
        },
        "code": {
          "type": "string",
          "title": "Code for external integrations (optional)"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the service was created"
        },
        "created_by": {
          "title": "User who created the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the service (optional)"
        },
        "group": {
          "title": "Group responsible for the service",
          "$ref": "#/definitions/general.ExtendedLookup"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier for the service"
        },
        "name": {
          "type": "string",
          "title": "Name of the service"
        },
        "root_id": {
          "type": "string",
          "format": "int64",
          "title": "ID of the parent catalog"
        },
        "searched": {
          "type": "boolean",
          "title": "flag showing whether the catalog was searched"
        },
        "service": {
          "type": "array",
          "title": "Service associated with the service",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Service"
          }
        },
        "sla": {
          "title": "SLA associated with the service",
          "$ref": "#/definitions/general.Lookup"
        },
        "state": {
          "type": "boolean",
          "title": "State of the service (true for active, false for inactive)"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the service was last updated"
        },
        "updated_by": {
          "title": "User who last updated the service",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.ServiceList": {
      "type": "object",
      "title": "ServiceList message contains a list of services with pagination",
      "properties": {
        "items": {
          "type": "array",
          "title": "List of service items",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Service"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates if there are more pages"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "Page number for pagination"
        }
      }
    },
    "webitel.cases.Source": {
      "description": "Represents a data source in the contact management system.",
      "type": "object",
      "required": [
        "id",
        "name",
        "type",
        "created_at",
        "updated_at",
        "created_by",
        "updated_by"
      ],
      "properties": {
        "created_at": {
          "description": "Unix timestamp representing when the source was created.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Reference to the user who originally created this source.",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "description": "An optional longer explanation of the source's purpose.",
          "type": "string",
          "maxLength": 500
        },
        "id": {
          "description": "Unique identifier for the source, generated automatically.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "A unique, descriptive name for the source.",
          "type": "string",
          "maxLength": 100,
          "minLength": 3
        },
        "type": {
          "description": "The type of data source represented by this entry.",
          "default": "TYPE_UNSPECIFIED",
          "$ref": "#/definitions/webitel.cases.SourceType"
        },
        "updated_at": {
          "description": "Unix timestamp representing the most recent update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "Reference to the user who most recently modified this source.",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.SourceList": {
      "description": "A list of sources.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of sources.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Source"
          }
        },
        "next": {
          "description": "Have more records.",
          "type": "boolean"
        },
        "page": {
          "description": "Page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.SourceType": {
      "description": "Represents a source type for the source entity.\n\n - TYPE_UNSPECIFIED: Unspecified source type.\n - CALL: Phone call source type.\n - CHAT: Chat source type.\n - SOCIAL_MEDIA: Social media source type.\n - EMAIL: Email source type.\n - API: API source type.\n - MANUAL: Manual source type.",
      "type": "string",
      "default": "TYPE_UNSPECIFIED",
      "enum": [
        "TYPE_UNSPECIFIED",
        "CALL",
        "CHAT",
        "SOCIAL_MEDIA",
        "EMAIL",
        "API",
        "MANUAL"
      ]
    },
    "webitel.cases.SourceTypeLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/webitel.cases.SourceType"
        }
      }
    },
    "webitel.cases.Status": {
      "type": "object",
      "title": "Status message represents a status entity with metadata",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the close reason"
        },
        "created_by": {
          "title": "CreatedBy user of the close reason",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the close reason"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the close reason"
        },
        "name": {
          "type": "string",
          "title": "Name of the close reason"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the close reason"
        },
        "updated_by": {
          "title": "UpdatedBy user of the close reason",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.StatusCondition": {
      "type": "object",
      "title": "StatusCondition message represents a status entity with metadata",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "CreatedAt timestamp of the status condition"
        },
        "created_by": {
          "title": "CreatedBy user of the status condition",
          "$ref": "#/definitions/general.Lookup"
        },
        "description": {
          "type": "string",
          "title": "Description of the status condition"
        },
        "final": {
          "type": "boolean",
          "title": "Final status condition"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Unique identifier of the status condition"
        },
        "initial": {
          "type": "boolean",
          "title": "Initial status condition"
        },
        "name": {
          "type": "string",
          "title": "Name of the status condition"
        },
        "status_id": {
          "type": "string",
          "format": "int64",
          "title": "Status ID of the status condition"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "UpdatedAt timestamp of the status condition"
        },
        "updated_by": {
          "title": "UpdatedBy user of the status condition",
          "$ref": "#/definitions/general.Lookup"
        }
      }
    },
    "webitel.cases.StatusConditionList": {
      "type": "object",
      "title": "StatusConditionList message contains a list of StatusCondition items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.StatusCondition"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.StatusList": {
      "type": "object",
      "title": "StatusList message contains a list of Status items with pagination",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.Status"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.cases.TranscriptLookup": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/general.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "webitel.cases.UnlinkCommunicationResponse": {
      "description": "Response message after unlinking a communication from a case.",
      "type": "object",
      "properties": {
        "affected": {
          "description": "Affected rows.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.cases.UpdateCaseResponse": {
      "type": "object",
      "properties": {
        "case": {
          "title": "Updated case object",
          "$ref": "#/definitions/webitel.cases.Case"
        },
        "changes": {
          "type": "array",
          "title": "List of changed fields with old and new values",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.cases.FieldChange"
          }
        }
      }
    },
    "webitel.chat.AgentChat": {
      "type": "object",
      "properties": {
        "close_reason": {
          "type": "string",
          "title": "Close reason (from agent perspective)"
        },
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "contact": {
          "title": "Connected contact",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "gateway": {
          "title": "Chat gateway",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "id": {
          "type": "string",
          "title": "Chat id"
        },
        "last_message": {
          "title": "Chat first message",
          "$ref": "#/definitions/webitel.chat.Message"
        },
        "queue": {
          "title": "Queue name",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "started_at": {
          "type": "string",
          "format": "int64",
          "title": "Chat time length"
        },
        "title": {
          "type": "string",
          "title": "Chat title"
        },
        "unprocessed_close": {
          "type": "boolean",
          "title": "Special attribute for the closed-active chats (on fact closed but should be on active tab on the front-end)\ncan be true only when close reason = any(\"client_leave\", \"client_timeout\", \"agent_timeout\", \"silence_timeout\")"
        }
      }
    },
    "webitel.chat.BroadcastError": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/google.rpc.Status"
        },
        "peer_id": {
          "type": "string"
        }
      }
    },
    "webitel.chat.BroadcastMessageRequest": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/webitel.chat.InputMessage"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.InputPeer"
          }
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.chat.BroadcastMessageResponse": {
      "type": "object",
      "properties": {
        "failure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.BroadcastError"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.chat.Button": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Postback/Callback data.",
          "type": "string"
        },
        "share": {
          "description": "Request to share contact info.",
          "$ref": "#/definitions/webitel.chat.Button.Request"
        },
        "text": {
          "description": "Caption to display.",
          "type": "string"
        },
        "url": {
          "description": "URL to navigate to ..",
          "type": "string"
        }
      }
    },
    "webitel.chat.Button.Request": {
      "description": "- phone: Phone Number\n - email: Email Address\n - contact: General Form\n - location: Current Location",
      "type": "string",
      "title": "Type of request to share contact info",
      "default": "phone",
      "enum": [
        "phone",
        "email",
        "contact",
        "location"
      ]
    },
    "webitel.chat.ButtonRow": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "title": "Button(s) in a row",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Button"
          }
        }
      }
    },
    "webitel.chat.Chat": {
      "description": "The Chat info.\nAlias: participant, subscriber, member, peer, leg.",
      "type": "object",
      "properties": {
        "context": {
          "description": "Context. Variables.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dc": {
          "description": "[D]omain[C]omponent primary ID.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier for this chat.\n[FROM] Member / Channel ID.\n\n// [TO] Group. Conversation ID.\n string chat_id = 2;",
          "type": "string"
        },
        "invite": {
          "description": "OPTIONAL. Invite[d] BY member info.",
          "$ref": "#/definitions/webitel.chat.Chat.Invite"
        },
        "join": {
          "description": "OPTIONAL. A non-zero value indicates that\nthe participant has joined the chat.",
          "type": "string",
          "format": "int64"
        },
        "left": {
          "type": "string",
          "format": "int64",
          "title": "OPTIONAL. A non-zero value indicates that\nthe participant has left the chat. OFFLINE(!)"
        },
        "peer": {
          "description": "[FROM]: User identity. Seed.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "queue": {
          "title": "OPTIONAL. Last dialog queue",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "title": {
          "description": "[TO]: Chat title.",
          "type": "string"
        },
        "via": {
          "description": "[FROM] VIA text gateway profile.",
          "$ref": "#/definitions/webitel.chat.Peer"
        }
      }
    },
    "webitel.chat.Chat.Invite": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the invitation to join the chat was sent"
        },
        "from": {
          "type": "string",
          "title": "Chat member ID who invited to join the chat"
        }
      }
    },
    "webitel.chat.ChatCustomers": {
      "type": "object",
      "title": "ChatCustomers dataset",
      "properties": {
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "description": "Dataset page of Customer(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Customer"
          }
        },
        "vias": {
          "type": "array",
          "title": "List of unique text gateways, mentioned in peers. [VIA]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.ChatDialogs": {
      "type": "object",
      "title": "ChatDialogs dataset",
      "properties": {
        "data": {
          "description": "Dataset page of Dialog(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Dialog"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.chat.ChatMembers": {
      "type": "object",
      "title": "ChatMembers dataset",
      "properties": {
        "data": {
          "description": "Page of the chat participants.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.chat.ChatMessage": {
      "description": "Chat Message.",
      "type": "object",
      "properties": {
        "chat": {
          "description": "Conversation the message belongs to ..",
          "$ref": "#/definitions/webitel.chat.ContactChat"
        },
        "context": {
          "description": "Context. Variables. Environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "date": {
          "description": "Timestamp when this message was sent (published).",
          "type": "string",
          "format": "int64"
        },
        "edit": {
          "description": "Timestamp when this message was last edited.",
          "type": "string",
          "format": "int64"
        },
        "file": {
          "description": "Message Media. Attachment.",
          "$ref": "#/definitions/webitel.chat.MessageFile"
        },
        "from": {
          "description": "Sender of the message.",
          "$ref": "#/definitions/webitel.chat.ChatPeer"
        },
        "id": {
          "description": "Unique message identifier inside this chat.",
          "type": "string",
          "format": "int64"
        },
        "keyboard": {
          "description": "Keyboard. Buttons. Quick Replies.",
          "$ref": "#/definitions/webitel.chat.MessageReplyMarkup"
        },
        "postback": {
          "description": "Postback. Reply Button Click[ed].",
          "$ref": "#/definitions/webitel.chat.MessagePostback"
        },
        "sender": {
          "description": "Chat Sender of the message, sent on behalf of a chat (member).",
          "$ref": "#/definitions/webitel.chat.ContactChat"
        },
        "text": {
          "description": "Message Text.",
          "type": "string"
        }
      }
    },
    "webitel.chat.ChatMessages": {
      "type": "object",
      "title": "ChatMessages dataset",
      "properties": {
        "chats": {
          "type": "array",
          "title": "List of chats mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "messages": {
          "description": "Dataset page of messages.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Message"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        },
        "page": {
          "description": "Dataset page number.",
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "type": "array",
          "title": "List of peers mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.ChatMessagesRequest.Offset": {
      "type": "object",
      "title": "Offset options",
      "properties": {
        "date": {
          "description": "Messages ONLY been sent before the specified epochtime(milli).",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        }
      }
    },
    "webitel.chat.ChatPeer": {
      "description": "Peer contact.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
          "type": "string"
        },
        "name": {
          "description": "Contact display **name**.",
          "type": "string"
        },
        "type": {
          "description": "Contact **type** provider.",
          "type": "string"
        }
      }
    },
    "webitel.chat.ContactChat": {
      "description": "The Chat info.\nAlias: participant, subscriber, member, peer, leg.",
      "type": "object",
      "properties": {
        "context": {
          "description": "Context. Variables.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dc": {
          "description": "[D]omain[C]omponent primary ID.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier for this chat.\n[FROM] Member / Channel ID.\n\n// [TO] Group. Conversation ID.\n string chat_id = 2;",
          "type": "string"
        },
        "invite": {
          "description": "OPTIONAL. Invite[d] BY member info.",
          "$ref": "#/definitions/webitel.chat.ContactChat.Invite"
        },
        "join": {
          "description": "OPTIONAL. A non-zero value indicates that\nthe participant has joined the chat.",
          "type": "string",
          "format": "int64"
        },
        "left": {
          "type": "string",
          "format": "int64",
          "title": "OPTIONAL. A non-zero value indicates that\nthe participant has left the chat. OFFLINE(!)"
        },
        "peer": {
          "description": "[FROM]: User identity. Seed.",
          "$ref": "#/definitions/webitel.chat.ChatPeer"
        },
        "title": {
          "description": "[TO]: Chat title.",
          "type": "string"
        },
        "via": {
          "description": "[FROM] VIA text gateway profile.",
          "$ref": "#/definitions/webitel.chat.ChatPeer"
        }
      }
    },
    "webitel.chat.ContactChat.Invite": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the invitation to join the chat was sent"
        },
        "from": {
          "type": "string",
          "title": "Chat member ID who invited to join the chat"
        }
      }
    },
    "webitel.chat.Customer": {
      "description": "Customer is external chat contact.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Customer unique **ID**entifier.\nAccount **type**-specific string.",
          "type": "string"
        },
        "name": {
          "description": "Customer account **name**.",
          "type": "string"
        },
        "type": {
          "description": "Customer account **type**.",
          "type": "string"
        },
        "via": {
          "description": "[VIA] Text gateway associations.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.Dialog": {
      "description": "Chat Dialog. Conversation info.",
      "type": "object",
      "properties": {
        "closed": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when dialog was closed.\nZero value means - connected (online)\nOtherwise - disconnected (offline)"
        },
        "closed_cause": {
          "type": "string",
          "title": "Close reason if closed from the request sender perspective"
        },
        "context": {
          "description": "Context. Variables. Environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "date": {
          "description": "Timestamp of the latest activity.",
          "type": "string",
          "format": "int64"
        },
        "dc": {
          "description": "[D]omain[C]omponent primary ID.",
          "type": "string",
          "format": "int64"
        },
        "from": {
          "description": "[FROM]: Originator.\nLeg[A]. Contact / User.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "id": {
          "description": "The Conversation thread unique ID.",
          "type": "string"
        },
        "members": {
          "description": "[TO]: Participants.\nLeg[A+]. Schema / Agent.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "message": {
          "description": "The latest (top) message.",
          "$ref": "#/definitions/webitel.chat.Message"
        },
        "queue": {
          "title": "OPTIONAL. Last dialog queue",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "started": {
          "description": "Timestamp when dialog started.",
          "type": "string",
          "format": "int64"
        },
        "title": {
          "description": "Title of the dialog.",
          "type": "string"
        },
        "via": {
          "description": "[VIA] Text gateway [FROM] originated thru ...",
          "$ref": "#/definitions/webitel.chat.Peer"
        }
      }
    },
    "webitel.chat.EmptyResponse": {
      "type": "object"
    },
    "webitel.chat.File": {
      "description": "Media File.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "File location"
        },
        "name": {
          "type": "string",
          "title": "Filename"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Size in bytes"
        },
        "type": {
          "type": "string",
          "title": "MIME media type"
        },
        "url": {
          "type": "string",
          "title": "File url (optional)"
        }
      }
    },
    "webitel.chat.GetAgentChatsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.AgentChat"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.chat.GetCaseChatHistoryRequest.Offset": {
      "type": "object",
      "title": "Offset options",
      "properties": {
        "date": {
          "description": "Messages ONLY been sent before the specified epochtime(milli).",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        }
      }
    },
    "webitel.chat.GetContactChatHistoryRequest.Offset": {
      "type": "object",
      "title": "Offset options",
      "properties": {
        "date": {
          "description": "Messages ONLY been sent before the specified epochtime(milli).",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        }
      }
    },
    "webitel.chat.GetContactChatHistoryResponse": {
      "type": "object",
      "title": "ChatMessages dataset",
      "properties": {
        "chats": {
          "type": "array",
          "title": "List of chats mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.ContactChat"
          }
        },
        "messages": {
          "description": "Dataset page of messages.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.ChatMessage"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        },
        "page": {
          "description": "Dataset page number.",
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "type": "array",
          "title": "List of peers mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.ChatPeer"
          }
        }
      }
    },
    "webitel.chat.InputButton": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webitel.chat.InputButtonRow": {
      "type": "object",
      "properties": {
        "buttons": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.InputButton"
          }
        }
      }
    },
    "webitel.chat.InputFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webitel.chat.InputKeyboard": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.InputButtonRow"
          }
        }
      }
    },
    "webitel.chat.InputMessage": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/webitel.chat.InputFile"
        },
        "keyboard": {
          "$ref": "#/definitions/webitel.chat.InputKeyboard"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "webitel.chat.InputPeer": {
      "description": "InputPeer identity.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "via": {
          "type": "string"
        }
      }
    },
    "webitel.chat.LinkContactToClientNAResponse": {
      "type": "object"
    },
    "webitel.chat.Lookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "webitel.chat.MarkChatProcessedResponse": {
      "type": "object"
    },
    "webitel.chat.Message": {
      "description": "Chat Message.",
      "type": "object",
      "properties": {
        "chat": {
          "description": "Conversation the message belongs to ..",
          "$ref": "#/definitions/webitel.chat.Chat"
        },
        "context": {
          "description": "Context. Variables. Environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "date": {
          "description": "Timestamp when this message was sent (published).",
          "type": "string",
          "format": "int64"
        },
        "edit": {
          "description": "Timestamp when this message was last edited.",
          "type": "string",
          "format": "int64"
        },
        "file": {
          "description": "Message Media. Attachment.",
          "$ref": "#/definitions/webitel.chat.File"
        },
        "from": {
          "description": "Sender of the message.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "id": {
          "description": "Unique message identifier inside this chat.",
          "type": "string",
          "format": "int64"
        },
        "keyboard": {
          "description": "Keyboard. Buttons. Quick Replies.",
          "$ref": "#/definitions/webitel.chat.ReplyMarkup"
        },
        "postback": {
          "description": "Postback. Reply Button Click[ed].",
          "$ref": "#/definitions/webitel.chat.Postback"
        },
        "sender": {
          "description": "Chat Sender of the message, sent on behalf of a chat (member).",
          "$ref": "#/definitions/webitel.chat.Chat"
        },
        "text": {
          "description": "Message Text.",
          "type": "string"
        }
      }
    },
    "webitel.chat.MessageButton": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Postback/Callback data.",
          "type": "string"
        },
        "share": {
          "description": "Request to share contact info.",
          "$ref": "#/definitions/webitel.chat.MessageButton.Request"
        },
        "text": {
          "description": "Caption to display.",
          "type": "string"
        },
        "url": {
          "description": "URL to navigate to ..",
          "type": "string"
        }
      }
    },
    "webitel.chat.MessageButton.Request": {
      "description": "- phone: Phone Number\n - email: Email Address\n - contact: General Form\n - location: Current Location",
      "type": "string",
      "title": "Type of request to share contact info",
      "default": "phone",
      "enum": [
        "phone",
        "email",
        "contact",
        "location"
      ]
    },
    "webitel.chat.MessageButtonRow": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "title": "Button(s) in a row",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.MessageButton"
          }
        }
      }
    },
    "webitel.chat.MessageFile": {
      "description": "Media File.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "File location"
        },
        "name": {
          "type": "string",
          "title": "Filename"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Size in bytes"
        },
        "type": {
          "type": "string",
          "title": "MIME media type"
        },
        "url": {
          "type": "string",
          "title": "Exact url of file (if exists)"
        }
      }
    },
    "webitel.chat.MessagePostback": {
      "description": "Postback. Reply Button Click[ed].",
      "type": "object",
      "properties": {
        "code": {
          "description": "Data associated with the Button.",
          "type": "string"
        },
        "mid": {
          "description": "Message ID of the button.",
          "type": "string",
          "format": "int64"
        },
        "text": {
          "description": "Button's display caption.",
          "type": "string"
        }
      }
    },
    "webitel.chat.MessageReplyMarkup": {
      "type": "object",
      "properties": {
        "buttons": {
          "type": "array",
          "title": "Markup of button(s)",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.MessageButtonRow"
          }
        },
        "no_input": {
          "description": "An option used to block input to force\nthe user to respond with one of the buttons.",
          "type": "boolean"
        }
      }
    },
    "webitel.chat.Peer": {
      "description": "Peer contact.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
          "type": "string"
        },
        "name": {
          "description": "Contact display **name**.",
          "type": "string"
        },
        "type": {
          "description": "Contact **type** provider.",
          "type": "string"
        }
      }
    },
    "webitel.chat.Postback": {
      "description": "Postback. Reply Button Click[ed].",
      "type": "object",
      "properties": {
        "code": {
          "description": "Data associated with the Button.",
          "type": "string"
        },
        "mid": {
          "description": "Message ID of the button.",
          "type": "string",
          "format": "int64"
        },
        "text": {
          "description": "Button's display caption.",
          "type": "string"
        }
      }
    },
    "webitel.chat.ReplyMarkup": {
      "type": "object",
      "properties": {
        "buttons": {
          "type": "array",
          "title": "Markup of button(s)",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.ButtonRow"
          }
        },
        "no_input": {
          "description": "An option used to block input to force\nthe user to respond with one of the buttons.",
          "type": "boolean"
        }
      }
    },
    "webitel.chat.Timerange": {
      "description": "Timerange filter value.",
      "type": "object",
      "properties": {
        "since": {
          "description": "Since epochtime (milli).\n**Match**: greater than ..",
          "type": "string",
          "format": "int64"
        },
        "until": {
          "description": "Until epochtime (milli).\n**Match**: less or equal ..",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.AccessMode": {
      "type": "string",
      "title": "- READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
      "default": "READ",
      "enum": [
        "READ",
        "WRITE",
        "DELETE"
      ]
    },
    "webitel.contacts.AddContactsToGroupRequest": {
      "description": "Request message for adding contacts to a group.",
      "type": "object",
      "properties": {
        "contact_ids": {
          "description": "List of contact IDs to add to the group.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "group_ids": {
          "description": "The unique ID of the group.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "webitel.contacts.Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "webitel.contacts.CallEvent": {
      "type": "object",
      "properties": {
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.CallFile"
          }
        },
        "flow_scheme": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "gateway": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean"
        },
        "is_inbound": {
          "type": "boolean"
        },
        "is_missed": {
          "type": "boolean"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Lookup"
          }
        },
        "queue": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "total_duration": {
          "type": "string",
          "format": "int64"
        },
        "transcripts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.TranscriptLookup"
          }
        }
      }
    },
    "webitel.contacts.CallFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.ChatEvent": {
      "type": "object",
      "properties": {
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "flow_scheme": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "gateway": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean"
        },
        "is_inbound": {
          "type": "boolean"
        },
        "is_missed": {
          "type": "boolean"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Lookup"
          }
        },
        "queue": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.Comment": {
      "type": "object",
      "title": "The Contact's internal Comment.\nOutput purpose only",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "format": {
          "description": "Styles of the text components.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment.Format"
          }
        },
        "id": {
          "description": "The unique ID of the Comment. Never changes.",
          "type": "string"
        },
        "text": {
          "description": "Rich Text, multi-line[d] string value.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "created_at": "1680268507698",
        "created_by": {
          "id": "34",
          "name": "John Doe"
        },
        "etag": "FqaTCDLbhpaoUreL",
        "id": "354",
        "text": "This is a new note about the contact's recent activity. So ...",
        "updated_at": "1680268507698",
        "updated_by": {
          "id": "34",
          "name": "John Doe"
        }
      }
    },
    "webitel.contacts.Comment.Format": {
      "type": "object",
      "properties": {
        "bold": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Bold"
        },
        "codeblock": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Codeblock"
        },
        "italic": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Italic"
        },
        "length": {
          "description": "Length text runes count.",
          "type": "integer",
          "format": "int32"
        },
        "link": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Link"
        },
        "monospace": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Monospace"
        },
        "offset": {
          "description": "Offset text runes count.",
          "type": "integer",
          "format": "int32"
        },
        "strikethrough": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Strikethrough"
        },
        "underline": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Underline"
        }
      }
    },
    "webitel.contacts.Comment.Format.Bold": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Codeblock": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        }
      }
    },
    "webitel.contacts.Comment.Format.Italic": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Link": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "REQUIRED. If text[offset:length] is a regular plaintext, NOT an URL itself !"
        }
      }
    },
    "webitel.contacts.Comment.Format.Monospace": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Strikethrough": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Underline": {
      "type": "object"
    },
    "webitel.contacts.CommentList": {
      "description": "Comment dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Comment dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "354",
            "text": "This is a new note about the contact's recent activity. So ...",
            "updated_at": "1680516785357",
            "updated_by": {
              "id": "34",
              "name": "John Doe"
            }
          },
          {
            "created_at": "1680268537698",
            "created_by": {
              "id": "56",
              "name": "Bruce Wayne"
            },
            "etag": "FZiTxVgr41VPFxyu",
            "id": "357",
            "text": "This contact may become a customer in a few days",
            "updated_at": "1680268563357",
            "updated_by": {
              "name": "Jane Lee (deleted)"
            },
            "ver": "4"
          }
        ],
        "next": true,
        "page": 1
      }
    },
    "webitel.contacts.Condition": {
      "type": "object",
      "title": "Condition",
      "properties": {
        "assignee": {
          "description": "The ID of the assignee that should be assigned if the condition is met (optional).",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "created_at": {
          "description": "The timestamp (in milliseconds) of when the condition was created.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "The user who created this condition.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "expression": {
          "description": "The query or condition expression used to evaluate the group.",
          "type": "string"
        },
        "group": {
          "description": "The ID of the static group that should be assigned if the condition is met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "description": "The unique ID of the condition.",
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "description": "The timestamp (in milliseconds) of the last update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed the last update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.ConditionList": {
      "description": "A list of Conditions.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of conditions.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Condition"
          }
        },
        "next": {
          "description": "Have more records.",
          "type": "boolean"
        },
        "page": {
          "description": "Page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.Contact": {
      "description": "The Contact principal source.\nOUTPUT purpose only.",
      "type": "object",
      "properties": {
        "about": {
          "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
          "type": "string"
        },
        "comments": {
          "description": "The Contact's internal comment(s).",
          "$ref": "#/definitions/webitel.contacts.CommentList"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "custom": {
          "description": "Custom extension data fields.",
          "type": "object"
        },
        "domain": {
          "description": "READONLY. The contact's metadata.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "emails": {
          "description": "The Contact's email address(es).",
          "$ref": "#/definitions/webitel.contacts.EmailList"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "groups": {
          "description": "The Contact's associated group(s).",
          "$ref": "#/definitions/webitel.contacts.ContactGroupList"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "imclients": {
          "description": "The contact's [I]nstant[M]essaging clients.",
          "$ref": "#/definitions/webitel.contacts.IMClientList"
        },
        "labels": {
          "description": "The Contact's associated tag(s).",
          "$ref": "#/definitions/webitel.contacts.LabelList"
        },
        "languages": {
          "description": "A Contact's locale preference(s).",
          "$ref": "#/definitions/webitel.contacts.LanguageList"
        },
        "managers": {
          "description": "The Contact's internal manager(s).",
          "$ref": "#/definitions/webitel.contacts.ManagerList"
        },
        "mode": {
          "description": "[R]ecord[b]ased[A]ccess[C]ontrol mode granted.",
          "type": "string"
        },
        "name": {
          "description": "The Contact's name.\nThis field is a singleton for Contact sources.",
          "$ref": "#/definitions/webitel.contacts.Name"
        },
        "phones": {
          "description": "The Contact's phone numbers.",
          "$ref": "#/definitions/webitel.contacts.PhoneList"
        },
        "photos": {
          "description": "Output only. The Contact's photo(s).",
          "$ref": "#/definitions/webitel.contacts.PhotoList",
          "readOnly": true
        },
        "timezones": {
          "description": "The Contact's timezone preference(s).",
          "$ref": "#/definitions/webitel.contacts.TimezoneList"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "user": {
          "title": "user connected to the contact",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "variables": {
          "description": "Arbitrary client data that is populated by clients.\nDuplicate keys and values are allowed.",
          "$ref": "#/definitions/webitel.contacts.VariableList"
        },
        "ver": {
          "description": "READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ContactGroup": {
      "description": "The Contact's Group association.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "group": {
          "description": "Group of contacts associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ContactGroupList": {
      "description": "Contact groups dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactGroupList.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Group dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.ContactGroup"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ContactList": {
      "description": "Contact dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Contact(s) dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Contact"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.CreateDynamicGroupRequest": {
      "description": "Request message for creating a new dynamic group.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "condition": {
          "description": "Input details for the dynamic group.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputDynamicCondition"
          }
        },
        "default_group": {
          "description": "Default static group to assign if no conditions are met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "description": {
          "description": "The description of the dynamic group.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled status of the dynamic group: active/inactive.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the dynamic group.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.CreateGroupRequest": {
      "description": "Request message for creating a new group.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "description": "The description of the group.",
          "type": "string"
        },
        "enabled": {
          "description": "The enabled status of the group.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the group.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.DayTimeline": {
      "type": "object",
      "properties": {
        "calls_count": {
          "type": "string",
          "format": "int64"
        },
        "chats_count": {
          "type": "string",
          "format": "int64"
        },
        "day_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "emails_count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Event"
          }
        }
      }
    },
    "webitel.contacts.DynamicCondition": {
      "type": "object",
      "title": "Dynamic Group condition",
      "properties": {
        "assignee": {
          "description": "The ID of the assignee that should be assigned if the condition is met (optional).",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "expression": {
          "description": "The query or condition expression used to evaluate the group.",
          "type": "string"
        },
        "group": {
          "description": "The ID of the static group that should be assigned if the condition is met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "description": "The unique ID of the condition.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.DynamicConditions.CreateConditionBody": {
      "description": "Request message for creating a new condition.",
      "type": "object",
      "properties": {
        "assignee": {
          "description": "The ID of the assignee that should be assigned if the condition is met (optional).",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "expression": {
          "description": "The query or condition expression used to evaluate the group.",
          "type": "string"
        },
        "group": {
          "description": "The ID of the static group that should be assigned if the condition is met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.DynamicGroup": {
      "type": "object",
      "title": "Dynamic Group",
      "properties": {
        "conditions": {
          "description": "List of dynamic conditions associated with the group.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.DynamicCondition"
          }
        },
        "created_at": {
          "description": "Timestamp(milli) of the group's creation.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "The user who created this dynamic group.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "default_group": {
          "description": "Default static group to be assigned if no conditions are met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "description": {
          "description": "The description of the dynamic group.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled status of the group: active or inactive.",
          "type": "boolean"
        },
        "id": {
          "description": "The unique ID of the dynamic group. Never changes.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "The name of the dynamic group.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last group update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed the last update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.DynamicGroupInput": {
      "description": "Input message for creating/updating a dynamic group.",
      "type": "object",
      "properties": {
        "default_group": {
          "description": "Default static group to assign if no conditions are met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "description": {
          "description": "The description of the dynamic group.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled status of the dynamic group: active/inactive.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the dynamic group.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.DynamicGroupList": {
      "description": "A list of Dynamic Groups.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of dynamic groups.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.DynamicGroup"
          }
        },
        "next": {
          "description": "Have more records.",
          "type": "boolean"
        },
        "page": {
          "description": "Page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.EmailAddress": {
      "description": "The Contact's email address.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
        }
      }
    },
    "webitel.contacts.EmailEvent": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Attachment"
          }
        },
        "body": {
          "type": "string",
          "title": "plain text of email"
        },
        "cc": {
          "type": "array",
          "title": "array of ccs (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "type": "array",
          "title": "array of senders (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "html": {
          "type": "string",
          "title": "html body of email"
        },
        "id": {
          "type": "string"
        },
        "is_detailed": {
          "type": "boolean",
          "title": "reserved for the open"
        },
        "is_inbound": {
          "type": "boolean",
          "title": "inbound/outbound email"
        },
        "owner": {
          "title": "Agent who sent/accepted",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "profile": {
          "title": "email profile",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "sender": {
          "type": "array",
          "title": "array of receivers (email addresses)",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string"
        },
        "to": {
          "type": "array",
          "title": "array of receivers (email addresses)",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "webitel.contacts.EmailList": {
      "description": "Email dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "EmailAddress dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.EmailAddress"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.EmptyResponse": {
      "type": "object"
    },
    "webitel.contacts.Event": {
      "type": "object",
      "properties": {
        "call": {
          "$ref": "#/definitions/webitel.contacts.CallEvent"
        },
        "chat": {
          "$ref": "#/definitions/webitel.contacts.ChatEvent"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "email": {
          "$ref": "#/definitions/webitel.contacts.EmailEvent"
        },
        "type": {
          "$ref": "#/definitions/webitel.contacts.TimelineEventType"
        }
      }
    },
    "webitel.contacts.GetTimelineCounterResponse": {
      "type": "object",
      "properties": {
        "calls_count": {
          "type": "string",
          "format": "int64"
        },
        "chats_count": {
          "type": "string",
          "format": "int64",
          "title": "defined event types"
        },
        "date_from": {
          "type": "string",
          "format": "int64",
          "title": "filter dates"
        },
        "date_to": {
          "type": "string",
          "format": "int64"
        },
        "emails_count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.GetTimelineResponse": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.DayTimeline"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.Group": {
      "type": "object",
      "title": "Group of Contacts",
      "properties": {
        "conditions": {
          "description": "List of dynamic conditions associated with the group.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.DynamicCondition"
          }
        },
        "contacts_size": {
          "type": "string",
          "format": "int64",
          "title": "The number of contacts in the group (null for dynamic groups)"
        },
        "created_at": {
          "description": "Timestamp(milli) of the group's creation.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "The user who created this group.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "default_group": {
          "description": "Default static group to be assigned if no conditions are met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "description": {
          "description": "The description of the group.",
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "description": "The unique ID of the group. Never changes.",
          "type": "string"
        },
        "name": {
          "description": "The name of the group.",
          "type": "string"
        },
        "type": {
          "title": "type ( Dynamic / Static )",
          "$ref": "#/definitions/webitel.contacts.GroupType"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last group update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed the last update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.GroupList": {
      "description": "A list of Groups.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of groups.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Group"
          }
        },
        "next": {
          "description": "Have more records.",
          "type": "boolean"
        },
        "page": {
          "description": "Page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.GroupType": {
      "description": "- GROUP_TYPE_UNSPECIFIED: Default value\n - STATIC: Static group\n - DYNAMIC: Dynamic group",
      "type": "string",
      "title": "Enum for Group Type",
      "default": "GROUP_TYPE_UNSPECIFIED",
      "enum": [
        "GROUP_TYPE_UNSPECIFIED",
        "STATIC",
        "DYNAMIC"
      ]
    },
    "webitel.contacts.IMClient": {
      "description": "A contact's [I]nstant[M]essaging client.",
      "type": "object",
      "properties": {
        "app": {
          "description": "App (Text-Gateway) used to connect the IM client.\nId will be internal id of gateway.\nName will be name of the gateway.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "external_id": {
          "description": "External user id.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol used to connect the IM client.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "user": {
          "description": "External user which contacted to us.\nId will be from external service.\nName will be from external service.",
          "$ref": "#/definitions/webitel.contacts.Lookup",
          "example": {
            "id": "596417343",
            "name": "John Doe",
            "type": "telegram"
          }
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "via": {
          "description": "[Via] App(-specific) peer(-id) to connect[from] the IM client.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.IMClientList": {
      "type": "object",
      "properties": {
        "data": {
          "description": "IMClient dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.IMClient"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.InputComment": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "format": {
          "description": "NEW Text components styling format.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment.Format"
          }
        },
        "text": {
          "description": "NEW Text of the comment.",
          "type": "string"
        }
      },
      "example": {
        "text": "This is a new note about the contact's recent activity. So ..."
      }
    },
    "webitel.contacts.InputCondition": {
      "description": "Input message for creating/updating a condition.",
      "type": "object",
      "properties": {
        "assignee": {
          "description": "The ID of the assignee that should be assigned if the condition is met (optional).",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "expression": {
          "description": "The query or condition expression used to evaluate the group.",
          "type": "string"
        },
        "group": {
          "description": "The ID of the static group that should be assigned if the condition is met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "position": {
          "description": "The position of the condition in the group.",
          "$ref": "#/definitions/webitel.contacts.Position"
        }
      }
    },
    "webitel.contacts.InputContact": {
      "description": "The Contact principal input.",
      "type": "object",
      "properties": {
        "about": {
          "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
          "type": "string"
        },
        "comments": {
          "description": "Publish NEW comment(s) for this Contact.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputComment"
          }
        },
        "custom": {
          "description": "Custom extension data fields.",
          "type": "object"
        },
        "emails": {
          "description": "The Contact's email address(es).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
          }
        },
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "groups": {
          "description": "The Contact's associated group(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputContactGroup"
          }
        },
        "imclients": {
          "description": "The contact's [I]nstant[M]essaging clients.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputIMClient"
          }
        },
        "labels": {
          "description": "The Contact's associated label(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputLabel"
          }
        },
        "languages": {
          "description": "A Contact's locale preference(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputLanguage"
          }
        },
        "managers": {
          "description": "The Contact's internal manager(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputManager"
          }
        },
        "name": {
          "title": "The Contact's name. Singleton",
          "$ref": "#/definitions/webitel.contacts.InputName"
        },
        "phones": {
          "description": "The Contact's phone numbers.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
          }
        },
        "photos": {
          "description": "Output only. The Contact's photo(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputPhoto"
          },
          "readOnly": true
        },
        "timezones": {
          "description": "The Contact's timezone preference(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputTimezone"
          }
        },
        "variables": {
          "description": "Arbitrary client data that is populated by clients.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputVariable"
          }
        }
      }
    },
    "webitel.contacts.InputContactGroup": {
      "description": "An input of the Contact's groups.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "group": {
          "description": "Group of contacts associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.InputDynamicCondition": {
      "type": "object",
      "title": "Dynamic Group condition",
      "properties": {
        "assignee": {
          "description": "The ID of the assignee that should be assigned if the condition is met (optional).",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "expression": {
          "description": "The query or condition expression used to evaluate the group.",
          "type": "string"
        },
        "group": {
          "description": "The ID of the static group that should be assigned if the condition is met.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.InputEmailAddress": {
      "description": "Input of the Contact's email address.",
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
        }
      },
      "example": {
        "email": "user@domain",
        "etag": "1679792219687",
        "primary": true,
        "type": {
          "name": "personal"
        },
        "verified": false
      }
    },
    "webitel.contacts.InputGroup": {
      "type": "object",
      "title": "Input message for creating/updating a group",
      "properties": {
        "description": {
          "description": "The new description of the group.",
          "type": "string"
        },
        "enabled": {
          "description": "The new enabled status of the group.",
          "type": "boolean"
        },
        "name": {
          "description": "The new name of the group.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.InputIMClient": {
      "description": "Input of the contact IM client.",
      "type": "object",
      "properties": {
        "created_by": {
          "description": "Id of Agent created this IM client.",
          "type": "string"
        },
        "external_user": {
          "type": "string",
          "title": "External user id"
        },
        "gateway_id": {
          "description": "App (Text-Gateway) used to connect the IM client.",
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "via": {
          "description": "[Via] App(-specific) peer(-id) to connect[from] the IM client.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.InputLabel": {
      "description": "A Contact's associated Tag.\nOutput purpose only.",
      "type": "object",
      "required": [
        "tag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "label": {
          "description": "REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.InputLanguage": {
      "description": "An input of the Contact's language.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing association.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default\namong others of the same type.",
          "type": "boolean"
        },
        "tag": {
          "type": "string",
          "title": "NEW, well-formed IETF BCP 47 language tag representing the locale.\nhttps://www.rfc-editor.org/info/bcp47"
        }
      },
      "example": {
        "primary": false,
        "tag": "uk"
      }
    },
    "webitel.contacts.InputManager": {
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default among others.",
          "type": "boolean"
        },
        "user": {
          "description": "Responsible User.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      },
      "example": {
        "primary": true,
        "user": {
          "id": "357",
          "name": "Bruce Wayne"
        }
      }
    },
    "webitel.contacts.InputName": {
      "type": "object",
      "properties": {
        "common_name": {
          "description": "REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
          "type": "string"
        },
        "family_name": {
          "type": "string",
          "title": "OPTIONAL. Surname(s) or last name(s) of the End-User.\nNote that in some cultures, people can have multiple family names or no family name;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name"
        },
        "given_name": {
          "type": "string",
          "title": "OPTIONAL. Given name(s) or first name(s) of the End-User.\nNote that in some cultures, people can have multiple given names;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name"
        },
        "middle_name": {
          "description": "OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.",
          "type": "string"
        },
        "verified": {
          "description": "Indicate whether Contact, as a Person, realy owns this associated name.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.InputPhoneNumber": {
      "description": "Input of the contact phone number.",
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
        }
      }
    },
    "webitel.contacts.InputPhoto": {
      "description": "Input of the photo.",
      "type": "object",
      "required": [
        "file_url"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing association.",
          "type": "string"
        },
        "photo_id": {
          "type": "string",
          "format": "int64",
          "title": "File unique ID within 'storage' service"
        },
        "photo_url": {
          "type": "string",
          "title": "The URL of the photo.\nYou can change the desired size by appending\na query parameter sz={size} at the end of the url,\nwhere {size} is the size in pixels.\nExample: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50"
        },
        "primary": {
          "description": "True if the photo is a default photo; false if the photo is a user-provided photo.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.InputTimezone": {
      "description": "An input of the Contact's timezones.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default among others.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone dictionary reference value associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.InputVariable": {
      "description": "Input of the Contact's variable.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "key": {
          "description": "NEW Key.",
          "type": "string",
          "pattern": "^\\w+$"
        },
        "value": {
          "description": "NEW Value."
        }
      },
      "example": {
        "key": "var_rename",
        "value": [
          "string_item",
          [
            3,
            7
          ],
          false,
          null
        ]
      }
    },
    "webitel.contacts.Label": {
      "description": "A Contact's associated Tag.\nOutput purpose only.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "label": {
          "description": "REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LabelInfo": {
      "type": "object",
      "title": "LabelInfo about the Label's tag",
      "properties": {
        "label": {
          "description": "Label tag.\n\nCount of sources.\nint32 count = 2;\n Sources of Contacts assigned.\nrepeated string sources = 3;",
          "type": "string"
        }
      }
    },
    "webitel.contacts.LabelList": {
      "description": "LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Label(s) dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Label"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "Page number of partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LabelTags": {
      "description": "LabelTags dataset list of label's info.",
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "title": "Labels info dataset",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.LabelInfo"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of partial result.",
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "type": "array",
          "title": "Contact sources dataset",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Lookup"
          }
        }
      }
    },
    "webitel.contacts.Language": {
      "description": "A Contact's locale preference.\nOutput purpose only.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "uk              ; golang.org/x/text/language.MustParse(s).Base()"
        },
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "lang": {
          "type": "string",
          "title": "Ukrainian       ; golang.org/x/text/language/display.English.Languages().Name(tag)"
        },
        "name": {
          "type": "string",
          "title": "українська      ; golang.org/x/text/language/display.Self().Name(tag)"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "region": {
          "type": "string",
          "title": "UA              ; golang.org/x/text/language.MustParse(s).Region()"
        },
        "script": {
          "type": "string",
          "title": "Cyrl; (Cyrillic); golang.org/x/text/language.MustParse(s).Script()"
        },
        "tag": {
          "type": "string",
          "title": "The well-formed IETF BCP 47 language tag representing the locale.\nhttps://www.rfc-editor.org/info/bcp47"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LanguageList": {
      "description": "LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Page of the Contact's Language(s) dataset.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Language"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next indicate whether there are more result records(page+) available.\nIf set - next page is available with query ?size=$(data.length)\u0026page=$(page++)"
        },
        "page": {
          "description": "Page number of partial result dataset records.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "code": "uk",
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "7",
            "lang": "Ukrainian",
            "name": "українська",
            "primary": true,
            "region": "UA",
            "script": "Cyrl",
            "tag": "uk-UA",
            "updated_at": "1680516785357",
            "updated_by": {
              "name": "Jane Lee (deleted)"
            },
            "ver": "3"
          }
        ],
        "next": true,
        "page": 1
      }
    },
    "webitel.contacts.LocateConditionResponse": {
      "description": "Response message for locating a condition by ID.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/webitel.contacts.Condition"
        }
      }
    },
    "webitel.contacts.LocateDynamicGroupResponse": {
      "description": "Response message for locating a dynamic group by ID.",
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/webitel.contacts.DynamicGroup"
        }
      }
    },
    "webitel.contacts.LocateGroupResponse": {
      "description": "Response message for locating a group.",
      "type": "object",
      "properties": {
        "group": {
          "description": "The located group.",
          "$ref": "#/definitions/webitel.contacts.Group"
        }
      }
    },
    "webitel.contacts.Lookup": {
      "description": "Lookup reference information.\nSimplified search filter to uniquely identify related object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Reference Object unique ID.",
          "type": "string"
        },
        "name": {
          "description": "Reference Object display name.",
          "type": "string"
        },
        "type": {
          "description": "Reference Object well-known type.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.Manager": {
      "description": "Manager. The Contact's responsible User.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "user": {
          "description": "Responsible User.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ManagerList": {
      "description": "Manager dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Manager dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Manager"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.Name": {
      "description": "A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
      "type": "object",
      "properties": {
        "common_name": {
          "description": "REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
          "type": "string"
        },
        "family_name": {
          "type": "string",
          "title": "OPTIONAL. Surname(s) or last name(s) of the End-User.\nNote that in some cultures, people can have multiple family names or no family name;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name"
        },
        "given_name": {
          "type": "string",
          "title": "OPTIONAL. Given name(s) or first name(s) of the End-User.\nNote that in some cultures, people can have multiple given names;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name"
        },
        "middle_name": {
          "description": "OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.",
          "type": "string"
        },
        "verified": {
          "description": "Indicate whether Contact, as a Person, realy owns this associated name.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.PhoneList": {
      "description": "PhoneNumber dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "PhoneNumber dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.PhoneNumber"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.PhoneNumber": {
      "description": "The Contact's phone number.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
        }
      }
    },
    "webitel.contacts.Photo": {
      "description": "A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "photo_id": {
          "type": "string",
          "format": "int64",
          "title": "File unique ID within 'storage' service"
        },
        "photo_url": {
          "type": "string",
          "title": "The URL of the photo.\nYou can change the desired size by appending\na query parameter sz={size} at the end of the url,\nwhere {size} is the size in pixels.\nExample: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50"
        },
        "primary": {
          "description": "True if the photo is a default photo; false if the photo is a user-provided photo.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.PhotoList": {
      "description": "Photo dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Photo dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Photo"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.Position": {
      "description": "Position details for conditions in the group.",
      "type": "object",
      "properties": {
        "cond_down": {
          "type": "string",
          "format": "int64",
          "title": "The target position where the condition should be moved.\nif we set last (n) index position -- set only cond_down -- cond_up should be ZERO"
        },
        "cond_up": {
          "type": "string",
          "format": "int64",
          "title": "The current position of the condition in the list.\nif we set zero (0) index position -- set only cond_up -- cond_down should be ZERO"
        }
      }
    },
    "webitel.contacts.TimelineEventType": {
      "type": "string",
      "default": "chat",
      "enum": [
        "chat",
        "call",
        "email"
      ]
    },
    "webitel.contacts.Timezone": {
      "description": "A Contact's timezone preference.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone dictionary reference value associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.TimezoneList": {
      "description": "Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Timezone dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Timezone"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.TranscriptLookup": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "webitel.contacts.Variable": {
      "description": "The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "key": {
          "description": "Key name of the variable.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "value": {
          "description": "JSON value of the variable."
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "created_at": "1680268507698",
        "created_by": {
          "id": "34",
          "name": "John Doe"
        },
        "etag": "FqaTCDLbhpaoUreL",
        "id": "6",
        "key": "var_complex",
        "updated_at": "1680516785357",
        "updated_by": {
          "name": "Ja Lee (deleted)"
        },
        "value": {
          "inner_var": null,
          "value_arr": [
            "string",
            [
              null
            ],
            false,
            1
          ]
        },
        "ver": "2"
      }
    },
    "webitel.contacts.VariableList": {
      "description": "Variable dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Variable dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Variable"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "4",
            "key": "my_string",
            "updated_at": "1680268507698",
            "updated_by": {
              "id": "34",
              "name": "John Doe"
            },
            "value": "string_value"
          },
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "ogTsuZAIA1CcEZGC",
            "id": "6",
            "key": "var_complex",
            "updated_at": "1680516785357",
            "updated_by": {
              "name": "Ja Lee (deleted)"
            },
            "value": {
              "inner_var": null,
              "value_arr": [
                "string",
                [
                  null
                ],
                false,
                1
              ]
            },
            "ver": "2"
          }
        ],
        "next": true,
        "page": 1
      }
    },
    "webitel.knowledgebase.Article": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "has_children": {
          "description": "Indicates that the article has children.",
          "type": "boolean"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "parent_article": {
          "description": "The parent article ID.",
          "type": "string",
          "format": "int64"
        },
        "pinned": {
          "description": "Indicates that the article is pinned on the top of list.",
          "type": "boolean"
        },
        "space_id": {
          "description": "Space ID associated with.",
          "type": "string",
          "format": "int64"
        },
        "state": {
          "description": "Indicates the state of the article.",
          "type": "boolean"
        },
        "tags": {
          "description": "Tags associated with the article.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "description": "The text content of the article.",
          "type": "string"
        },
        "title": {
          "description": "The title of the article.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "ver": {
          "description": "READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.ArticleList": {
      "description": "Article dataset.\nNOTE: Edge represents connection between two nodes.\nSo this spaceArticles.data are always subordinate to some space.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Article dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.Article"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.ArticleVersion": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "parent_article": {
          "description": "The parent article ID.",
          "type": "string",
          "format": "int64"
        },
        "space_id": {
          "description": "Space ID associated with.",
          "type": "string",
          "format": "int64"
        },
        "tags": {
          "description": "Tags associated with the article.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "description": "The text content of the article.",
          "type": "string"
        },
        "title": {
          "description": "The title of the article.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who loaded this attachment.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.ArticleVersionList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.ArticleVersion"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.Attachment": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "size": {
          "description": "The size of the attachment.",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "The title of the article.",
          "type": "string"
        },
        "uploaded_by": {
          "description": "The user who loaded this attachment.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        }
      }
    },
    "webitel.knowledgebase.AttachmentList": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Attachment dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.Attachment"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.Combined": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the record (article or space)"
        },
        "name": {
          "type": "string",
          "title": "Display name of the record (article or space)"
        },
        "type": {
          "type": "string",
          "title": "Type of the record: article/space"
        }
      }
    },
    "webitel.knowledgebase.CombinedList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.Combined"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.InputArticle": {
      "description": "An input of the Space's Articles.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "parent_article": {
          "description": "The parent article ID.",
          "type": "string",
          "format": "int64"
        },
        "pinned": {
          "description": "Indicates that the article is pinned on the top of list.",
          "type": "boolean"
        },
        "space_id": {
          "description": "[VALUE]: --------------------------------------\nSpace ID associated with.",
          "type": "string",
          "format": "int64"
        },
        "state": {
          "description": "Indicates if article is active and actual.",
          "type": "boolean"
        },
        "tags": {
          "description": "Tags associated with the article.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text": {
          "description": "The text content of the article.",
          "type": "string"
        },
        "title": {
          "description": "The title of the article.",
          "type": "string"
        }
      }
    },
    "webitel.knowledgebase.InputSpace": {
      "description": "The Space principal input.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "home_page": {
          "description": "BIO. Short description about the space.\nOPTIONAL. Multi-lined text.",
          "type": "string"
        },
        "name": {
          "description": "Represents the name of the knowledge base space.",
          "type": "string"
        },
        "state": {
          "description": "The state of the space.",
          "type": "boolean"
        }
      }
    },
    "webitel.knowledgebase.Lookup": {
      "description": "Lookup reference information.\nSimplified search filter to uniquely identify related object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Reference Object unique ID.",
          "type": "string"
        },
        "name": {
          "description": "Reference Object display name.",
          "type": "string"
        },
        "type": {
          "description": "Reference Object well-known type.",
          "type": "string"
        }
      }
    },
    "webitel.knowledgebase.Space": {
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The timestamp when the space was created (in Unix time).",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "The user who created the space.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "domain": {
          "description": "READONLY. The space's metadata.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "has_children": {
          "description": "Indicates if the space has children.",
          "type": "boolean"
        },
        "home_page": {
          "description": "BIO. Short description about the space.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "mode": {
          "description": "[R]ecord[b]ased[A]ccess[C]ontrol mode granted.",
          "type": "string"
        },
        "name": {
          "description": "The name of the space.",
          "type": "string"
        },
        "state": {
          "description": "The state of the space.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "The timestamp when the space was last updated (in Unix time).",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who last updated the space.",
          "$ref": "#/definitions/webitel.knowledgebase.Lookup"
        },
        "ver": {
          "description": "READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.SpaceList": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Space(s) dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.Space"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.knowledgebase.Tag": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the tag.",
          "type": "string"
        }
      }
    },
    "webitel.knowledgebase.TagsList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.knowledgebase.Tag"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.proto.data.Dataset": {
      "description": "Dataset records page view.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of the dataset page records.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available?"
        },
        "page": {
          "description": "Current page number.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Type of the dataset record.",
          "$ref": "#/definitions/webitel.proto.data.Struct"
        }
      }
    },
    "webitel.proto.data.Field": {
      "description": "Field of the struct.",
      "type": "object",
      "properties": {
        "always": {
          "description": "Always signifies that the field value will be computed on any write (INSERT OR UPDATE) operations.\nThe field cannot be written to, and when read the result of the last generated expression will be returned.\n\nThe generation expression can refer to other columns in the table, but not other generated columns. Any functions and operators used must be immutable. References to other tables are not allowed.",
          "title": "[ ON INSERT OR UPDATE ]"
        },
        "binary": {
          "$ref": "#/definitions/webitel.proto.data.type.Binary"
        },
        "bool": {
          "$ref": "#/definitions/webitel.proto.data.type.Bool"
        },
        "datetime": {
          "$ref": "#/definitions/webitel.proto.data.type.Datetime"
        },
        "default": {
          "description": "The `default` expression will be used in `INSERT` operation\nthat does not specify a value for the field.\n\nIf there is no default for a field, then the default is null.",
          "title": "[ ON INSERT ONLY ]"
        },
        "disabled": {
          "type": "boolean",
          "title": "Optional. Disable data read operation. (selection)"
        },
        "duration": {
          "$ref": "#/definitions/webitel.proto.data.type.Duration"
        },
        "float": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "float32": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "float64": {
          "$ref": "#/definitions/webitel.proto.data.type.Float"
        },
        "hidden": {
          "type": "boolean",
          "title": "Is hidden (system) field ?\nDo NOT display on the `view` card ?"
        },
        "hint": {
          "description": "Short description. Default: {name}.",
          "type": "string"
        },
        "id": {
          "description": "Field [code] name.\n\ncode",
          "type": "string"
        },
        "int": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "int32": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "int64": {
          "$ref": "#/definitions/webitel.proto.data.type.Int"
        },
        "kind": {
          "description": "Required. The field type.",
          "$ref": "#/definitions/webitel.proto.data.type.Kind"
        },
        "lookup": {
          "$ref": "#/definitions/webitel.proto.data.type.Lookup"
        },
        "name": {
          "description": "Title of the field. Lang specific.\n\ntitle",
          "type": "string"
        },
        "readonly": {
          "description": "Optional. Disable any write (INSERT OR UPDATE) operations.\nREADONLY signifies that the field value will be always computed on any write (INSERT OR UPDATE) operations.\nIf selected, the `default` value MUST be specified.\n\nFIXME: Is base field ? [ id, created_, updated_ ]",
          "type": "boolean"
        },
        "required": {
          "type": "boolean",
          "title": "Optional. Do NOT allow NULL values !"
        },
        "richtext": {
          "$ref": "#/definitions/webitel.proto.data.type.Text"
        },
        "string": {
          "$ref": "#/definitions/webitel.proto.data.type.Text"
        },
        "uint": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        },
        "uint32": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        },
        "uint64": {
          "$ref": "#/definitions/webitel.proto.data.type.Uint"
        }
      }
    },
    "webitel.proto.data.ImportCSVRequest.action": {
      "type": "string",
      "default": "continue",
      "enum": [
        "continue",
        "break"
      ]
    },
    "webitel.proto.data.Index": {
      "description": "INDEX [struct.fields].",
      "type": "object",
      "properties": {
        "fields": {
          "description": "A set of [struct.fields.id] to INDEX within [type] dataset.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include": {
          "description": "A set of [struct.fields.id] to INCLUDE beside the [fields] index.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique": {
          "description": "Indicates whether set of [fields] MUST be UNIQUE within [type].",
          "type": "boolean"
        }
      }
    },
    "webitel.proto.data.InputDictionary": {
      "type": "object",
      "properties": {
        "about": {
          "type": "string",
          "title": "Short description"
        },
        "administered": {
          "type": "boolean",
          "title": "Administer access control ? Enable RbAC ?"
        },
        "display": {
          "description": "Required. Display [fields.id] key.\nUsed as [lookup].name setting for this [struct] type.",
          "type": "string"
        },
        "fields": {
          "type": "array",
          "title": "Fields definitions",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          }
        },
        "indexes": {
          "description": "INDEX fields.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          }
        },
        "name": {
          "description": "A User-friendly [type.id] name ; lang: specific.",
          "type": "string"
        },
        "primary": {
          "description": "Required. Primary [fields.id] key.\nUsed as [lookup].id setting for this [struct] type.",
          "type": "string"
        },
        "repo": {
          "description": "string id = 1; // The [type] name (singular form), e.g.: `country`.\n\nRepository (dataset) name (plural form), e.g.: `countries`.",
          "type": "string"
        }
      },
      "example": {
        "about": "Dataset of countries we are working with ..",
        "display": "name",
        "fields": [
          {
            "hint": "+3(80)",
            "id": "code",
            "int32": {
              "max": "9999",
              "min": "10"
            },
            "kind": "int32",
            "name": "Code",
            "required": true
          },
          {
            "hint": "Country name",
            "id": "name",
            "kind": "string",
            "name": "Country",
            "required": true,
            "string": {
              "max": 64
            }
          },
          {
            "id": "capital",
            "kind": "lookup",
            "lookup": {
              "id": "name",
              "name": "name",
              "type": "dictionaries/cities"
            },
            "name": "Capital city"
          },
          {
            "datetime": {
              "part": "full",
              "time": "s"
            },
            "default": "$(timestamp)",
            "id": "created_at",
            "kind": "datetime",
            "name": "Creation Date",
            "readonly": true
          },
          {
            "default": "$(user)",
            "id": "created_by",
            "kind": "lookup",
            "lookup": {
              "id": "id",
              "name": "name",
              "type": "users"
            },
            "name": "Author",
            "readonly": true
          },
          {
            "always": "$(timestamp)",
            "datetime": {
              "part": "full",
              "time": "s"
            },
            "id": "updated_at",
            "kind": "datetime",
            "name": "Last Modified",
            "readonly": true
          },
          {
            "always": "$(user)",
            "id": "updated_by",
            "kind": "lookup",
            "lookup": {
              "type": "users"
            },
            "name": "Editor",
            "readonly": true
          }
        ],
        "indexes": {
          "capital_city": {
            "fields": [
              "capital"
            ],
            "unique": true
          },
          "code": {
            "unique": true
          }
        },
        "name": "Countries",
        "primary": "code",
        "repo": "countries"
      }
    },
    "webitel.proto.data.InputExtension": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "title": "Fields definitions",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          }
        },
        "indices": {
          "type": "object",
          "title": "INDEX Fields",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          }
        }
      },
      "example": {
        "fields": [
          {
            "id": "country",
            "kind": "lookup",
            "lookup": {
              "id": "code",
              "name": "name",
              "type": "/dictionaries/countries"
            },
            "name": "Country",
            "required": true
          },
          {
            "id": "city",
            "kind": "lookup",
            "lookup": {
              "id": "id",
              "name": "name",
              "type": "/dictionaries/cities?code={country.code}"
            },
            "name": "City"
          }
        ],
        "indexes": {
          "city": {},
          "country": {}
        }
      }
    },
    "webitel.proto.data.LookupValue": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. Unique Identifier.",
          "type": "string"
        },
        "name": {
          "description": "Readonly. Display name.",
          "type": "string"
        },
        "type": {
          "description": "Optional. Reference type.",
          "type": "string"
        }
      }
    },
    "webitel.proto.data.Struct": {
      "description": "Type of the Structure.\n\nint64 dc = 0;",
      "type": "object",
      "properties": {
        "about": {
          "description": "Optional. Short description.",
          "type": "string"
        },
        "administered": {
          "type": "boolean",
          "title": "Administer access control ? Enable RbAC ?"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/webitel.proto.data.LookupValue"
        },
        "display": {
          "description": "Required. Display [fields.id] key.\nUsed as [lookup].name setting for this [struct] type.",
          "type": "string"
        },
        "extendable": {
          "description": "// Extension fields type.\n Extension extension = 23;",
          "type": "boolean",
          "title": "Readonly. System- type(s) support only !"
        },
        "fields": {
          "description": "Fields of the struct type.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Field"
          }
        },
        "id": {
          "description": "Deprecated. Use `repo` instead. The [type] name (singular form), e.g.: `country`.",
          "type": "string"
        },
        "indexes": {
          "description": "INDEX fields.\n\nExtension extension = 15;",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/webitel.proto.data.Index"
          }
        },
        "name": {
          "description": "A User-friendly [id] name ; lang: specific.",
          "type": "string"
        },
        "objclass": {
          "description": "Readonly. RbAC objclass identity.",
          "type": "string"
        },
        "path": {
          "description": "Readonly. Relative path to access the dataset APIs, e.g.: `dictionaries/countries`.",
          "type": "string"
        },
        "primary": {
          "description": "Required. Primary [fields.id] key.\nUsed as [lookup].id setting for this [struct] type.",
          "type": "string"
        },
        "readonly": {
          "type": "boolean",
          "title": "Readonly. Is [ system / custom ] type ?\nNOTE: Custom [types.repo] are always prefixed with `/dictionaries`"
        },
        "repo": {
          "description": "Repository (dataset) name (plural form), e.g.: `countries`.",
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/webitel.proto.data.LookupValue"
        }
      }
    },
    "webitel.proto.data.StructList": {
      "description": "Dataset of structured types.",
      "type": "object",
      "properties": {
        "data": {
          "description": "List of `Struct` types.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.proto.data.Struct"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.proto.data.type.Binary": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "integer",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Bool": {
      "type": "object",
      "title": "no constraints"
    },
    "webitel.proto.data.type.Datetime": {
      "description": "Datetime type settings.\n\nenum Part {\n   full = 0; // date \u0026 time\n   date = 1; // date only ; YYYY-MM-DD\n   time = 2; // time only ; HH:mm:ss[.pres]\n }\n Part part = 1; // part of: [ date \u0026| time ]\n enum Stamp {\n   s  =  0; // seconds\n   ms =  1; // [milli]seconds ; E+3\n   mc =  2; // [micro]seconds ; E+6\n   ns =  3; // [nano]seconds  ; E+9\n   m  = -1; // minutes\n   h  = -2; // hours\n }\n Stamp time = 2; // time precision\n string zone = 3; // ??? [ Europe/Kyiv | +03:00 ]",
      "type": "object",
      "properties": {
        "epoch": {
          "description": "Epoch timestamp.\nIf zero - UNIX epoch (1970-01-01 00:00:00) will be used.",
          "type": "number",
          "format": "double"
        },
        "format": {
          "type": "string",
          "title": "Display format.\nSee [layouts](https://pkg.go.dev/time#pkg-constants) for details.\nDefault: `Mon, 02 Jan 2006 15:04:05 -0700`; [time.RFC1123Z]"
        },
        "zone": {
          "description": "Timezone associated.\nDefault: `UTC`.",
          "type": "string"
        }
      }
    },
    "webitel.proto.data.type.Duration": {
      "type": "object",
      "title": "Duration",
      "properties": {
        "format": {
          "type": "string",
          "title": "Display format.\nTODO: `hh:mm:ss.ms`"
        },
        "max": {
          "type": "string",
          "format": "int64"
        },
        "min": {
          "type": "string",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Float": {
      "type": "object",
      "properties": {
        "frac": {
          "type": "integer",
          "format": "int64",
          "title": "fractional part precision"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Int": {
      "type": "object",
      "properties": {
        "max": {
          "type": "string",
          "format": "int64"
        },
        "min": {
          "type": "string",
          "format": "int64"
        },
        "violation": {
          "type": "object",
          "title": "DESIGN. Custom error(s) on spec. constraint violation.\nmap \u003c constraint, template \u003e to produce [status.message].\n{\n  \"min\": \"country code {value} MUST contain at least 2 digits\"\n  \"max\": \"country code {value} MAY contain at most 4 digits\"\n}",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Kind": {
      "description": "Kind of primitive data types.\n\n - none: option allow_alias = true;\n - list: [array]\n - int: int32\n - uint: uint32\n - float: float32\n - datetime: date \u0026| time",
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "list",
        "bool",
        "int",
        "int32",
        "int64",
        "uint",
        "uint32",
        "uint64",
        "float",
        "float32",
        "float64",
        "binary",
        "lookup",
        "string",
        "richtext",
        "datetime",
        "duration"
      ]
    },
    "webitel.proto.data.type.Lookup": {
      "description": "Lookup ( REFERENCE ) type descriptor.\nSimplified [webitel.custom.Struct] options.",
      "type": "object",
      "properties": {
        "display": {
          "description": "[Readonly]. Display dataset field.\n(lookup).{`name`} value relation.",
          "type": "string"
        },
        "name": {
          "description": "[Readonly]. Dataset title.",
          "type": "string"
        },
        "path": {
          "description": "[Required]. Reference dataset relative path\ne.g.: \"contacts\", \"dictionaries/cities\".\n(lookup).{`type`} value relation.",
          "type": "string"
        },
        "primary": {
          "description": "[Readonly]. Primary dataset field.\n(lookup).{`id`} value relation.",
          "type": "string"
        },
        "query": {
          "type": "object",
          "title": "Optional. Query dataset filters ...\nmap \u003c filter, template \u003e",
          "additionalProperties": {
            "type": "string"
          }
        },
        "violation": {
          "type": "object",
          "title": "[ \"not_found\", \"too_much_records\" ]",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Text": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "integer",
          "format": "int64"
        },
        "max_chars": {
          "type": "integer",
          "format": "int64"
        },
        "multiline": {
          "type": "boolean"
        },
        "violation": {
          "type": "object",
          "title": "// accept format\n string accept_regex = 7;\n // equality strategy\n bool ignore_case = 8;",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "webitel.proto.data.type.Uint": {
      "type": "object",
      "properties": {
        "max": {
          "type": "string",
          "format": "uint64"
        },
        "min": {
          "type": "string",
          "format": "uint64"
        },
        "violation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "wfmAbsence": {
      "type": "object",
      "properties": {
        "absent_at": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type_id": {
          "$ref": "#/definitions/wfmAbsenceType"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAbsenceType": {
      "type": "string",
      "default": "ABSENCE_TYPE_UNSPECIFIED",
      "enum": [
        "ABSENCE_TYPE_UNSPECIFIED",
        "ABSENCE_TYPE_DAYOFF",
        "ABSENCE_TYPE_VACATION",
        "ABSENCE_TYPE_SICKDAY"
      ]
    },
    "wfmAgentAbsences": {
      "type": "object",
      "properties": {
        "absences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAbsence"
          }
        },
        "agent": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAgentSchedule": {
      "type": "object",
      "properties": {
        "absence": {
          "$ref": "#/definitions/wfmAbsenceType"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "locked": {
          "type": "boolean"
        },
        "shift": {
          "$ref": "#/definitions/wfmAgentScheduleShift"
        }
      }
    },
    "wfmAgentScheduleShift": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "pauses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentScheduleShiftPause"
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentScheduleShiftSkill"
          }
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAgentScheduleShiftPause": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAgentScheduleShiftSkill": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAgentWorkingConditions": {
      "type": "object",
      "properties": {
        "pause_template": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "working_condition": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmAgentWorkingSchedule": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentSchedule"
          }
        }
      }
    },
    "wfmCreateAgentAbsenceResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmAbsence"
        }
      }
    },
    "wfmCreateAgentsAbsencesRequest": {
      "type": "object",
      "properties": {
        "agent_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CreateAgentsAbsencesRequestabsentType"
          }
        }
      }
    },
    "wfmCreateAgentsAbsencesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentAbsences"
          }
        }
      }
    },
    "wfmCreateAgentsWorkingScheduleShiftsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentWorkingSchedule"
          }
        }
      }
    },
    "wfmCreateForecastCalculationRequest": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmForecastCalculation"
        }
      }
    },
    "wfmCreateForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmForecastCalculation"
        }
      }
    },
    "wfmCreatePauseTemplateRequest": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmPauseTemplate"
        }
      }
    },
    "wfmCreatePauseTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmPauseTemplate"
        }
      }
    },
    "wfmCreateShiftTemplateRequest": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmShiftTemplate"
        }
      }
    },
    "wfmCreateShiftTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmShiftTemplate"
        }
      }
    },
    "wfmCreateWorkingConditionRequest": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingCondition"
        }
      }
    },
    "wfmCreateWorkingConditionResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingCondition"
        }
      }
    },
    "wfmCreateWorkingScheduleRequest": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingSchedule"
        }
      }
    },
    "wfmCreateWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingSchedule"
        }
      }
    },
    "wfmDeleteAgentAbsenceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmDeleteForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmDeletePauseTemplateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmDeleteShiftTemplateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmDeleteWorkingConditionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmDeleteWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmExecuteForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmExecuteForecastCalculationResponseForecast"
          }
        }
      }
    },
    "wfmExecuteForecastCalculationResponseForecast": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmFilterBetween": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "int64"
        },
        "to": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmForecastCalculation": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "procedure": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmHoliday": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "wfmLookupEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "wfmPauseTemplate": {
      "type": "object",
      "properties": {
        "causes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmPauseTemplateCause"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmPauseTemplateCause": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmReadAgentAbsenceResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmAbsence"
        }
      }
    },
    "wfmReadAgentWorkingConditionsResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmAgentWorkingConditions"
        }
      }
    },
    "wfmReadForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmForecastCalculation"
        }
      }
    },
    "wfmReadPauseTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmPauseTemplate"
        }
      }
    },
    "wfmReadShiftTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmShiftTemplate"
        }
      }
    },
    "wfmReadWorkingConditionResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingCondition"
        }
      }
    },
    "wfmReadWorkingScheduleForecastResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/wfmWorkingScheduleForecast"
          }
        }
      }
    },
    "wfmReadWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingSchedule"
        }
      }
    },
    "wfmSearchAgentAbsenceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAbsence"
          }
        }
      }
    },
    "wfmSearchAgentsAbsencesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentAbsences"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmSearchAgentsWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "holidays": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmHoliday"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmAgentWorkingSchedule"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmSearchForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmForecastCalculation"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmSearchPauseTemplateResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmPauseTemplate"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmSearchShiftTemplateResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmShiftTemplate"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmSearchWorkingConditionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmWorkingCondition"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmSearchWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmWorkingSchedule"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "wfmShiftTemplate": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "times": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmShiftTemplateTime"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmShiftTemplateTime": {
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "wfmUpdateAgentAbsenceResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmAbsence"
        }
      }
    },
    "wfmUpdateAgentWorkingConditionsResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmAgentWorkingConditions"
        }
      }
    },
    "wfmUpdateForecastCalculationResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmForecastCalculation"
        }
      }
    },
    "wfmUpdatePauseTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmPauseTemplate"
        }
      }
    },
    "wfmUpdateShiftTemplateResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmShiftTemplate"
        }
      }
    },
    "wfmUpdateWorkingConditionResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingCondition"
        }
      }
    },
    "wfmUpdateWorkingScheduleAddAgentsResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmLookupEntity"
          }
        }
      }
    },
    "wfmUpdateWorkingScheduleRemoveAgentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmUpdateWorkingScheduleResponse": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/wfmWorkingSchedule"
        }
      }
    },
    "wfmWorkingCondition": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "days_off": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pause_duration": {
          "type": "integer",
          "format": "int32"
        },
        "pause_template": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "shift_template": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "sick_leaves": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "vacation": {
          "type": "integer",
          "format": "int32"
        },
        "workday_hours": {
          "type": "integer",
          "format": "int32"
        },
        "workdays_per_month": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "wfmWorkingSchedule": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmLookupEntity"
          }
        },
        "block_outside_activity": {
          "type": "boolean"
        },
        "calendar": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_date_at": {
          "type": "string",
          "format": "int64"
        },
        "end_time_at": {
          "type": "string",
          "format": "int64"
        },
        "extra_skills": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmLookupEntity"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "start_date_at": {
          "type": "string",
          "format": "int64"
        },
        "start_time_at": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "$ref": "#/definitions/wfmWorkingScheduleState"
        },
        "team": {
          "$ref": "#/definitions/wfmLookupEntity"
        },
        "total_agents": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/wfmLookupEntity"
        }
      }
    },
    "wfmWorkingScheduleForecast": {
      "type": "object",
      "properties": {
        "forecast": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/wfmWorkingScheduleForecastForecast"
          }
        }
      }
    },
    "wfmWorkingScheduleForecastForecast": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "string",
          "format": "int64"
        },
        "hour": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "wfmWorkingScheduleState": {
      "type": "string",
      "default": "WORKING_SCHEDULE_STATE_UNSPECIFIED",
      "enum": [
        "WORKING_SCHEDULE_STATE_UNSPECIFIED",
        "WORKING_SCHEDULE_STATE_ACTIVE",
        "WORKING_SCHEDULE_STATE_PENDING",
        "WORKING_SCHEDULE_STATE_DRAFT",
        "WORKING_SCHEDULE_STATE_ARCHIVED"
      ]
    }
  },
  "securityDefinitions": {
    "AccessToken": {
      "type": "apiKey",
      "name": "X-Webitel-Access",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessToken": []
    }
  ],
  "tags": [
    {
      "name": "RoutingChatPlanService"
    },
    {
      "name": "RoutingOutboundCallService"
    },
    {
      "name": "RoutingSchemaService"
    },
    {
      "name": "RoutingVariableService"
    },
    {
      "name": "AgentService"
    },
    {
      "name": "SkillService"
    },
    {
      "name": "AgentSkillService"
    },
    {
      "name": "AgentTeamService"
    },
    {
      "name": "AuditFormService"
    },
    {
      "name": "BucketService"
    },
    {
      "name": "CalendarService"
    },
    {
      "name": "CallService"
    },
    {
      "name": "EmailProfileService"
    },
    {
      "name": "FeedbackService"
    },
    {
      "name": "ListService"
    },
    {
      "name": "MemberService"
    },
    {
      "name": "OutboundResourceService"
    },
    {
      "name": "OutboundResourceGroupService"
    },
    {
      "name": "AgentPauseCauseService"
    },
    {
      "name": "PresetQueryService"
    },
    {
      "name": "PushService"
    },
    {
      "name": "QueueService"
    },
    {
      "name": "QueueBucketService"
    },
    {
      "name": "CommunicationTypeService"
    },
    {
      "name": "QueueHookService"
    },
    {
      "name": "QueueResourcesService"
    },
    {
      "name": "QueueSkillService"
    },
    {
      "name": "QuickRepliesService"
    },
    {
      "name": "RegionService"
    },
    {
      "name": "SchemaVariablesService"
    },
    {
      "name": "SchemaVersionService"
    },
    {
      "name": "SystemSettingService"
    },
    {
      "name": "TeamHookService"
    },
    {
      "name": "TeamTriggerService"
    },
    {
      "name": "TriggerService"
    },
    {
      "name": "UserHelperService"
    },
    {
      "name": "WebHookService"
    }
  ]
}