{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Webitel API",
    "contact": {
      "name": "Webitel",
      "url": "https://webitel.com",
      "email": "support@webitel.com"
    },
    "license": {
      "name": "MIT"
    },
    "version": "23.12.0"
  },
  "host": "dev.webitel.com",
  "basePath": "/api",
  "paths": {
    "/calendars": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "List of calendar",
        "operationId": "SearchCalendar",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCalendar"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Create calendar",
        "operationId": "CreateCalendar",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateCalendarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCalendar"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calendars/timezones": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "List timezones",
        "operationId": "SearchTimezones",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListTimezoneResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calendars/{id}": {
      "get": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Calendar item",
        "operationId": "ReadCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCalendar"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Update calendar",
        "operationId": "UpdateCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateCalendarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCalendar"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CalendarService"
        ],
        "summary": "Remove calendar",
        "operationId": "DeleteCalendar",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCalendar"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "List of Agent",
        "operationId": "SearchAgent",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "allow_channels",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "region_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "auditor_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "is_supervisor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "not_supervisor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "extension",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "not_team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "not_skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentService"
        ],
        "summary": "Create Agent",
        "operationId": "CreateAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/call": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentCallStatistics",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentCallStatisticsList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/status": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStatusStatistic",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "status",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "utilization.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "utilization.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "has_call",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "region_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "auditor_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentStatsStatistic"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/reports/status/{agent_id}": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStatusStatisticItem",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentStatusStatisticItem"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/states/history": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentStateHistory",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "from_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentStateHistory"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/pause_causes": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchPauseCauseForAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "allow_change",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineForAgentPauseCauseList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "List of AgentSkill",
        "operationId": "SearchAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Create AgentSkill",
        "operationId": "CreateAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAgentSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "DeleteAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "PatchAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchAgentSkillsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills/bulk": {
      "post": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "CreateAgentSkills",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAgentSkillsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateAgentSkillsResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/skills/{id}": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "AgentSkill item",
        "operationId": "ReadAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Update AgentSkill",
        "operationId": "UpdateAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateAgentSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "Remove AgentSkill",
        "operationId": "DeleteAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentSkillService"
        ],
        "operationId": "PatchAgentSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchAgentSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/states/history": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentStateHistory",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "time_to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentStateHistory"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/states/waiting": {
      "patch": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentSetState",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAgentSetStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentSetStateResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/statistics/queues": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentInQueueStatistics",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentInQueueStatisticsList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{agent_id}/statistics/today": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "AgentTodayStatistics",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentTodayStatisticsResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "Agent item",
        "operationId": "ReadAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentService"
        ],
        "summary": "Update Agent",
        "operationId": "UpdateAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentService"
        ],
        "summary": "Remove Agent",
        "operationId": "DeleteAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentService"
        ],
        "summary": "Update Agent",
        "operationId": "PatchAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/queues": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "operationId": "SearchAgentInQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/status": {
      "patch": {
        "tags": [
          "AgentService"
        ],
        "summary": "Change agent status",
        "operationId": "UpdateAgentStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAgentStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/agents/{id}/teams": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "todo deprecated ?",
        "operationId": "SearchAgentInTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentInTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/attempts/{attempt_id}": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptCallback",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAttemptCallbackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAttemptResultResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/audit/forms": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "SearchAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "enabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "description": "bool archive = 9;.",
            "name": "editable",
            "in": "query"
          },
          {
            "type": "string",
            "name": "question",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "CreateAuditForm",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAuditFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/audit/forms/{form_id}/rate": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "SearchAuditRate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "form_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "call_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAuditRate"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/audit/forms/{id}": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "ReadAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "UpdateAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateAuditFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "DeleteAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "PatchAuditForm",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchAuditFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditForm"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/audit/rate": {
      "post": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "CreateAuditFormRate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAuditFormRateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditRate"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/audit/rate/{id}": {
      "get": {
        "tags": [
          "AuditFormService"
        ],
        "operationId": "ReadAuditRate",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAuditRate"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/buckets": {
      "get": {
        "tags": [
          "BucketService"
        ],
        "summary": "List of Bucket",
        "operationId": "SearchBucket",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BucketService"
        ],
        "summary": "Create Bucket",
        "operationId": "CreateBucket",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/buckets/{id}": {
      "get": {
        "tags": [
          "BucketService"
        ],
        "summary": "Bucket item",
        "operationId": "ReadBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BucketService"
        ],
        "summary": "Update Bucket",
        "operationId": "UpdateBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BucketService"
        ],
        "summary": "Remove Bucket",
        "operationId": "DeleteBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/communication_type": {
      "get": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "List of CommunicationType",
        "operationId": "SearchCommunicationType",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "Undefined",
                "Phone",
                "Email",
                "Messaging"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "channel",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "default",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Create CommunicationType",
        "operationId": "CreateCommunicationType",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCommunicationTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/communication_type/{id}": {
      "get": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "CommunicationType item",
        "operationId": "ReadCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Update CommunicationType",
        "operationId": "UpdateCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateCommunicationTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CommunicationTypeService"
        ],
        "summary": "Remove CommunicationType",
        "operationId": "DeleteCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CommunicationTypeService"
        ],
        "operationId": "PatchCommunicationType",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchCommunicationTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCommunicationType"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/list": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List of List",
        "operationId": "SearchList",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOfList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListService"
        ],
        "summary": "Create List",
        "operationId": "CreateList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/list/{id}": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List item",
        "operationId": "ReadList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListService"
        ],
        "summary": "Update list",
        "operationId": "UpdateList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListService"
        ],
        "summary": "Remove list",
        "operationId": "DeleteList",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineList"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/list/{list_id}/communication": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List of List",
        "operationId": "SearchListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "expire_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "expire_at.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOfListCommunication"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ListService"
        ],
        "summary": "Create ListCommunication",
        "operationId": "CreateListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateListCommunicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCommunication"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/list/{list_id}/communication/{id}": {
      "get": {
        "tags": [
          "ListService"
        ],
        "summary": "List item",
        "operationId": "ReadListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCommunication"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ListService"
        ],
        "summary": "Update ListCommunication",
        "operationId": "UpdateListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateListCommunicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCommunication"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ListService"
        ],
        "summary": "Remove ListCommunication",
        "operationId": "DeleteListCommunication",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "list_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCommunication"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/lookups/agents/skills/{agent_id}": {
      "get": {
        "tags": [
          "AgentSkillService"
        ],
        "summary": "SearchLookupAgentNotExistsSkill",
        "operationId": "SearchLookupAgentNotExistsSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "agent_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/lookups/agents/users": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "SearchLookupAgentNotExistsUser",
        "operationId": "SearchLookupUsersAgentNotExists",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentUser"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/members": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "Search of Member",
        "operationId": "SearchMembers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "destination",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "stop_cause",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListMember"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/pause_causes": {
      "get": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "SearchAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "CreateAgentPauseCause",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAgentPauseCauseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/pause_causes/{id}": {
      "get": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "ReadAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "UpdateAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateAgentPauseCauseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "DeleteAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AgentPauseCauseService"
        ],
        "operationId": "PatchAgentPauseCause",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchAgentPauseCauseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentPauseCause"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/preset/query": {
      "get": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "SearchPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "section_default",
                "section_calls"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "section",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListPresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "CreatePresetQuery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreatePresetQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/preset/query/{id}": {
      "get": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "ReadPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "UpdatePresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdatePresetQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "DeletePresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PresetQueryService"
        ],
        "operationId": "PatchPresetQuery",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchPresetQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePresetQuery"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "List of Queue",
        "operationId": "SearchQueue",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueService"
        ],
        "summary": "Create Queue",
        "operationId": "CreateQueue",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateQueueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/active": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchAttempts",
        "operationId": "SearchAttempts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAttempt"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/history": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchMemberAttempts",
        "operationId": "SearchAttemptsHistory",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "leaving_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListHistoryAttempt"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/attempts/{attempt_id}/renewal": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptsRenewalResult",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAttemptRenewalResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAttemptRenewalResultResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/reports/general": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "operationId": "SearchQueueReportGeneral",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "joined_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListReportGeneral"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/tags": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "List RoutingSchemaTags",
        "operationId": "SearchQueueTags",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListTags"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{id}": {
      "get": {
        "tags": [
          "QueueService"
        ],
        "summary": "Queue item",
        "operationId": "ReadQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueService"
        ],
        "summary": "Update Queue",
        "operationId": "UpdateQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateQueueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueService"
        ],
        "summary": "Remove Queue",
        "operationId": "DeleteQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueService"
        ],
        "summary": "Patch Queue",
        "operationId": "PatchQueue",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchQueueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/buckets": {
      "get": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "SearchQueueRouting",
        "operationId": "SearchQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "Create QueueBucket",
        "operationId": "CreateQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateQueueBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/buckets/{id}": {
      "get": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "ReadQueueRouting",
        "operationId": "ReadQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "UpdateQueueBucket",
        "operationId": "UpdateQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateQueueBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueBucketService"
        ],
        "summary": "DeleteQueueRouting",
        "operationId": "DeleteQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueBucketService"
        ],
        "operationId": "PatchQueueBucket",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchQueueBucketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueBucket"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/hooks": {
      "get": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "SearchQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "event",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "CreateQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateQueueHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/hooks/{id}": {
      "get": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "ReadQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "UpdateQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateQueueHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "DeleteQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueHookService"
        ],
        "operationId": "PatchQueueHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchQueueHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "List of Member",
        "operationId": "SearchMemberInQueue",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "destination",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "offering_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "stop_cause",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "priority.to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempts.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListMember"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Create Member",
        "operationId": "CreateMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MemberService"
        ],
        "summary": "DeleteMembers",
        "operationId": "DeleteMembers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineDeleteMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListMember"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/bulk": {
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Create Member",
        "operationId": "CreateMemberBulk",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateMemberBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberBulkResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/reset": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "summary": "ResetMembers",
        "operationId": "ResetMembers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineResetMembersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResetMembersResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{id}": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "ReadQueueRouting",
        "operationId": "ReadMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MemberService"
        ],
        "summary": "UpdateMember",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MemberService"
        ],
        "summary": "DeleteMember",
        "operationId": "DeleteMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MemberService"
        ],
        "summary": "Patch Member",
        "operationId": "PatchMember",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchMemberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMemberInQueue"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{member_id}/attempts": {
      "get": {
        "tags": [
          "MemberService"
        ],
        "summary": "SearchMemberAttempts",
        "operationId": "SearchMemberAttempts",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListMemberAttempt"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MemberService"
        ],
        "summary": "Offline queue",
        "operationId": "CreateAttempt",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAttemptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateAttemptResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/members/{member_id}/attempts/{attempt_id}": {
      "patch": {
        "tags": [
          "MemberService"
        ],
        "operationId": "AttemptResult",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "member_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAttemptResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAttemptResultResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/resource_groups": {
      "get": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "SearchQueueResourceGroup",
        "operationId": "SearchQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListQueueResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "CreateQueueResourceGroup",
        "operationId": "CreateQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateQueueResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/resource_groups/{id}": {
      "get": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "ReadQueueResourceGroup",
        "operationId": "ReadQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "UpdateQueueResourceGroup",
        "operationId": "UpdateQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateQueueResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueResourcesService"
        ],
        "summary": "DeleteQueueResourceGroup",
        "operationId": "DeleteQueueResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/skills": {
      "get": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "SearchQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "skill_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "bucket_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "lvl",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "min_capacity",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "max_capacity",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "CreateQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateQueueSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/queues/{queue_id}/skills/{id}": {
      "get": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "ReadQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "UpdateQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateQueueSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "DeleteQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QueueSkillService"
        ],
        "operationId": "PatchQueueSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "queue_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchQueueSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineQueueSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resource_group": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "List of OutboundResourceGroup",
        "operationId": "SearchOutboundResourceGroup",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOutboundResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Create OutboundResourceGroup",
        "operationId": "CreateOutboundResourceGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateOutboundResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{group_id}/resource": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "List of OutboundResourceInGroup",
        "operationId": "SearchOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Create OutboundResourceGroup",
        "operationId": "CreateOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateOutboundResourceInGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{group_id}/resource/{id}": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "OutboundResourceInGroup item",
        "operationId": "ReadOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Update OutboundResourceInGroup",
        "operationId": "UpdateOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateOutboundResourceInGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Remove OutboundResourceInGroup",
        "operationId": "DeleteOutboundResourceInGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "group_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceInGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resource_group/{id}": {
      "get": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "OutboundResourceGroup item",
        "operationId": "ReadOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Update OutboundResourceGroup",
        "operationId": "UpdateOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateOutboundResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceGroupService"
        ],
        "summary": "Remove OutboundResourceGroup",
        "operationId": "DeleteOutboundResourceGroup",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResourceGroup"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resources": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "List of OutboundResource",
        "operationId": "SearchOutboundResource",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create OutboundResource",
        "operationId": "CreateOutboundResource",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateOutboundResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resources/{id}": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "OutboundResource item",
        "operationId": "ReadOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Update OutboundResource",
        "operationId": "UpdateOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateOutboundResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove OutboundResource",
        "operationId": "DeleteOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Patch OutboundResource",
        "operationId": "PatchOutboundResource",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchOutboundResourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineOutboundResource"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "List of ResourceDisplay",
        "operationId": "SearchOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListOutboundResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create CreateOutboundResourceDisplay",
        "operationId": "CreateOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateOutboundResourceDisplayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove ResourceDisplays",
        "operationId": "DeleteOutboundResourceDisplays",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "items",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmptyResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display/bulk": {
      "post": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Create CreateOutboundResourceDisplay",
        "operationId": "CreateOutboundResourceDisplayBulk",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateOutboundResourceDisplayBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/resources/{resource_id}/display/{id}": {
      "get": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "ResourceDisplay item",
        "operationId": "ReadOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Update ResourceDisplay",
        "operationId": "UpdateOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateOutboundResourceDisplayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundResourceService"
        ],
        "summary": "Remove ResourceDisplay",
        "operationId": "DeleteOutboundResourceDisplay",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "resource_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineResourceDisplay"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/skills": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "List of Skill",
        "operationId": "SearchSkill",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillService"
        ],
        "summary": "Create Skill",
        "operationId": "CreateSkill",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/skills/{id}": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "Skill item",
        "operationId": "ReadSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SkillService"
        ],
        "summary": "Update Skill",
        "operationId": "UpdateSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateSkillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillService"
        ],
        "summary": "Remove Skill",
        "operationId": "DeleteSkill",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSkill"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/skills/{skill_id}/agents": {
      "get": {
        "tags": [
          "SkillService"
        ],
        "summary": "For agents\nSearchSkillAgent",
        "operationId": "SearchSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListSkillAgent"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillService"
        ],
        "operationId": "CreateSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateSkillAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateSkillAgentResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillService"
        ],
        "operationId": "DeleteSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineDeleteSkillAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineDeleteSkillAgentResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SkillService"
        ],
        "operationId": "PatchSkillAgent",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "skill_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchSkillAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/enginePatchSkillAgentResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/teams": {
      "get": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "List of AgentTeam",
        "operationId": "SearchAgentTeam",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "strategy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "admin_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAgentTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Create AgentTeam",
        "operationId": "CreateAgentTeam",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateAgentTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/teams/{id}": {
      "get": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "AgentTeam item",
        "operationId": "ReadAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Update AgentTeam",
        "operationId": "UpdateAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateAgentTeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AgentTeamService"
        ],
        "summary": "Remove AgentTeam",
        "operationId": "DeleteAgentTeam",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineAgentTeam"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/hooks": {
      "get": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "SearchTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "teamHookEventUndefined",
                "agent_status"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "event",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "CreateTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateTeamHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/teams/{team_id}/hooks/{id}": {
      "get": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "ReadTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "UpdateTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateTeamHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "DeleteTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TeamHookService"
        ],
        "operationId": "PatchTeamHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "team_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchTeamHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTeamHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/call_center/users": {
      "get": {
        "tags": [
          "AgentService"
        ],
        "summary": "List of UserStatus",
        "operationId": "SearchUserStatus",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListUserStatus"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "CreateCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active": {
      "get": {
        "tags": [
          "CallService"
        ],
        "operationId": "SearchActiveCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "gateway_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "skip_parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cause",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "exists_file",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "number",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "missed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "supervisor_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}": {
      "get": {
        "tags": [
          "CallService"
        ],
        "summary": "Call item",
        "operationId": "ReadCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineActiveCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CallService"
        ],
        "operationId": "HangupCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineHangupCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineHangupCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/confirm_push": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "summary": "Call item",
        "operationId": "ConfirmPush",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineConfirmPushResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/dtmf": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "DtmfCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineDtmfCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineDtmfCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/eavesdrop": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "EavesdropCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineEavesdropCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/hold": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "HoldCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUserCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineHoldCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/transfer": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "BlindTransferCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineBlindTransferCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBlindTransferCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/unhold": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "UnHoldCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUserCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineHoldCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/active/{id}/variables": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "SetVariablesCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineSetVariablesCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSetVariablesCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history": {
      "get": {
        "tags": [
          "CallService"
        ],
        "summary": "List of call",
        "operationId": "SearchHistoryCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "agent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "queue_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "team_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "member_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "gateway_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "skip_parent",
            "in": "query"
          },
          {
            "type": "string",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cause",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "has_file",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "number",
            "in": "query"
          },
          {
            "type": "string",
            "name": "direction",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "answered_at.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "missed",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "stored_at.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transfer_from",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "transfer_to",
            "in": "query"
          },
          {
            "type": "string",
            "name": "dependency_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amd_result",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fts",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "directions",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "has_transcript",
            "in": "query"
          },
          {
            "type": "string",
            "name": "agent_description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "owner_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "grantee_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "amd_ai_result",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "talk.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "talk.to",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "rated",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_by",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_required.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_required.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_optional.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "score_optional.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "rated_user",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "contact_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListHistoryCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CallService"
        ],
        "summary": "List of call",
        "operationId": "SearchHistoryCallPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineSearchHistoryCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListHistoryCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history/aggregate": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "AggregateHistoryCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineAggregateHistoryCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAggregate"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/annotation": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "CreateCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateCallAnnotationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCallAnnotation"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/annotation/{id}": {
      "put": {
        "tags": [
          "CallService"
        ],
        "operationId": "UpdateCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateCallAnnotationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCallAnnotation"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CallService"
        ],
        "operationId": "DeleteCallAnnotation",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCallAnnotation"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history/{call_id}/redial": {
      "post": {
        "tags": [
          "CallService"
        ],
        "operationId": "RedialCall",
        "parameters": [
          {
            "type": "string",
            "name": "call_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineRedialCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineCreateCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/calls/history/{id}": {
      "patch": {
        "tags": [
          "CallService"
        ],
        "operationId": "PatchHistoryCall",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchHistoryCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineHistoryCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/chat/bots/{profile_id}/broadcast": {
      "post": {
        "tags": [
          "ChatHelperService"
        ],
        "operationId": "Broadcast",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "profile_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineBroadcastRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineBroadcastResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/chat/customers": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of external chat customers",
        "operationId": "Catalog_GetCustomers",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer{id,name}",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique contact **ID**entifier(s).",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The type of contact to filter.",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatCustomers"
            }
          }
        }
      }
    },
    "/chat/dialogs": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of chat conversations",
        "operationId": "Catalog_GetDialogs",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer.name",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique chat IDentifier(s).\nAccept: dialog -or- member ID.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "name": "date.since",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "name": "date.until",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Dialogs ONLY that are currently [not] active( closed: ? ).",
            "name": "online",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatDialogs"
            }
          }
        }
      }
    },
    "/chat/dialogs/{chat_id}/members": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of chat participants",
        "operationId": "Catalog_GetMembers",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the chat dialog.",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number to return. **default**: 1.",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page records limit. **default**: 16.",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: peer(type;name)",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort records by { fields } specification.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique chat member ID.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "via.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "via.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "via.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Since epochtime (milli).\n**Match**: greater than ..",
            "name": "date.since",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Until epochtime (milli).\n**Match**: less or equal ..",
            "name": "date.until",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Participants ONLY who are currently [not] connected to the chat.\n( left: ( 0 ? online : offline ) )",
            "name": "online",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Participants ONLY who have [not] been connected to the chat.\n( join: ( 0 ? [request|abandoned] : connected ) )",
            "name": "joined",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMembers"
            }
          }
        }
      }
    },
    "/chat/dialogs/{chat_id}/messages": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of the chat history",
        "operationId": "Catalog_GetHistory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/chat/{conversation_id}/contact": {
      "post": {
        "tags": [
          "ContactLinkingService"
        ],
        "summary": "CreateContactFromConversation creates new contact from the data existing in the conversation and after that links this contact to the external user.",
        "operationId": "ContactLinkingService_CreateContactFromConversation",
        "parameters": [
          {
            "type": "string",
            "name": "conversation_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.EmptyResponse"
            }
          }
        }
      }
    },
    "/chat/{conversation_id}/link": {
      "post": {
        "tags": [
          "ContactLinkingService"
        ],
        "summary": "LinkContactToClient creates connection between existing internal contact and external client.",
        "operationId": "ContactLinkingService_LinkContactToClient",
        "parameters": [
          {
            "type": "string",
            "name": "conversation_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "contact_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.EmptyResponse"
            }
          }
        }
      }
    },
    "/chat/{peer.type}/{peer.id}/messages": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "summary": "Query of the chat history",
        "operationId": "Catalog_GetHistory2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact **type** provider.",
            "name": "peer.type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
            "name": "peer.id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY starting from the specified message ID",
            "name": "offset.id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Messages ONLY been sent before the specified epochtime(milli).",
            "name": "offset.date",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages to return.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: message.text",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Unique chat dialog",
            "name": "chat_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Contact display **name**.",
            "name": "peer.name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "name": "group[string][string]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "description": "| Field       | Type \n| ----------- | ---- \n| **----------- READ-ONLY -----------** | \n| `id`        | int64 \n| `ver`       | int32 \n| `etag`      | string \n| **---------- OPERATIONAL ----------** | \n| `created_at` | int64(epoch:milli) \n| `created_by` | lookup(user) \n| `updated_at` | int64(epoch:milli) \n| `updated_by` | lookup(user) \n| **---------- ATTRIBUTES -----------** | \n| `name`      | name! \n| `about`     | string \n| `labels`    | list[label!] \n| `emails`    | list[email!] \n| `photos`    | list[photo!] \n| `phones`    | list[phone!] \n| `managers`  | list[manager!] \n| `comments`  | list[comment!] \n| `addresses` | list[address!] \n| `languages` | list[language!] \n| `timezones` | list[timezone!] \n| `variables` | list[variable!] \n| `imclients` | list[imClient!] \n",
        "tags": [
          "Contacts"
        ],
        "summary": "Search for Contact(s)",
        "operationId": "Contacts_SearchContacts",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result records.   _default(1); offset=(size*(page-1));_\n\n```javascript\nlet\n    offset = 0\n  , page = req.page\n;\nif (page \u003c= 0)\n    page = 1;\nif (page \u003e 1)\n    offset = ((page-1)*size);\n// . . .\n```",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Limit of result page records count.   _default(16); limit=(size\u003c=0?-1:size+1);_\n\n```javascript\nconst\n    default = 16\n  , maximum = 32\n;\nlet limit = req.size;\nif (limit \u003c= 0)\n    limit = default;\nif (maximum \u003c limit)\n    limit = maximum;\n// . . .\n```",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term:\n`?` - matches any character\n`*` - matches 0 or more characters\nUsed to query records within a set of `qin` fields, eg: name,emails{type},labels etc...",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^[+|-|!]?\\w+$",
              "uniqueItems": true,
              "type": "string",
              "default": "id"
            },
            "collectionFormat": "multi",
            "description": "Sort result dataset of records by fields.\n```\nsort ::= *( ORDER name )\n\nORDER  = ASC / DESC\nDESC   = \"-\" / \"!\"\nASC    = [ \"+\" ]   ; Default\n```\n\nFields available\n\n- `id`(seq)\n- `domain`{name}\n- `created_at`\n- `created_by`{name}\n- `updated_at`\n- `updated_by`{name}\n\nUse ?fields=`field.sort()` option to sort Edge fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string",
              "default": "*"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result dataset record.\n```\nfields ::= field [ *( \",\" field ) ]\nfield  ::= name [ *( func ) ] [ inner ]\ninner  ::= \"{\" fields \"}\"\nfuncs  ::= *( func )\nfunc   ::= \".\" name \"(\" [ args ] \")\"\nname   ::= ALPHA / DIGIT / USCORE\n\nALPHA    = %x41-5A / %x61-7A  ; \"A\"-\"Z\" / \"a\"-\"z\"\nDIGIT    = %x30-39            ; \"0\"-\"9\"\nUSCORE   = %x5F ; underscore  ; \"_\"\n```",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Records with unique IDentifier(s).\nAccept: `id` -or- `etag`.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "[Q]uery[IN] is a set of search fields for term `q`.\nDefault: `name{common_name}`.",
            "name": "qin",
            "in": "query"
          },
          {
            "enum": [
              "READ",
              "WRITE",
              "DELETE"
            ],
            "type": "string",
            "default": "READ",
            "description": "Source access mode requirement.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
            "name": "mode",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ContactList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create NEW Contact",
        "operationId": "Contacts_CreateContact",
        "parameters": [
          {
            "description": "NEW Contact source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webitel.contacts.InputContact"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      }
    },
    "/contacts/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Search for Contacts engaged Label(s).",
        "operationId": "Labels_GetLabels",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size+1)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: label.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelTags"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/emails": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Locates email address(es) of the contact.",
        "operationId": "Emails_ListEmails",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID linked with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: email address.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary email address only.",
            "name": "primary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Verified email addresses only.",
            "name": "verified",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object unique ID.",
            "name": "type.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object well-known type.",
            "name": "type.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object display name.",
            "name": "type.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Resets all emails of the contact according to the input dataset.",
        "operationId": "Emails_ResetEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of email address(es) to be linked with the contact.\nEmail address(es) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
              },
              "example": [
                {
                  "email": "johndoe_43@gmail.com",
                  "type": {
                    "name": "personal"
                  },
                  "verified": true
                },
                {
                  "email": "j.doe@x-company.org",
                  "etag": "k0WqvUn4IJGnuCyG",
                  "primary": true,
                  "type": {
                    "id": "11",
                    "name": "business"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "summary": "Update or append email address(es) of the contact.",
        "operationId": "Emails_MergeEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of email address(es) to be linked with the contact.\nEmail address(es) that conflicts(email) with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
              },
              "example": [
                {
                  "email": "user@domain",
                  "primary": true,
                  "type": {
                    "name": "personal"
                  },
                  "verified": false
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Remove email address(es) of the contact.",
        "operationId": "Emails_DeleteEmails",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^.+$",
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/emails/{etag}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Locate the email address link.",
        "operationId": "Emails_LocateEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique mail address link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailAddress"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emails"
        ],
        "summary": "Update the contact's email address link details",
        "operationId": "Emails_UpdateEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the email address link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the email address link.",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "description": "The email address.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
                }
              },
              "example": {
                "email": "user@domain",
                "etag": "1679792219687",
                "primary": true,
                "type": {
                  "name": "personal"
                },
                "verified": false
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Emails"
        ],
        "summary": "Remove the contact's email address link",
        "operationId": "Emails_DeleteEmail",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailAddress"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Emails"
        ],
        "summary": "Update the contact's email address link details",
        "operationId": "Emails_UpdateEmail2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the email address link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the email address link.",
              "required": [
                "email"
              ],
              "properties": {
                "email": {
                  "description": "The email address.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
                }
              },
              "example": {
                "email": "user@domain",
                "etag": "1679792219687",
                "primary": true,
                "type": {
                  "name": "personal"
                },
                "verified": false
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.EmailList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/imclients": {
      "get": {
        "tags": [
          "IMClients"
        ],
        "summary": "Search IM client links",
        "operationId": "IMClients_ListIMClients",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: IMClient.\n`?` - matches any one character\n`*` - matches 0 or more characters\nSearch fields: {user,app}",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.IMClientList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Locate the Contact's associated Label(s).",
        "operationId": "Labels_ListLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size+1)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: label tag.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID or ETag.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Reset Labels to fit the specified final set.",
        "operationId": "Labels_ResetLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of labels(s) to be linked with the contact.\nLabel(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputLabel"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Associate NEW Labels to the Contact.",
        "operationId": "Labels_MergeLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of label(s) to be linked with the contact.\nLabel(s) that conflicts with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputLabel"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Remove Contact Labels associations.",
        "operationId": "Labels_DeleteLabels",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^(\\w+)(,\\w+)*$",
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique label(s).etag identifiers.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.LabelList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Search the Contact's Managers.",
        "operationId": "Managers_ListManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size of result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: user name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Reset Managers to fit the specified final set.",
        "operationId": "Managers_ResetManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of unique User(s) to be linked with the Contact.\nUser(s) that are already linked with the Contact\nbut not listed here will be removed.\nThe first element will become `primary` if no other specified.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputManager"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Associate new Managers to the Contact.",
        "operationId": "Managers_MergeManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Array of the unique User(s) to associate with the Contact.\nAny duplicate of an already linked user{id} will result in an error.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputManager"
              },
              "example": [
                {
                  "primary": true,
                  "user": {
                    "id": "357",
                    "name": "Bruce Wayne"
                  }
                },
                {
                  "user": {
                    "id": "354",
                    "name": "Johnny Doe"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Remove Contact Managers associations.",
        "operationId": "Managers_DeleteManagers",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Manager dataset page.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.Manager"
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/managers/{etag}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Locate the manager address link.",
        "operationId": "Managers_LocateManager",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique manager link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Manager"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Update the contact's manager address link details",
        "operationId": "Managers_UpdateManager",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the manager link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the manager link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "user": {
                  "description": "Responsible User.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              },
              "example": {
                "primary": true,
                "user": {
                  "id": "357",
                  "name": "Bruce Wayne"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Remove the contact's manager address link",
        "operationId": "Managers_DeleteManager",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Manager"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "summary": "Update the contact's manager address link details",
        "operationId": "Managers_UpdateManager2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the manager link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the manager link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "user": {
                  "description": "Responsible User.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              },
              "example": {
                "primary": true,
                "user": {
                  "id": "357",
                  "name": "Bruce Wayne"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.ManagerList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/phones": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Search phone number(s)",
        "operationId": "Phones_ListPhones",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: phone number.\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Link(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary phone  only.",
            "name": "primary",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Verified phone only.",
            "name": "verified",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object unique ID.",
            "name": "type.id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object well-known type.",
            "name": "type.type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Reference Object display name.",
            "name": "type.name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Reset the Contact's phone numbers to fit given data set.",
        "operationId": "Phones_ResetPhones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of phone number(s) to be linked with the contact.\nPhone number(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
              },
              "example": [
                {
                  "etag": "1679792219687",
                  "number": "+38 (099) 672-23-54",
                  "primary": true,
                  "type": {
                    "name": "personal"
                  },
                  "verified": true
                },
                {
                  "number": "+1 482 555-36558",
                  "type": {
                    "name": "business"
                  }
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phones"
        ],
        "summary": "Associate phone number(s) with the Contact",
        "operationId": "Phones_MergePhones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed set of phone number(s) to be linked with the Contact.\nPhone number(s) that conflicts with already linked will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
              },
              "example": [
                {
                  "number": "+38 (099) 672-23-54",
                  "primary": true,
                  "type": {
                    "name": "mobile"
                  },
                  "verified": false
                }
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Remove the Contact's phone number association(s)",
        "operationId": "Phones_DeletePhones",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of linked ID(s) to be removed.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/phones/{etag}": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Locate the Contact's phone number association.",
        "operationId": "Phones_LocatePhone",
        "parameters": [
          {
            "type": "string",
            "description": "Reference Contact unique ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields [Q]uery to build result record.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Association Record unique ID.",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneNumber"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Update the Contact's phone number association details",
        "operationId": "Phones_UpdatePhone",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID to be associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the phone number details.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the phone number details.",
              "required": [
                "number"
              ],
              "properties": {
                "number": {
                  "description": "The phone number.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Remove the Contact's phone number",
        "operationId": "Phones_DeletePhone",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Unique link ID to be removed.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneNumber"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Phones"
        ],
        "summary": "Update the Contact's phone number association details",
        "operationId": "Phones_UpdatePhone2",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact ID to be associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the phone number details.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the phone number details.",
              "required": [
                "number"
              ],
              "properties": {
                "number": {
                  "description": "The phone number.",
                  "type": "string"
                },
                "primary": {
                  "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
                  "type": "boolean"
                },
                "type": {
                  "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                },
                "verified": {
                  "type": "boolean",
                  "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.PhoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timeline": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "Timeline_GetTimeline",
        "parameters": [
          {
            "type": "string",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.GetTimelineResponse"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timeline/chats/{conversation_id}": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "Timeline_GetDetailedMessageHistory",
        "parameters": [
          {
            "type": "string",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "conversation_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.chat.ChatMessages"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timezones": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "List of the Contact's timezone(s).",
        "operationId": "Timezones_ListTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result dataset records. offset = (page*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size count of records on result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: location name;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Primary timezone only.",
            "name": "primary",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timezones"
        ],
        "summary": "Resets all timezones of the contact according to the input dataset.",
        "operationId": "Timezones_ResetTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Final set of timezone(s) to be linked with the contact.\nTimezone(s) that are already linked with the contact\nbut not given in here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputTimezone"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Timezones"
        ],
        "summary": "Associate more timezone(s) with the Contact.",
        "operationId": "Timezones_MergeTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Array of the unique User(s) to associate with the Contact.\nAny duplicate of an already linked user{id} will result in an error.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/webitel.contacts.InputTimezone"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timezones"
        ],
        "summary": "Remove the Contact's timezone(s).",
        "operationId": "Timezones_DeleteTimezones",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/timezones/{etag}": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "Locate the Contact's timezone association.",
        "operationId": "Timezones_LocateTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Contact source ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "\\w+",
            "description": "Unique timezone link IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Timezone"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timezones"
        ],
        "summary": "Update the Contact's timezone details.",
        "operationId": "Timezones_UpdateTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the timezone link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the timezone link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "timezone": {
                  "description": "Timezone dictionary reference value associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Timezones"
        ],
        "summary": "Remove the Contact's timezone association.",
        "operationId": "Timezones_DeleteTimezone",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Timezone"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Timezones"
        ],
        "summary": "Update the Contact's timezone details.",
        "operationId": "Timezones_UpdateTimezone2",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Update of the timezone link.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Update of the timezone link.",
              "properties": {
                "primary": {
                  "description": "Indicates whether this association must be default among others.",
                  "type": "boolean"
                },
                "timezone": {
                  "description": "Timezone dictionary reference value associated.",
                  "$ref": "#/definitions/webitel.contacts.Lookup"
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.TimezoneList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "List variables of the contact",
        "operationId": "Variables_ListVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Page number of result. offset = ((page-1)*size)",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Size of result page. limit = (size++)",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search term: variable key;\n`?` - matches any one character\n`*` - matches 0 or more characters",
            "name": "q",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Sort the result according to fields.",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Record(s) with unique ID only.",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Reset all variables of the contact",
        "operationId": "Variables_ResetVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed object of unique variables to associate with a Contact.\nEach individual key of an object represents a separate variable.\nVariable{key} already linked with the Contact but not listed here will be removed.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputVariable"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variables"
        ],
        "summary": "Update or append variables to the contact",
        "operationId": "Variables_MergeVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Link contact ID.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Fixed object of unique variables to associate with a Contact.\nEach individual key of an object represents a separate variable.\nVariable{key} already linked with the Contact and listed here will be updated.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "uniqueItems": true,
                "$ref": "#/definitions/webitel.contacts.InputVariable"
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Remove variable(s) of the contact",
        "operationId": "Variables_DeleteVariables",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "pattern": "^.+$",
              "uniqueItems": true,
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Set of unique ID(s) to remove.",
            "name": "etag",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      }
    },
    "/contacts/{contact_id}/variables/{etag}": {
      "put": {
        "tags": [
          "Variables"
        ],
        "summary": "Update contact variable",
        "operationId": "Variables_UpdateVariable",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Variable update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Variable update.",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "NEW Key.",
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "value": {
                  "description": "NEW Value."
                }
              },
              "example": {
                "key": "var_rename",
                "value": [
                  "string_item",
                  [
                    3,
                    7
                  ],
                  false,
                  null
                ]
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Variables"
        ],
        "summary": "Remove the contact's variable by etag",
        "operationId": "Variables_DeleteVariable",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID to remove.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved as a result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Variable"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Variables"
        ],
        "summary": "Update contact variable",
        "operationId": "Variables_UpdateVariable2",
        "parameters": [
          {
            "type": "string",
            "description": "Contact ID associated with.",
            "name": "contact_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Variable update.",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Variable update.",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "NEW Key.",
                  "type": "string",
                  "pattern": "^\\w+$"
                },
                "value": {
                  "description": "NEW Value."
                }
              },
              "example": {
                "key": "var_rename",
                "value": [
                  "string_item",
                  [
                    3,
                    7
                  ],
                  false,
                  null
                ]
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.VariableList"
            }
          }
        }
      }
    },
    "/contacts/{etag}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Locate Contact source",
        "operationId": "Contacts_LocateContact",
        "parameters": [
          {
            "type": "string",
            "description": "The Contact source IDentifier.\nAccept: `etag` (obsolete+) or `id`.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          },
          {
            "enum": [
              "READ",
              "WRITE",
              "DELETE"
            ],
            "type": "string",
            "default": "READ",
            "description": "The requirement of a special access mode to the Source.\n\n - READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
            "name": "mode",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Remove Contact source",
        "operationId": "Contacts_DeleteContact",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of a resource.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Fields to be retrieved into result of changes.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "NEW Update of the Contact source",
        "operationId": "Contacts_UpdateContact",
        "parameters": [
          {
            "type": "string",
            "description": "Unique ID of the latest version of an existing resorce.",
            "name": "etag",
            "in": "path",
            "required": true
          },
          {
            "description": "NEW Contact source changes",
            "name": "input",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "NEW Contact source changes",
              "properties": {
                "about": {
                  "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
                  "type": "string"
                },
                "comments": {
                  "description": "Publish NEW comment(s) for this Contact.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputComment"
                  }
                },
                "emails": {
                  "description": "The Contact's email address(es).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
                  }
                },
                "imclients": {
                  "description": "The contact's [I]nstant[M]essaging clients.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputIMClient"
                  }
                },
                "labels": {
                  "description": "The Contact's associated label(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputLabel"
                  }
                },
                "languages": {
                  "description": "A Contact's locale preference(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputLanguage"
                  }
                },
                "managers": {
                  "description": "The Contact's internal manager(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputManager"
                  }
                },
                "name": {
                  "title": "The Contact's name. Singleton",
                  "$ref": "#/definitions/webitel.contacts.InputName"
                },
                "phones": {
                  "description": "The Contact's phone numbers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
                  }
                },
                "photos": {
                  "description": "Output only. The Contact's photo(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputPhoto"
                  },
                  "readOnly": true
                },
                "timezones": {
                  "description": "The Contact's timezone preference(s).",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputTimezone"
                  }
                },
                "variables": {
                  "description": "Arbitrary client data that is populated by clients.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/webitel.contacts.InputVariable"
                  }
                }
              }
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Source Fields to return into result.",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/webitel.contacts.Contact"
            }
          }
        }
      }
    },
    "/email/profile": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Search EmailProfile",
        "operationId": "SearchEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Create EmailProfile",
        "operationId": "CreateEmailProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateEmailProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/email/profile/{id}": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "EmailProfile item",
        "operationId": "ReadEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Update EmailProfile",
        "operationId": "UpdateEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateEmailProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "Remove EmailProfile",
        "operationId": "DeleteEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "PatchEmailProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchEmailProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineEmailProfile"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/email/profile/{id}/login": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "LoginEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineLoginEmailProfileResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/email/profile/{id}/logout": {
      "patch": {
        "tags": [
          "EmailProfileService"
        ],
        "operationId": "LogoutEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineLogoutEmailProfileResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/email/profile/{id}/test": {
      "get": {
        "tags": [
          "EmailProfileService"
        ],
        "summary": "EmailProfile check login",
        "operationId": "TestEmailProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTestEmailProfileResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/hook": {
      "get": {
        "tags": [
          "WebHookService"
        ],
        "summary": "List of WebHook",
        "operationId": "SearchWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Create WebHook",
        "operationId": "CreateWebHook",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateWebHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/hook/{id}": {
      "get": {
        "tags": [
          "WebHookService"
        ],
        "summary": "WebHook item",
        "operationId": "ReadWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Update WebHook",
        "operationId": "UpdateWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateWebHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Remove WebHook",
        "operationId": "DeleteWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WebHookService"
        ],
        "summary": "Patch WebHook",
        "operationId": "PatchWebHook",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchWebHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineWebHook"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/logger/available_objects": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_ReadSystemObjects",
        "parameters": [
          {
            "type": "boolean",
            "name": "include_existing",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerSystemObjects"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_SearchConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "cc_queue",
                "schema"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "NOT USED.",
            "name": "object",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfigs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_CreateConfig",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerCreateConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_DeleteConfigBulk",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerDeleteConfigBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config/{config_id}": {
      "get": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_ReadConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_UpdateConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerUpdateConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_DeleteConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigService"
        ],
        "operationId": "ConfigService_PatchConfig",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loggerPatchConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/config/{config_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByConfigId",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "config_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/user/{user_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByUserId",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "REQUIRED filter",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "description": "SPECIFIC filter.",
            "name": "object_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "GENERAL filters.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/logger/{object}/record/{record_id}/logs": {
      "get": {
        "tags": [
          "LoggerService"
        ],
        "operationId": "LoggerService_SearchLogByRecordId",
        "parameters": [
          {
            "enum": [
              "cc_queue",
              "schema"
            ],
            "type": "string",
            "description": "SPECIFIC filter",
            "name": "object",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "REQUIRED filter",
            "name": "record_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default_no_action",
                "create",
                "update",
                "read",
                "delete"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "GENERAL filters.",
            "name": "action",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "user_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_ip",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "date_to",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/loggerLogs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "RegionService"
        ],
        "operationId": "SearchRegion",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "timezone_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RegionService"
        ],
        "operationId": "CreateRegion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "RegionService"
        ],
        "operationId": "ReadRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RegionService"
        ],
        "operationId": "UpdateRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RegionService"
        ],
        "operationId": "DeleteRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RegionService"
        ],
        "operationId": "PatchRegion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRegion"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/outbound/calls": {
      "get": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "List of RoutingOutboundCall",
        "operationId": "SearchRoutingOutboundCall",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "pattern",
            "in": "query"
          },
          {
            "type": "string",
            "name": "description",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Create RoutingOutboundCall",
        "operationId": "CreateRoutingOutboundCall",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateRoutingOutboundCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/outbound/calls/{from_id}/to/{to_id}": {
      "patch": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Move RoutingOutboundCall",
        "operationId": "MovePositionRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "from_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "to_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineMovePositionRoutingOutboundCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineMovePositionRoutingOutboundCallResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/outbound/calls/{id}": {
      "get": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "RoutingOutboundCall item",
        "operationId": "ReadRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Update RoutingOutboundCall",
        "operationId": "UpdateRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateRoutingOutboundCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Remove RoutingOutboundCall",
        "operationId": "DeleteRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingOutboundCallService"
        ],
        "summary": "Patch RoutingOutboundCall",
        "operationId": "PatchRoutingOutboundCall",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchRoutingOutboundCallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingOutboundCall"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/outbound/chat": {
      "get": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "SearchChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "CreateChatPlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateChatPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/outbound/chat/{id}": {
      "get": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "ReadChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "UpdateChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateChatPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "DeleteChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingChatPlanService"
        ],
        "operationId": "PatchChatPlan",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchChatPlanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineChatPlan"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "List RoutingSchema",
        "operationId": "SearchRoutingSchema",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default",
                "voice",
                "chat",
                "processing",
                "service"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          },
          {
            "type": "boolean",
            "format": "boolean",
            "name": "editor",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Create RoutingSchema",
        "operationId": "CreateRoutingSchema",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateRoutingSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema/tags": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "List RoutingSchemaTags",
        "operationId": "SearchRoutingSchemaTags",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "default",
                "voice",
                "chat",
                "processing",
                "service"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListRoutingSchemaTags"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema/variables": {
      "get": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "SearchSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "CreateSchemaVariable",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateSchemaVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema/variables/{id}": {
      "get": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "ReadSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "UpdateSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateSchemaVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "DeleteSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SchemaVariablesService"
        ],
        "operationId": "PatchSchemaVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchSchemaVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSchemaVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema/{id}": {
      "get": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "RoutingSchema item",
        "operationId": "ReadRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Update RoutingSchema",
        "operationId": "UpdateRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateRoutingSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Remove RoutingSchema",
        "operationId": "DeleteRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingSchemaService"
        ],
        "summary": "Patch RoutingSchema",
        "operationId": "PatchRoutingSchema",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchRoutingSchemaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingSchema"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/schema/{schema_id}/versions": {
      "get": {
        "tags": [
          "SchemaVersionService"
        ],
        "operationId": "SearchSchemaVersion",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "schema_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSearchSchemaVersionResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/variables": {
      "get": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "List of RoutingVariable",
        "operationId": "SearchRoutingVariable",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListRoutingVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Create RoutingVariable",
        "operationId": "CreateRoutingVariable",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateRoutingVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/routing/variables/{id}": {
      "get": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "RoutingVariable item",
        "operationId": "ReadRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Update RoutingVariable",
        "operationId": "UpdateRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateRoutingVariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingVariableService"
        ],
        "summary": "Remove RoutingVariable",
        "operationId": "DeleteRoutingVariable",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineRoutingVariable"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "SearchSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "CreateSystemSetting",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateSystemSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/settings/available": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "SearchAvailableSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListAvailableSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/settings/{id}": {
      "get": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "ReadSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "UpdateSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateSystemSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "DeleteSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SystemSettingService"
        ],
        "operationId": "PatchSystemSetting",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchSystemSettingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineSystemSetting"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/storage/backend_profiles": {
      "get": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "List of BackendProfile",
        "operationId": "BackendProfileService_SearchBackendProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageListBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Create BackendProfile",
        "operationId": "BackendProfileService_CreateBackendProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageCreateBackendProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/backend_profiles/{id}": {
      "get": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "BackendProfile item",
        "operationId": "BackendProfileService_ReadBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Update BackendProfile",
        "operationId": "BackendProfileService_UpdateBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageUpdateBackendProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Remove BackendProfile",
        "operationId": "BackendProfileService_DeleteBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BackendProfileService"
        ],
        "summary": "Patch BackendProfile",
        "operationId": "BackendProfileService_PatchBackendProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePatchBackendProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageBackendProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/cognitive_profiles": {
      "get": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CognitiveProfileService_SearchCognitiveProfile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "DefaultService",
                "STT",
                "TTS"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "service",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "enabled",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageListCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CognitiveProfileService_CreateCognitiveProfile",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageCreateCognitiveProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/cognitive_profiles/{id}": {
      "get": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CognitiveProfileService_ReadCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CognitiveProfileService_UpdateCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageUpdateCognitiveProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CognitiveProfileService"
        ],
        "summary": "Remove BackendProfile",
        "operationId": "CognitiveProfileService_DeleteCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CognitiveProfileService"
        ],
        "operationId": "CognitiveProfileService_PatchCognitiveProfile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePatchCognitiveProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageCognitiveProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/file": {
      "delete": {
        "tags": [
          "FileService"
        ],
        "operationId": "FileService_DeleteFiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDeleteFilesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageDeleteFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/import_templates": {
      "get": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_SearchImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageListImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_CreateImportTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageCreateImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/import_templates/{id}": {
      "get": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_ReadImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_UpdateImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageUpdateImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_DeleteImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ImportTemplateService"
        ],
        "operationId": "ImportTemplateService_PatchImportTemplate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storagePatchImportTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageImportTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/media": {
      "get": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "Search MediaFile",
        "operationId": "MediaFileService_SearchMediaFile",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageListMedia"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/media/{id}": {
      "get": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "MediaFile item",
        "operationId": "MediaFileService_ReadMediaFile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageMediaFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MediaFileService"
        ],
        "summary": "Remove MediaFile",
        "operationId": "MediaFileService_DeleteMediaFile",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "domain_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageMediaFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/transcript_file": {
      "post": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "FileTranscriptService_CreateFileTranscript",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageStartFileTranscriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageStartFileTranscriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "FileTranscriptService_DeleteFileTranscript",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageDeleteFileTranscriptRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageDeleteFileTranscriptResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/storage/transcript_file/{id}/phrases": {
      "get": {
        "tags": [
          "FileTranscriptService"
        ],
        "operationId": "FileTranscriptService_GetFileTranscriptPhrases",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageListPhrases"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/trigger": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "summary": "List of Trigger",
        "operationId": "SearchTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi",
            "name": "schema_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Create Trigger",
        "operationId": "CreateTrigger",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateTriggerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/trigger/{id}": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Trigger item",
        "operationId": "ReadTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Update Trigger",
        "operationId": "UpdateTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineUpdateTriggerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TriggerService"
        ],
        "summary": "Remove Trigger",
        "operationId": "DeleteTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "PatchTrigger",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enginePatchTriggerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTrigger"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/trigger/{trigger_id}/job": {
      "get": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "SearchTriggerJob",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "trigger_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "name": "size",
            "in": "query"
          },
          {
            "type": "string",
            "name": "q",
            "in": "query"
          },
          {
            "type": "string",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "created_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "started_at.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "started_at.to",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.from",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "duration.to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "idle",
                "active",
                "done",
                "error"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineListTriggerJob"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TriggerService"
        ],
        "operationId": "CreateTriggerJob",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "trigger_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/engineCreateTriggerJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineTriggerJob"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/user/device/config/{type}": {
      "get": {
        "tags": [
          "UserHelperService"
        ],
        "operationId": "DefaultDeviceConfig",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineDefaultDeviceConfigResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    },
    "/user/widget/activity/today": {
      "get": {
        "tags": [
          "UserHelperService"
        ],
        "operationId": "ActivityWorkspaceWidget",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/engineActivityWorkspaceWidgetResponse"
            }
          },
          "default": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/engineApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgentInQueueAgentsInQueue": {
      "type": "object",
      "properties": {
        "allow_pause": {
          "type": "integer",
          "format": "int32"
        },
        "free": {
          "type": "integer",
          "format": "int64"
        },
        "offline": {
          "type": "integer",
          "format": "int64"
        },
        "online": {
          "type": "integer",
          "format": "int64"
        },
        "pause": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AgentInQueueStatisticsAgentInQueueStatisticsItem": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "member_waiting": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "AggregateRequestGroup": {
      "type": "object",
      "properties": {
        "aggregate": {
          "type": "string"
        },
        "desc": {
          "type": "boolean",
          "format": "boolean"
        },
        "field": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "top": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateCallRequestCallSettings": {
      "type": "object",
      "properties": {
        "audio": {
          "type": "boolean",
          "format": "boolean"
        },
        "cancel_distribute": {
          "type": "boolean",
          "format": "boolean"
        },
        "disable_auto_answer": {
          "type": "boolean",
          "format": "boolean"
        },
        "disable_stun": {
          "type": "boolean",
          "format": "boolean"
        },
        "display": {
          "type": "string"
        },
        "hide_number": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_online": {
          "type": "boolean",
          "format": "boolean"
        },
        "record": {
          "type": "boolean",
          "format": "boolean"
        },
        "screen": {
          "type": "boolean",
          "format": "boolean"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "video": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "DefaultDeviceConfigResponseSipDeviceConfig": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "proxy": {
          "type": "string"
        }
      }
    },
    "DefaultDeviceConfigResponseWebRTCDeviceConfig": {
      "type": "object",
      "properties": {
        "authorization_user": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "ha1": {
          "type": "string"
        },
        "realm": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "EmailProfileParamsOAuth2": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        }
      }
    },
    "HistoryFileJobHistoryFileJobAction": {
      "type": "string",
      "default": "undefined",
      "enum": [
        "undefined",
        "STT",
        "delete"
      ]
    },
    "HistoryFileJobHistoryFileJobState": {
      "type": "string",
      "default": "idle",
      "enum": [
        "idle",
        "active",
        "finished",
        "error"
      ]
    },
    "ListSkillAgentListSkillAgg": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "QuestionOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "StartFileTranscriptResponseTranscriptJob": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "UserStatusUserPresence": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engineAcceptOfDay": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "end_time_of_day": {
          "type": "integer",
          "format": "int32"
        },
        "start_time_of_day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineActiveCall": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "app_id": {
          "type": "string"
        },
        "bill_sec": {
          "type": "integer",
          "format": "int32"
        },
        "blind_transfer": {
          "type": "string"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bridged_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/engineEndpoint"
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "hold_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "member": {
          "$ref": "#/definitions/engineLookup"
        },
        "parent_id": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "queue_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "queue_duration_sec": {
          "type": "integer",
          "format": "int32"
        },
        "queue_wait_sec": {
          "type": "integer",
          "format": "int32"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "reporting_sec": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "to": {
          "$ref": "#/definitions/engineEndpoint"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineActivityWorkspaceWidgetResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "call_abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "call_handled": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound": {
          "type": "integer",
          "format": "int32"
        },
        "call_missed": {
          "type": "integer",
          "format": "int32"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "number",
          "format": "float"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "online": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "integer",
          "format": "int32"
        },
        "queue_talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_optional_sum": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_sum": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "string",
          "format": "int64"
        },
        "task_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "voice_mail": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAgent": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "channel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentChannel"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "greeting_media": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "last_status_change": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engineLookup"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentCallStatistics": {
      "type": "object",
      "properties": {
        "abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "handles": {
          "type": "integer",
          "format": "int32"
        },
        "max_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "max_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "min_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "min_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "name": {
          "type": "string"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "sum_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engineAgentCallStatisticsList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentCallStatistics"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineAgentChannel": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineAgentInQueue": {
      "type": "object",
      "properties": {
        "active_members": {
          "type": "integer",
          "format": "int32"
        },
        "agents": {
          "$ref": "#/definitions/AgentInQueueAgentsInQueue"
        },
        "count_members": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "strategy": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "waiting_members": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAgentInQueueStatistics": {
      "type": "object",
      "properties": {
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "statistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentInQueueStatisticsAgentInQueueStatisticsItem"
          }
        }
      }
    },
    "engineAgentInQueueStatisticsList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentInQueueStatistics"
          }
        }
      }
    },
    "engineAgentInTeam": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentPauseCause": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentSetStateRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAgentSetStateResponse": {
      "type": "object"
    },
    "engineAgentSkill": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentSkillItem": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentState": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "channel": {
          "type": "string"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "engineAgentStatsStatistic": {
      "type": "object",
      "properties": {
        "active_call_id": {
          "type": "string"
        },
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "call_time": {
          "type": "string",
          "format": "int64"
        },
        "chat_count": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "handles": {
          "type": "integer",
          "format": "int32"
        },
        "max_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "max_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "missed": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "offline": {
          "type": "string",
          "format": "int64"
        },
        "online": {
          "type": "string",
          "format": "int64"
        },
        "pause": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "queues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "transferred": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engineAgentStatusRequest": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "on_demand": {
          "type": "boolean",
          "format": "boolean"
        },
        "payload": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "engineAgentStatusStatisticItem": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offline": {
          "type": "string",
          "format": "int64"
        },
        "online": {
          "type": "string",
          "format": "int64"
        },
        "pause": {
          "type": "string",
          "format": "int64"
        },
        "pause_cause": {
          "type": "string"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int64"
        },
        "region": {
          "$ref": "#/definitions/engineLookup"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "status": {
          "type": "string"
        },
        "status_duration": {
          "type": "string",
          "format": "int64"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAgentTeam": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAgentTodayStatisticsResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "avg_hold_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_talk_sec": {
          "type": "number",
          "format": "float"
        },
        "call_abandoned": {
          "type": "integer",
          "format": "int32"
        },
        "call_handled": {
          "type": "integer",
          "format": "int32"
        },
        "call_inbound": {
          "type": "integer",
          "format": "int32"
        },
        "call_missed": {
          "type": "integer",
          "format": "int32"
        },
        "chat_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "chat_aht": {
          "type": "number",
          "format": "float"
        },
        "occupancy": {
          "type": "number",
          "format": "float"
        },
        "online": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "integer",
          "format": "int32"
        },
        "queue_talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "score_count": {
          "type": "string",
          "format": "int64"
        },
        "score_optional_avg": {
          "type": "number",
          "format": "float"
        },
        "score_optional_sum": {
          "type": "number",
          "format": "float"
        },
        "score_required_avg": {
          "type": "number",
          "format": "float"
        },
        "score_required_sum": {
          "type": "number",
          "format": "float"
        },
        "sum_talk_sec": {
          "type": "string",
          "format": "int64"
        },
        "task_accepts": {
          "type": "integer",
          "format": "int32"
        },
        "utilization": {
          "type": "number",
          "format": "float"
        },
        "voice_mail": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAgentUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineAggregateHistoryCallRequest": {
      "type": "object",
      "properties": {
        "agent_description": {
          "type": "string"
        },
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "aggs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAggregateRequest"
          }
        },
        "amd_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answered_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "dependency_id": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "fts": {
          "type": "string"
        },
        "gateway_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "has_file": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_transcript": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "missed": {
          "type": "boolean",
          "format": "boolean"
        },
        "number": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "parent_id": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "skip_parent": {
          "type": "boolean",
          "format": "boolean"
        },
        "stored_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "team_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "transfer_from": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transfer_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineAggregateRequest": {
      "type": "object",
      "properties": {
        "avg": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "count": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregateRequestGroup"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "min": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "engineAggregateResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineApiError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "engineAttempt": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "agent_call_id": {
          "type": "string"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "channel": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/engineMemberCommunication"
        },
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "last_state_change": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "list": {
          "$ref": "#/definitions/engineLookup"
        },
        "member": {
          "$ref": "#/definitions/engineLookup"
        },
        "member_call_id": {
          "type": "string"
        },
        "offering_at": {
          "type": "string",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "result": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "format": "int64"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineAttemptCallbackRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "attempt_id": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "boolean",
          "format": "boolean"
        },
        "exclude_current_communication": {
          "type": "boolean",
          "format": "boolean"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_between_retries": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAttemptHistory": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "agent_call_id": {
          "type": "string"
        },
        "amd_result": {
          "type": "string"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "channel": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/engineMemberCommunication"
        },
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "list": {
          "$ref": "#/definitions/engineLookup"
        },
        "member": {
          "$ref": "#/definitions/engineLookup"
        },
        "member_call_id": {
          "type": "string"
        },
        "offering_at": {
          "type": "string",
          "format": "int64"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "result": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineAttemptRenewalResultRequest": {
      "type": "object",
      "properties": {
        "attempt_id": {
          "type": "string",
          "format": "int64"
        },
        "renewal": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineAttemptRenewalResultResponse": {
      "type": "object"
    },
    "engineAttemptResultRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "integer",
          "format": "int32"
        },
        "attempt_id": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "boolean",
          "format": "boolean"
        },
        "exclude_current_communication": {
          "type": "boolean",
          "format": "boolean"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "member_id": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "next_member_id": {
          "type": "string",
          "format": "int64"
        },
        "queue_id": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "transfer_queue_id": {
          "type": "string",
          "format": "int64"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_between_retries": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineAttemptResultResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engineAuditForm": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "editable": {
          "type": "boolean",
          "format": "boolean",
          "title": "bool archive = 11;"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestion"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAuditQuestionType": {
      "type": "string",
      "default": "question_default",
      "enum": [
        "question_default",
        "question_score",
        "question_option"
      ]
    },
    "engineAuditRate": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestionAnswer"
          }
        },
        "comment": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "form": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestion"
          }
        },
        "rated_user": {
          "$ref": "#/definitions/engineLookup"
        },
        "score_optional": {
          "type": "number",
          "format": "float"
        },
        "score_required": {
          "type": "number",
          "format": "float"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineAvailableSystemSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engineBlindTransferCallRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "engineBlindTransferCallResponse": {
      "type": "object"
    },
    "engineBroadcastRequest": {
      "type": "object",
      "properties": {
        "peer": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "profile_id": {
          "type": "string",
          "format": "int64"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "engineBroadcastResponse": {
      "type": "object"
    },
    "engineBucket": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCalendar": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAcceptOfDay"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineExceptDate"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCallAnnotation": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCallFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCallHold": {
      "type": "object",
      "properties": {
        "sec": {
          "type": "number",
          "format": "float"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "stop": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineChatPlan": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCommunicationChannels": {
      "type": "string",
      "default": "Undefined",
      "enum": [
        "Undefined",
        "Phone",
        "Email",
        "Messaging"
      ]
    },
    "engineCommunicationType": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engineCommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCommunicationTypeRequest": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engineCommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineConfirmPushResponse": {
      "type": "object"
    },
    "engineCreateAgentPauseCauseRequest": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCreateAgentRequest": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "greeting_media": {
          "$ref": "#/definitions/engineLookup"
        },
        "is_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engineLookup"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateAgentSkillBulkItem": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateAgentSkillRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateAgentSkillsRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCreateAgentSkillBulkItem"
          }
        }
      }
    },
    "engineCreateAgentSkillsResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engineCreateAgentTeamRequest": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineCreateAttemptRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "member_id": {
          "type": "string",
          "format": "int64"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateAttemptResponse": {
      "type": "object",
      "properties": {
        "attempt_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateAuditFormRateRequest": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestionAnswer"
          }
        },
        "call_id": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "form": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateAuditFormRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestion"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        }
      }
    },
    "engineCreateBucketRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCreateCalendarRequest": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAcceptOfDay"
          }
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineExceptDate"
          }
        },
        "name": {
          "type": "string"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateCallAnnotationRequest": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "string"
        },
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineCreateCallRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "from": {
          "$ref": "#/definitions/engineCreateCallRequestEndpointRequest"
        },
        "params": {
          "$ref": "#/definitions/CreateCallRequestCallSettings"
        },
        "to": {
          "$ref": "#/definitions/engineCreateCallRequestEndpointRequest"
        }
      }
    },
    "engineCreateCallRequestEndpointRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engineCreateCallResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "engineCreateChatPlanRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateEmailProfileRequest": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engineEmailAuthType"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean",
          "format": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engineEmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineCreateListCommunicationRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "list_id": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engineCreateListRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCreateMemberBulkItem": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberCommunicationCreateRequest"
          }
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreateMemberBulkRequest": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCreateMemberBulkItem"
          }
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateMemberRequest": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreateOutboundResourceDisplayBulkRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCreateOutboundResourceDisplayRequest"
          }
        },
        "resource_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateOutboundResourceDisplayRequest": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateOutboundResourceGroupRequest": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResourceTimeRange"
          }
        }
      }
    },
    "engineCreateOutboundResourceInGroupRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateOutboundResourceRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engineOutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean",
          "format": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreatePresetQueryRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "preset": {
          "type": "object"
        },
        "section": {
          "$ref": "#/definitions/enginePresetQuerySection"
        }
      }
    },
    "engineCreateQueueBucketRequest": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineCreateQueueHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateQueueRequest": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "calendar": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engineLookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "form_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "grantee": {
          "$ref": "#/definitions/engineLookup"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "format": "boolean"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64"
        },
        "ringtone": {
          "$ref": "#/definitions/engineLookup"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engineTaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreateQueueResourceGroupRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateQueueSkillRequest": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateRegionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateRoutingOutboundCallRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineCreateRoutingSchemaRequest": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "schema": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engineRoutingSchemaType"
        }
      }
    },
    "engineCreateRoutingVariableRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engineCreateSchemaVariableRequest": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineCreateSkillAgentRequest": {
      "type": "object",
      "properties": {
        "agent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "skill_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineCreateSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSkillAgentItem"
          }
        }
      }
    },
    "engineCreateSkillRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineCreateSystemSettingRequest": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/engineSystemSettingName"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineCreateTeamHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engineTeamHookEvent"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "team_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineCreateTriggerJobRequest": {
      "type": "object",
      "properties": {
        "trigger_id": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreateTriggerRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "type": {
          "$ref": "#/definitions/engineTriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineCreateWebHookRequest": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineDefaultDeviceConfigResponse": {
      "type": "object",
      "properties": {
        "sip": {
          "$ref": "#/definitions/DefaultDeviceConfigResponseSipDeviceConfig"
        },
        "webrtc": {
          "$ref": "#/definitions/DefaultDeviceConfigResponseWebRTCDeviceConfig"
        }
      }
    },
    "engineDeleteMembersRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "attempts": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "bucket_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "destination": {
          "type": "string"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offering_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "priority": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "string"
        },
        "stop_cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "without_members": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineDeleteSkillAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "skill_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineDeleteSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSkillAgentItem"
          }
        }
      }
    },
    "engineDtmfCallRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "digit": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "engineDtmfCallResponse": {
      "type": "object"
    },
    "engineEavesdropCallRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "control": {
          "type": "boolean",
          "format": "boolean"
        },
        "from": {
          "$ref": "#/definitions/engineEavesdropCallRequestEndpointRequest"
        },
        "id": {
          "type": "string"
        },
        "listen_a": {
          "type": "boolean",
          "format": "boolean"
        },
        "listen_b": {
          "type": "boolean",
          "format": "boolean"
        },
        "whisper_a": {
          "type": "boolean",
          "format": "boolean"
        },
        "whisper_b": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineEavesdropCallRequestEndpointRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engineEmailAuthType": {
      "type": "string",
      "default": "EmailAuthTypeUndefined",
      "enum": [
        "EmailAuthTypeUndefined",
        "Plain",
        "OAuth2"
      ]
    },
    "engineEmailProfile": {
      "type": "object",
      "properties": {
        "activity_at": {
          "type": "string",
          "format": "int64"
        },
        "auth_type": {
          "$ref": "#/definitions/engineEmailAuthType"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fetch_error": {
          "type": "string"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean",
          "format": "boolean"
        },
        "logged": {
          "type": "boolean",
          "format": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engineEmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineEmailProfileParams": {
      "type": "object",
      "properties": {
        "oauth2": {
          "$ref": "#/definitions/EmailProfileParamsOAuth2"
        }
      }
    },
    "engineEmptyResponse": {
      "type": "object"
    },
    "engineEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "engineExceptDate": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        },
        "repeat": {
          "type": "boolean",
          "format": "boolean"
        },
        "work_start": {
          "type": "integer",
          "format": "int32"
        },
        "work_stop": {
          "type": "integer",
          "format": "int32"
        },
        "working": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineFilterBetween": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "int64"
        },
        "to": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineForAgentPauseCause": {
      "type": "object",
      "properties": {
        "duration_min": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineForAgentPauseCauseList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineForAgentPauseCause"
          }
        }
      }
    },
    "engineHangupCallRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "engineHangupCallResponse": {
      "type": "object"
    },
    "engineHistoryCall": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "agent_description": {
          "type": "string"
        },
        "allow_evaluation": {
          "type": "boolean",
          "format": "boolean"
        },
        "amd_ai_logs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amd_ai_result": {
          "type": "string"
        },
        "amd_result": {
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCallAnnotation"
          }
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "app_id": {
          "type": "string"
        },
        "attempt_id": {
          "type": "string",
          "format": "int64"
        },
        "bill_sec": {
          "type": "integer",
          "format": "int32"
        },
        "blind_transfer": {
          "type": "string"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bridged_id": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/engineLookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "extension": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCallFile"
          }
        },
        "files_job": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineHistoryFileJob"
          }
        },
        "form_fields": {
          "type": "object"
        },
        "from": {
          "$ref": "#/definitions/engineEndpoint"
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "grantee": {
          "$ref": "#/definitions/engineLookup"
        },
        "hangup_at": {
          "type": "string",
          "format": "int64"
        },
        "hangup_by": {
          "type": "string"
        },
        "hangup_disposition": {
          "type": "string"
        },
        "has_children": {
          "type": "boolean",
          "format": "boolean"
        },
        "hold": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCallHold"
          }
        },
        "hold_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "joined_at": {
          "type": "string",
          "format": "int64"
        },
        "leaving_at": {
          "type": "string",
          "format": "int64"
        },
        "member": {
          "$ref": "#/definitions/engineLookup"
        },
        "member_id": {
          "type": "string",
          "format": "int64"
        },
        "parent_id": {
          "type": "string"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "queue_bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "queue_duration_sec": {
          "type": "integer",
          "format": "int32"
        },
        "queue_wait_sec": {
          "type": "integer",
          "format": "int32"
        },
        "rate_id": {
          "type": "string",
          "format": "int64"
        },
        "rated_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "rated_user": {
          "$ref": "#/definitions/engineLookup"
        },
        "reporting_at": {
          "type": "string",
          "format": "int64"
        },
        "reporting_sec": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "string"
        },
        "score_optional": {
          "type": "number",
          "format": "float"
        },
        "score_required": {
          "type": "number",
          "format": "float"
        },
        "sip_code": {
          "type": "integer",
          "format": "int32"
        },
        "stored_at": {
          "type": "string",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "talk_sec": {
          "type": "integer",
          "format": "int32"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "to": {
          "$ref": "#/definitions/engineEndpoint"
        },
        "transcripts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTranscriptLookup"
          }
        },
        "transfer_from": {
          "type": "string"
        },
        "transfer_to": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "wait_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineHistoryFileJob": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/HistoryFileJobHistoryFileJobAction"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "error_detail": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "$ref": "#/definitions/HistoryFileJobHistoryFileJobState"
        }
      }
    },
    "engineHoldCallResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "engineList": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineListAgent": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgent"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentInQueue": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentInQueue"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentInTeam": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentInTeam"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentPauseCause": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentPauseCause"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentSkillItem"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentStateHistory": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentState"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentStatsStatistic": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentStatsStatistic"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentTeam": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentTeam"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAgentUser": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAgentUser"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAggregate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAggregateResult"
          }
        }
      }
    },
    "engineListAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAttempt"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAuditForm": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAuditForm"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAuditRate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAuditRate"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListAvailableSystemSetting": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAvailableSystemSetting"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListBucket": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineBucket"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListCalendar": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCalendar"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineActiveCall"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListChatPlan": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineChatPlan"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListCommunication": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "list_id": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engineListCommunicationType": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineCommunicationType"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListEmailProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineEmailProfile"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListHistoryAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAttemptHistory"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListHistoryCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineHistoryCall"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListMember": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberInQueue"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListMemberAttempt": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberAttempt"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOfList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineList"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOfListCommunication": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineListCommunication"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOutboundResource": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResource"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOutboundResourceDisplay": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineResourceDisplay"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOutboundResourceGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResourceViewGroup"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListOutboundResourceInGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResourceInGroup"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListPresetQuery": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enginePresetQuery"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListQueue": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueue"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListQueueBucket": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueueBucket"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListQueueHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueueHook"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListQueueResourceGroup": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueueResourceGroup"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListQueueSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueueSkill"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListRegion": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineRegion"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListReportGeneral": {
      "type": "object",
      "properties": {
        "aggs": {
          "$ref": "#/definitions/engineQueueReportGeneralAgentStatus"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQueueReportGeneral"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListResourceDisplay": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engineListRoutingOutboundCall": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineRoutingOutboundCallCompact"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListRoutingSchema": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineRoutingSchema"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListRoutingSchemaTags": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineRoutingSchemaTag"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListRoutingVariable": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineRoutingVariable"
          }
        }
      }
    },
    "engineListSchemaVariable": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaVariable"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListSkill": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSkill"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListSkillAgent": {
      "type": "object",
      "properties": {
        "aggs": {
          "$ref": "#/definitions/ListSkillAgentListSkillAgg"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSkillAgentItem"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListSystemSetting": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSystemSetting"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListTags": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTag"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListTeamHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTeamHook"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListTimezoneResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTimezone"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListTrigger": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTrigger"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListTriggerJob": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTriggerJob"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListUserStatus": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineUserStatus"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineListWebHook": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineWebHook"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineLoginEmailProfileResponse": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engineEmailAuthType"
        },
        "cookie": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "redirect_url": {
          "type": "string"
        }
      }
    },
    "engineLogoutEmailProfileResponse": {
      "type": "object"
    },
    "engineLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineMemberAttempt": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "format": "boolean"
        },
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "answered_at": {
          "type": "string",
          "format": "int64"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bridged_at": {
          "type": "string",
          "format": "int64"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "destination": {
          "type": "string"
        },
        "hangup_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "leg_a_id": {
          "type": "string"
        },
        "leg_b_id": {
          "type": "string"
        },
        "logs": {
          "type": "object"
        },
        "member": {
          "$ref": "#/definitions/engineLookup"
        },
        "node": {
          "type": "string"
        },
        "originate_at": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "result": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineMemberBulkResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "engineMemberCommunication": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dtmf": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_activity_at": {
          "type": "string",
          "format": "int64"
        },
        "last_cause": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "state": {
          "type": "integer",
          "format": "int32"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineMemberCommunicationCreateRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dtmf": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "stop_at": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineMemberInQueue": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberCommunication"
          }
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_activity_at": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "reserved": {
          "type": "boolean",
          "format": "boolean"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineMovePositionRoutingOutboundCallRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "from_id": {
          "type": "string",
          "format": "int64"
        },
        "to_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineMovePositionRoutingOutboundCallResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineOutboundResource": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "last_error_at": {
          "type": "string",
          "format": "int64"
        },
        "last_error_id": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engineOutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean",
          "format": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineOutboundResourceGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engineLookup"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResourceTimeRange"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineOutboundResourceInGroup": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineOutboundResourceParameters": {
      "type": "object",
      "properties": {
        "cid_type": {
          "type": "string"
        },
        "ignore_early_media": {
          "type": "string"
        }
      }
    },
    "engineOutboundResourceTimeRange": {
      "type": "object",
      "properties": {
        "end_time_of_day": {
          "type": "integer",
          "format": "int32"
        },
        "start_time_of_day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineOutboundResourceViewGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        }
      }
    },
    "enginePatchAgentPauseCauseRequest": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "enginePatchAgentRequest": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "greeting_media": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engineLookup"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchAgentSkillRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchAgentSkillsRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "skill_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "enginePatchAuditFormRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestion"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        }
      }
    },
    "enginePatchChatPlanRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchCommunicationTypeRequest": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engineCommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "enginePatchEmailProfileRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean",
          "format": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "enginePatchHistoryCallRequest": {
      "type": "object",
      "properties": {
        "hide_missed": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "enginePatchMemberRequest": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "attempts": {
          "type": "integer",
          "format": "int32"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "enginePatchOutboundResourceRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engineOutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean",
          "format": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "enginePatchPresetQueryRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "preset": {
          "type": "object"
        },
        "section": {
          "$ref": "#/definitions/enginePresetQuerySection"
        }
      }
    },
    "enginePatchQueueBucketRequest": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "enginePatchQueueHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchQueueRequest": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "calendar": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engineLookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "form_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "grantee": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "format": "boolean"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64"
        },
        "ringtone": {
          "$ref": "#/definitions/engineLookup"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engineTaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "enginePatchQueueSkillRequest": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchRegionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchRoutingOutboundCallRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePatchRoutingSchemaRequest": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "schema": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engineRoutingSchemaType"
        }
      }
    },
    "enginePatchSchemaVariableRequest": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "enginePatchSkillAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "skill_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "enginePatchSkillAgentResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSkillAgentItem"
          }
        }
      }
    },
    "enginePatchSystemSettingRequest": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "enginePatchTeamHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engineTeamHookEvent"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "team_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "enginePatchTriggerRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "expression": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "type": {
          "$ref": "#/definitions/engineTriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "enginePatchWebHookRequest": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "enginePresetQuery": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "preset": {
          "type": "object"
        },
        "section": {
          "$ref": "#/definitions/enginePresetQuerySection"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "enginePresetQuerySection": {
      "type": "string",
      "default": "section_default",
      "enum": [
        "section_default",
        "section_calls"
      ]
    },
    "engineQuestion": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionOption"
          }
        },
        "question": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "format": "boolean"
        },
        "type": {
          "$ref": "#/definitions/engineAuditQuestionType"
        }
      }
    },
    "engineQuestionAnswer": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "engineQueue": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "after_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "calendar": {
          "$ref": "#/definitions/engineLookup"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engineLookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "form_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "grantee": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "format": "boolean"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64"
        },
        "ringtone": {
          "$ref": "#/definitions/engineLookup"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engineTaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "waiting": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineQueueBucket": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineQueueHook": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineQueueReportGeneral": {
      "type": "object",
      "properties": {
        "abandoned": {
          "type": "integer",
          "format": "int64"
        },
        "agent_status": {
          "$ref": "#/definitions/engineQueueReportGeneralAgentStatus"
        },
        "attempts": {
          "type": "integer",
          "format": "int64"
        },
        "avg_aht_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_asa_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_awt_sec": {
          "type": "number",
          "format": "float"
        },
        "avg_wrap_sec": {
          "type": "number",
          "format": "float"
        },
        "bridged": {
          "type": "number",
          "format": "float"
        },
        "count": {
          "type": "string",
          "format": "uint64"
        },
        "missed": {
          "type": "integer",
          "format": "int64"
        },
        "processed": {
          "type": "integer",
          "format": "int64"
        },
        "queue": {
          "$ref": "#/definitions/engineLookup"
        },
        "sl20": {
          "type": "number",
          "format": "float"
        },
        "sl30": {
          "type": "number",
          "format": "float"
        },
        "sum_bill_sec": {
          "type": "number",
          "format": "float"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "transferred": {
          "type": "integer",
          "format": "int64"
        },
        "waiting": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineQueueReportGeneralAgentStatus": {
      "type": "object",
      "properties": {
        "free": {
          "type": "integer",
          "format": "int64"
        },
        "offline": {
          "type": "integer",
          "format": "int64"
        },
        "online": {
          "type": "integer",
          "format": "int64"
        },
        "pause": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineQueueResourceGroup": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineQueueSkill": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineRedialCallRequest": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "string"
        }
      }
    },
    "engineRegion": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineResetMembersRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "bucket_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "stop_cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineResetMembersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineResourceDisplay": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "engineRoutingOutboundCall": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineRoutingOutboundCallCompact": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineRoutingSchema": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "debug": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "schema": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engineRoutingSchemaType"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineRoutingSchemaTag": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineRoutingSchemaType": {
      "type": "string",
      "default": "default",
      "enum": [
        "default",
        "voice",
        "chat",
        "processing",
        "service"
      ]
    },
    "engineRoutingVariable": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engineSchemaTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engineSchemaVariable": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineSchemaVersion": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "note": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "schema": {
          "type": "object"
        },
        "schema_id": {
          "type": "string",
          "format": "int64"
        },
        "version": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "engineSearchHistoryCallRequest": {
      "type": "object",
      "properties": {
        "agent_description": {
          "type": "string"
        },
        "agent_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "amd_ai_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amd_result": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answered_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "cause": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "created_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "dependency_id": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fts": {
          "type": "string"
        },
        "gateway_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "grantee_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "has_file": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_transcript": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "missed": {
          "type": "boolean",
          "format": "boolean"
        },
        "number": {
          "type": "string"
        },
        "owner_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "parent_id": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queue_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "rated": {
          "type": "boolean",
          "format": "boolean"
        },
        "rated_by": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "rated_user": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "score_optional": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "score_required": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "skip_parent": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort": {
          "type": "string"
        },
        "stored_at": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "talk": {
          "$ref": "#/definitions/engineFilterBetween"
        },
        "team_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "transfer_from": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transfer_to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineSearchSchemaVersionResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaVersion"
          }
        },
        "next": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "engineSetVariablesCallRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineSetVariablesCallResponse": {
      "type": "object"
    },
    "engineSkill": {
      "type": "object",
      "properties": {
        "active_agents": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "total_agents": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineSkillAgentItem": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineSystemSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "$ref": "#/definitions/engineSystemSettingName"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineSystemSettingName": {
      "type": "string",
      "default": "empty_system_settings_name",
      "enum": [
        "empty_system_settings_name",
        "enable_omnichannel",
        "member_chunk_size",
        "amd_cancel_not_human",
        "scheme_version_limit"
      ]
    },
    "engineTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "engineTaskProcessing": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "form_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "sec": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineTeamHook": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engineTeamHookEvent"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineTeamHookEvent": {
      "type": "string",
      "default": "teamHookEventUndefined",
      "enum": [
        "teamHookEventUndefined",
        "agent_status"
      ]
    },
    "engineTestEmailProfileResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "engineTimezone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "offset": {
          "type": "string"
        }
      }
    },
    "engineTranscriptLookup": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/engineLookup"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "engineTrigger": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "expression": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "type": {
          "$ref": "#/definitions/engineTriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineTriggerJob": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "parameters": {
          "type": "object"
        },
        "result": {
          "type": "object"
        },
        "started_at": {
          "type": "string",
          "format": "int64"
        },
        "state": {
          "$ref": "#/definitions/engineTriggerJobState"
        },
        "stopped_at": {
          "type": "string",
          "format": "int64"
        },
        "trigger": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineTriggerJobState": {
      "type": "string",
      "default": "idle",
      "enum": [
        "idle",
        "active",
        "done",
        "error"
      ]
    },
    "engineTriggerType": {
      "type": "string",
      "default": "default_trigger_type",
      "enum": [
        "default_trigger_type",
        "cron"
      ]
    },
    "engineUpdateAgentPauseCauseRequest": {
      "type": "object",
      "properties": {
        "allow_admin": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "limit_min": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineUpdateAgentRequest": {
      "type": "object",
      "properties": {
        "allow_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "chat_count": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "greeting_media": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_supervisor": {
          "type": "boolean",
          "format": "boolean"
        },
        "progressive_count": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "$ref": "#/definitions/engineLookup"
        },
        "supervisor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "task_count": {
          "type": "integer",
          "format": "int64"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "user": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateAgentSkillRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateAgentTeamRequest": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "call_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "invite_chat_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "max_no_answer": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "no_answer_delay_time": {
          "type": "integer",
          "format": "int32"
        },
        "strategy": {
          "type": "string"
        },
        "task_accept_timeout": {
          "type": "integer",
          "format": "int32"
        },
        "wrap_up_time": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineUpdateAuditFormRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineQuestion"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        }
      }
    },
    "engineUpdateBucketRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineUpdateCalendarRequest": {
      "type": "object",
      "properties": {
        "accepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineAcceptOfDay"
          }
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "end_at": {
          "type": "string",
          "format": "int64"
        },
        "excepts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineExceptDate"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "start_at": {
          "type": "string",
          "format": "int64"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateCallAnnotationRequest": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "string"
        },
        "end_sec": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "note": {
          "type": "string"
        },
        "start_sec": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineUpdateChatPlanRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateCommunicationTypeRequest": {
      "type": "object",
      "properties": {
        "channel": {
          "$ref": "#/definitions/engineCommunicationChannels"
        },
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineUpdateEmailProfileRequest": {
      "type": "object",
      "properties": {
        "auth_type": {
          "$ref": "#/definitions/engineEmailAuthType"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "fetch_interval": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "imap_host": {
          "type": "string"
        },
        "imap_port": {
          "type": "integer",
          "format": "int32"
        },
        "listen": {
          "type": "boolean",
          "format": "boolean"
        },
        "login": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "params": {
          "$ref": "#/definitions/engineEmailProfileParams"
        },
        "password": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "smtp_host": {
          "type": "string"
        },
        "smtp_port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineUpdateListCommunicationRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "list_id": {
          "type": "string",
          "format": "int64"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "engineUpdateListRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineUpdateMemberRequest": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/engineLookup"
        },
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "communications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineMemberCommunicationCreateRequest"
          }
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_at": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "min_offering_at": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        },
        "stop_cause": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineUpdateOutboundResourceDisplayRequest": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "resource_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "engineUpdateOutboundResourceGroupRequest": {
      "type": "object",
      "properties": {
        "communication": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "strategy": {
          "type": "string"
        },
        "time": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineOutboundResourceTimeRange"
          }
        }
      }
    },
    "engineUpdateOutboundResourceInGroupRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int64"
        },
        "reserve_resource": {
          "$ref": "#/definitions/engineLookup"
        },
        "resource": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateOutboundResourceRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "error_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failure_dial_delay": {
          "type": "integer",
          "format": "int64"
        },
        "gateway": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "max_successively_errors": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/engineOutboundResourceParameters"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reserve": {
          "type": "boolean",
          "format": "boolean"
        },
        "rps": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineUpdatePresetQueryRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "preset": {
          "type": "object"
        },
        "section": {
          "$ref": "#/definitions/enginePresetQuerySection"
        }
      }
    },
    "engineUpdateQueueBucketRequest": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/engineLookup"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "ratio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "engineUpdateQueueHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateQueueRequest": {
      "type": "object",
      "properties": {
        "after_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "calendar": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "dnc_list": {
          "$ref": "#/definitions/engineLookup"
        },
        "do_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "form_schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "grantee": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "processing": {
          "type": "boolean",
          "format": "boolean"
        },
        "processing_renewal_sec": {
          "type": "integer",
          "format": "int64"
        },
        "processing_sec": {
          "type": "integer",
          "format": "int64"
        },
        "ringtone": {
          "$ref": "#/definitions/engineLookup"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "sec_locate_agent": {
          "type": "integer",
          "format": "int32"
        },
        "sticky_agent": {
          "type": "boolean",
          "format": "boolean"
        },
        "strategy": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineTag"
          }
        },
        "task_processing": {
          "$ref": "#/definitions/engineTaskProcessing"
        },
        "team": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineUpdateQueueResourceGroupRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "queue_id": {
          "type": "string",
          "format": "int64"
        },
        "resource_group": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateQueueSkillRequest": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineLookup"
          }
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int32"
        },
        "max_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "min_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "queue_id": {
          "type": "integer",
          "format": "int64"
        },
        "skill": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateRegionRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateRoutingOutboundCallRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUpdateRoutingSchemaRequest": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean",
          "format": "boolean"
        },
        "description": {
          "type": "string"
        },
        "editor": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "schema": {
          "type": "object"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/engineSchemaTag"
          }
        },
        "type": {
          "$ref": "#/definitions/engineRoutingSchemaType"
        }
      }
    },
    "engineUpdateRoutingVariableRequest": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "engineUpdateSchemaVariableRequest": {
      "type": "object",
      "properties": {
        "encrypt": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineUpdateSkillRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "engineUpdateSystemSettingRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "engineUpdateTeamHookRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "event": {
          "$ref": "#/definitions/engineTeamHookEvent"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "team_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "engineUpdateTriggerRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "expression": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "$ref": "#/definitions/engineLookup"
        },
        "type": {
          "$ref": "#/definitions/engineTriggerType"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "engineUpdateWebHookRequest": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "engineUserCallRequest": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "engineUserStatus": {
      "type": "object",
      "properties": {
        "extension": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "presence": {
          "$ref": "#/definitions/UserStatusUserPresence"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "engineWebHook": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/engineLookup"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "google.protobuf.NullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
      "type": "string",
      "default": "NULL_VALUE",
      "enum": [
        "NULL_VALUE"
      ]
    },
    "loggerAction": {
      "type": "string",
      "default": "default_no_action",
      "enum": [
        "default_no_action",
        "create",
        "update",
        "read",
        "delete"
      ]
    },
    "loggerAvailableSystemObjects": {
      "type": "string",
      "default": "cc_queue",
      "enum": [
        "cc_queue",
        "schema"
      ]
    },
    "loggerConfig": {
      "type": "object",
      "properties": {
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerConfigStatus": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "type": "boolean"
        }
      }
    },
    "loggerConfigs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerConfig"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "loggerCreateConfigRequest": {
      "type": "object",
      "properties": {
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerDeleteConfigBulkRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "loggerEmpty": {
      "type": "object"
    },
    "loggerLog": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "new_state": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/loggerLookup"
        },
        "record": {
          "$ref": "#/definitions/loggerLookup"
        },
        "user": {
          "$ref": "#/definitions/loggerLookup"
        },
        "user_ip": {
          "type": "string"
        }
      }
    },
    "loggerLogs": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerLog"
          }
        },
        "next": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "loggerLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "loggerPatchConfigRequest": {
      "type": "object",
      "properties": {
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "loggerSystemObjects": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/loggerLookup"
          }
        }
      }
    },
    "loggerUpdateConfigRequest": {
      "type": "object",
      "properties": {
        "config_id": {
          "type": "integer",
          "format": "int32"
        },
        "days_to_store": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "period": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "$ref": "#/definitions/loggerLookup"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
      "type": "string",
      "default": "NULL_VALUE",
      "enum": [
        "NULL_VALUE"
      ]
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "storageBackendProfile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "data_count": {
          "type": "string",
          "format": "int64"
        },
        "data_size": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "storageCognitiveProfile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "provider": {
          "$ref": "#/definitions/storageProviderType"
        },
        "service": {
          "$ref": "#/definitions/storageServiceType"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "storageCreateBackendProfileRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "storageCreateCognitiveProfileRequest": {
      "description": "Create cognitive profile request body for TTS and TTS",
      "type": "object",
      "title": "Create cognitive profile request body",
      "required": [
        "name",
        "provider",
        "service",
        "properties"
      ],
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "provider": {
          "$ref": "#/definitions/storageProviderType"
        },
        "service": {
          "$ref": "#/definitions/storageServiceType"
        }
      }
    },
    "storageCreateImportTemplateRequest": {
      "description": "Create import template for CSV",
      "type": "object",
      "title": "Create import template request body",
      "required": [
        "name",
        "source_id",
        "parameters"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engineLookup"
        },
        "source_id": {
          "type": "string",
          "format": "int64"
        },
        "source_type": {
          "$ref": "#/definitions/storageImportSourceType"
        }
      }
    },
    "storageDeleteFileTranscriptRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "uuid": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storageDeleteFileTranscriptResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "storageDeleteFilesRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "storageDeleteFilesResponse": {
      "type": "object"
    },
    "storageImportSourceType": {
      "type": "string",
      "default": "DefaultSourceType",
      "enum": [
        "DefaultSourceType",
        "Dialer"
      ]
    },
    "storageImportTemplate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engineLookup"
        },
        "source_id": {
          "type": "string",
          "format": "int64"
        },
        "source_type": {
          "$ref": "#/definitions/storageImportSourceType"
        }
      }
    },
    "storageListBackendProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageBackendProfile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storageListCognitiveProfile": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageCognitiveProfile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storageListImportTemplate": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageImportTemplate"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storageListMedia": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageMediaFile"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storageListPhrases": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageTranscriptPhrase"
          }
        },
        "next": {
          "type": "boolean"
        }
      }
    },
    "storageMediaFile": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "$ref": "#/definitions/engineLookup"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "updated_at": {
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "storagePatchBackendProfileRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "storagePatchCognitiveProfileRequest": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "provider": {
          "$ref": "#/definitions/storageProviderType"
        },
        "service": {
          "$ref": "#/definitions/storageServiceType"
        }
      }
    },
    "storagePatchImportTemplateRequest": {
      "description": "Patch import template for CSV",
      "type": "object",
      "title": "Patch import template request body",
      "required": [
        "id"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        }
      }
    },
    "storageProviderType": {
      "type": "string",
      "default": "DefaultProvider",
      "enum": [
        "DefaultProvider",
        "Microsoft",
        "Google"
      ]
    },
    "storageServiceType": {
      "type": "string",
      "default": "DefaultService",
      "enum": [
        "DefaultService",
        "STT",
        "TTS"
      ]
    },
    "storageStartFileTranscriptRequest": {
      "type": "object",
      "properties": {
        "file_id": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "locale": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/engineLookup"
        },
        "uuid": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "storageStartFileTranscriptResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StartFileTranscriptResponseTranscriptJob"
          }
        }
      }
    },
    "storageStreamFile": {
      "type": "object",
      "properties": {
        "chunk": {
          "type": "string",
          "format": "byte"
        },
        "metadata": {
          "$ref": "#/definitions/storageStreamFileMetadata"
        }
      }
    },
    "storageStreamFileMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storageTranscriptPhrase": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "end_sec": {
          "type": "number",
          "format": "float"
        },
        "phrase": {
          "type": "string"
        },
        "start_sec": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "storageUpdateBackendProfileRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "expire_days": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "max_size": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "storageUpdateCognitiveProfileRequest": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "provider": {
          "$ref": "#/definitions/storageProviderType"
        },
        "service": {
          "$ref": "#/definitions/storageServiceType"
        }
      }
    },
    "storageUpdateImportTemplateRequest": {
      "description": "Update import template for CSV",
      "type": "object",
      "title": "Update import template request body",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/engineLookup"
        }
      }
    },
    "storageUploadFileRequestMetadata": {
      "type": "object",
      "properties": {
        "domain_id": {
          "type": "string",
          "format": "int64"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_id": {
          "type": "string",
          "format": "int64"
        },
        "stream_response": {
          "type": "boolean"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "storageUploadFileResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/storageUploadStatusCode"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "file_url": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "storageUploadFileUrlResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/storageUploadStatusCode"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "mime": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "storageUploadStatusCode": {
      "type": "string",
      "default": "Unknown",
      "enum": [
        "Unknown",
        "Ok",
        "Failed"
      ]
    },
    "webitel.chat.Chat": {
      "description": "The Chat info.\nAlias: participant, subscriber, member, peer, leg.",
      "type": "object",
      "properties": {
        "context": {
          "description": "Context. Variables.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dc": {
          "description": "[D]omain[C]omponent primary ID.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "Unique identifier for this chat.\n[FROM] Member / Channel ID.\n\n// [TO] Group. Conversation ID.\n string chat_id = 2;",
          "type": "string"
        },
        "invite": {
          "description": "OPTIONAL. Invite[d] BY member info.",
          "$ref": "#/definitions/webitel.chat.Chat.Invite"
        },
        "join": {
          "description": "OPTIONAL. A non-zero value indicates that\nthe participant has joined the chat.",
          "type": "string",
          "format": "int64"
        },
        "left": {
          "type": "string",
          "format": "int64",
          "title": "OPTIONAL. A non-zero value indicates that\nthe participant has left the chat. OFFLINE(!)"
        },
        "peer": {
          "description": "[FROM]: User identity. Seed.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "title": {
          "description": "[TO]: Chat title.",
          "type": "string"
        },
        "via": {
          "description": "[FROM] VIA text gateway profile.",
          "$ref": "#/definitions/webitel.chat.Peer"
        }
      }
    },
    "webitel.chat.Chat.Invite": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when the invitation to join the chat was sent"
        },
        "from": {
          "type": "string",
          "title": "Chat member ID who invited to join the chat"
        }
      }
    },
    "webitel.chat.ChatCustomers": {
      "type": "object",
      "title": "ChatCustomers dataset",
      "properties": {
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "description": "Dataset page of Customer(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Customer"
          }
        },
        "vias": {
          "type": "array",
          "title": "List of unique text gateways, mentioned in peers. [VIA]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.ChatDialogs": {
      "type": "object",
      "title": "ChatDialogs dataset",
      "properties": {
        "data": {
          "description": "Dataset page of Dialog(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Dialog"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.chat.ChatMembers": {
      "type": "object",
      "title": "ChatMembers dataset",
      "properties": {
        "data": {
          "description": "Page of the chat participants.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of results.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.chat.ChatMessages": {
      "type": "object",
      "title": "ChatMessages dataset",
      "properties": {
        "chats": {
          "type": "array",
          "title": "List of chats mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "messages": {
          "description": "Dataset page of messages.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Message"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page is available ?"
        },
        "page": {
          "description": "Dataset page number.",
          "type": "integer",
          "format": "int32"
        },
        "peers": {
          "type": "array",
          "title": "List of peers mentioned in messages. [FROM]",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.ChatMessagesRequest.Offset": {
      "type": "object",
      "title": "Offset options",
      "properties": {
        "date": {
          "description": "Messages ONLY been sent before the specified epochtime(milli).",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "Messages ONLY starting from the specified message ID"
        }
      }
    },
    "webitel.chat.Customer": {
      "description": "Customer is external chat contact.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Customer unique **ID**entifier.\nAccount **type**-specific string.",
          "type": "string"
        },
        "name": {
          "description": "Customer account **name**.",
          "type": "string"
        },
        "type": {
          "description": "Customer account **type**.",
          "type": "string"
        },
        "via": {
          "description": "[VIA] Text gateway associations.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Peer"
          }
        }
      }
    },
    "webitel.chat.Dialog": {
      "description": "Chat Dialog. Conversation info.",
      "type": "object",
      "properties": {
        "closed": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp when dialog was closed.\nZero value means - connected (online)\nOtherwise - disconnected (offline)"
        },
        "context": {
          "description": "Context. Variables. Environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "date": {
          "description": "Timestamp of the latest activity.",
          "type": "string",
          "format": "int64"
        },
        "dc": {
          "description": "[D]omain[C]omponent primary ID.",
          "type": "string",
          "format": "int64"
        },
        "from": {
          "description": "[FROM]: Originator.\nLeg[A]. Contact / User.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "id": {
          "description": "The Conversation thread unique ID.",
          "type": "string"
        },
        "members": {
          "description": "[TO]: Participants.\nLeg[A+]. Schema / Agent.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.chat.Chat"
          }
        },
        "message": {
          "description": "The latest (top) message.",
          "$ref": "#/definitions/webitel.chat.Message"
        },
        "started": {
          "description": "Timestamp when dialog started.",
          "type": "string",
          "format": "int64"
        },
        "title": {
          "description": "Title of the dialog.",
          "type": "string"
        },
        "via": {
          "description": "[VIA] Text gateway [FROM] originated thru ...",
          "$ref": "#/definitions/webitel.chat.Peer"
        }
      }
    },
    "webitel.chat.EmptyResponse": {
      "type": "object"
    },
    "webitel.chat.File": {
      "description": "Media File.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "File location"
        },
        "name": {
          "type": "string",
          "title": "Filename"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Size in bytes"
        },
        "type": {
          "type": "string",
          "title": "MIME media type"
        }
      }
    },
    "webitel.chat.Message": {
      "description": "Chat Message.",
      "type": "object",
      "properties": {
        "chat": {
          "description": "Conversation the message belongs to ..",
          "$ref": "#/definitions/webitel.chat.Chat"
        },
        "context": {
          "description": "Context. Variables. Environment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "date": {
          "description": "Timestamp when this message was sent (published).",
          "type": "string",
          "format": "int64"
        },
        "edit": {
          "description": "Timestamp when this message was last edited.",
          "type": "string",
          "format": "int64"
        },
        "file": {
          "description": "Message Media. Attachment.",
          "$ref": "#/definitions/webitel.chat.File"
        },
        "from": {
          "description": "Sender of the message.",
          "$ref": "#/definitions/webitel.chat.Peer"
        },
        "id": {
          "description": "Unique message identifier inside this chat.",
          "type": "string",
          "format": "int64"
        },
        "sender": {
          "description": "Chat Sender of the message, sent on behalf of a chat (member).",
          "$ref": "#/definitions/webitel.chat.Chat"
        },
        "text": {
          "description": "Message Text.",
          "type": "string"
        }
      }
    },
    "webitel.chat.Peer": {
      "description": "Peer contact.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Contact unique **ID**entifier.\nContact **type**-specific string.",
          "type": "string"
        },
        "name": {
          "description": "Contact display **name**.",
          "type": "string"
        },
        "type": {
          "description": "Contact **type** provider.",
          "type": "string"
        }
      }
    },
    "webitel.chat.Timerange": {
      "description": "Timerange filter value.",
      "type": "object",
      "properties": {
        "since": {
          "description": "Since epochtime (milli).\n**Match**: greater than ..",
          "type": "string",
          "format": "int64"
        },
        "until": {
          "description": "Until epochtime (milli).\n**Match**: less or equal ..",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "webitel.contacts.AccessMode": {
      "type": "string",
      "title": "- READ: Can `fetch` record. [GET]\n - WRITE: Can `update` record. [PUT|PATCH]\n - DELETE: Can `delete` record. [DELETE]",
      "default": "READ",
      "enum": [
        "READ",
        "WRITE",
        "DELETE"
      ]
    },
    "webitel.contacts.Comment": {
      "type": "object",
      "title": "The Contact's internal Comment.\nOutput purpose only",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "format": {
          "description": "Styles of the text components.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment.Format"
          }
        },
        "id": {
          "description": "The unique ID of the Comment. Never changes.",
          "type": "string"
        },
        "text": {
          "description": "Rich Text, multi-line[d] string value.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "created_at": "1680268507698",
        "created_by": {
          "id": "34",
          "name": "John Doe"
        },
        "etag": "FqaTCDLbhpaoUreL",
        "id": "354",
        "text": "This is a new note about the contact's recent activity. So ...",
        "updated_at": "1680268507698",
        "updated_by": {
          "id": "34",
          "name": "John Doe"
        }
      }
    },
    "webitel.contacts.Comment.Format": {
      "type": "object",
      "properties": {
        "bold": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Bold"
        },
        "codeblock": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Codeblock"
        },
        "italic": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Italic"
        },
        "length": {
          "description": "Length text runes count.",
          "type": "integer",
          "format": "int32"
        },
        "link": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Link"
        },
        "monospace": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Monospace"
        },
        "offset": {
          "description": "Offset text runes count.",
          "type": "integer",
          "format": "int32"
        },
        "strikethrough": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Strikethrough"
        },
        "underline": {
          "$ref": "#/definitions/webitel.contacts.Comment.Format.Underline"
        }
      }
    },
    "webitel.contacts.Comment.Format.Bold": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Codeblock": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        }
      }
    },
    "webitel.contacts.Comment.Format.Italic": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Link": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "REQUIRED. If text[offset:length] is a regular plaintext, NOT an URL itself !"
        }
      }
    },
    "webitel.contacts.Comment.Format.Monospace": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Strikethrough": {
      "type": "object"
    },
    "webitel.contacts.Comment.Format.Underline": {
      "type": "object"
    },
    "webitel.contacts.CommentList": {
      "description": "Comment dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Comment dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "354",
            "text": "This is a new note about the contact's recent activity. So ...",
            "updated_at": "1680516785357",
            "updated_by": {
              "id": "34",
              "name": "John Doe"
            }
          },
          {
            "created_at": "1680268537698",
            "created_by": {
              "id": "56",
              "name": "Bruce Wayne"
            },
            "etag": "FZiTxVgr41VPFxyu",
            "id": "357",
            "text": "This contact may become a customer in a few days",
            "updated_at": "1680268563357",
            "updated_by": {
              "name": "Jane Lee (deleted)"
            },
            "ver": "4"
          }
        ],
        "next": true,
        "page": 1
      }
    },
    "webitel.contacts.Contact": {
      "description": "The Contact principal source.\nOUTPUT purpose only.",
      "type": "object",
      "properties": {
        "about": {
          "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
          "type": "string"
        },
        "comments": {
          "description": "The Contact's internal comment(s).",
          "$ref": "#/definitions/webitel.contacts.CommentList"
        },
        "created_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "created_by": {
          "title": "user",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "domain": {
          "description": "READONLY. The contact's metadata.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "emails": {
          "description": "The Contact's email address(es).",
          "$ref": "#/definitions/webitel.contacts.EmailList"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "imclients": {
          "description": "The contact's [I]nstant[M]essaging clients.",
          "$ref": "#/definitions/webitel.contacts.IMClientList"
        },
        "labels": {
          "description": "The Contact's associated tag(s).",
          "$ref": "#/definitions/webitel.contacts.LabelList"
        },
        "languages": {
          "description": "A Contact's locale preference(s).",
          "$ref": "#/definitions/webitel.contacts.LanguageList"
        },
        "managers": {
          "description": "The Contact's internal manager(s).",
          "$ref": "#/definitions/webitel.contacts.ManagerList"
        },
        "mode": {
          "description": "[R]ecord[b]ased[A]ccess[C]ontrol mode granted.",
          "type": "string"
        },
        "name": {
          "description": "The Contact's name.\nThis field is a singleton for Contact sources.",
          "$ref": "#/definitions/webitel.contacts.Name"
        },
        "phones": {
          "description": "The Contact's phone numbers.",
          "$ref": "#/definitions/webitel.contacts.PhoneList"
        },
        "photos": {
          "description": "Output only. The Contact's photo(s).",
          "$ref": "#/definitions/webitel.contacts.PhotoList",
          "readOnly": true
        },
        "timezones": {
          "description": "The Contact's timezone preference(s).",
          "$ref": "#/definitions/webitel.contacts.TimezoneList"
        },
        "updated_at": {
          "type": "string",
          "format": "int64",
          "title": "unix"
        },
        "updated_by": {
          "title": "user",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "variables": {
          "description": "Arbitrary client data that is populated by clients.\nDuplicate keys and values are allowed.",
          "$ref": "#/definitions/webitel.contacts.VariableList"
        },
        "ver": {
          "description": "READONLY. Operational attributes\nVersion of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ContactList": {
      "description": "Contact dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Contact(s) dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Contact"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.DayTimeline": {
      "type": "object",
      "properties": {
        "calls_count": {
          "type": "string",
          "format": "int64"
        },
        "chats_count": {
          "type": "string",
          "format": "int64"
        },
        "day_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.TimelineRecord"
          }
        }
      }
    },
    "webitel.contacts.EmailAddress": {
      "description": "The Contact's email address.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
        }
      }
    },
    "webitel.contacts.EmailList": {
      "description": "Email dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "EmailAddress dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.EmailAddress"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.EmptyResponse": {
      "type": "object"
    },
    "webitel.contacts.GetTimelineResponse": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.DayTimeline"
          }
        }
      }
    },
    "webitel.contacts.IMClient": {
      "description": "A contact's [I]nstant[M]essaging client.",
      "type": "object",
      "properties": {
        "app": {
          "description": "App (Text-Gateway) used to connect the IM client.\nId will be internal id of gateway.\nName will be name of the gateway.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol used to connect the IM client.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "user": {
          "description": "External user which contacted to us.\nId will be from external service.\nName will be from external service.",
          "$ref": "#/definitions/webitel.contacts.Lookup",
          "example": {
            "id": "596417343",
            "name": "John Doe",
            "type": "telegram"
          }
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "via": {
          "description": "[Via] App(-specific) peer(-id) to connect[from] the IM client.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.IMClientList": {
      "type": "object",
      "properties": {
        "data": {
          "description": "IMClient dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.IMClient"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.InputComment": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "format": {
          "description": "NEW Text components styling format.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Comment.Format"
          }
        },
        "text": {
          "description": "NEW Text of the comment.",
          "type": "string"
        }
      },
      "example": {
        "text": "This is a new note about the contact's recent activity. So ..."
      }
    },
    "webitel.contacts.InputContact": {
      "description": "The Contact principal input.",
      "type": "object",
      "properties": {
        "about": {
          "description": "BIO. Short description about the Contact person.\nOPTIONAL. Multi-lined text.",
          "type": "string"
        },
        "comments": {
          "description": "Publish NEW comment(s) for this Contact.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputComment"
          }
        },
        "emails": {
          "description": "The Contact's email address(es).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputEmailAddress"
          }
        },
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "imclients": {
          "description": "The contact's [I]nstant[M]essaging clients.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputIMClient"
          }
        },
        "labels": {
          "description": "The Contact's associated label(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputLabel"
          }
        },
        "languages": {
          "description": "A Contact's locale preference(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputLanguage"
          }
        },
        "managers": {
          "description": "The Contact's internal manager(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputManager"
          }
        },
        "name": {
          "title": "The Contact's name. Singleton",
          "$ref": "#/definitions/webitel.contacts.InputName"
        },
        "phones": {
          "description": "The Contact's phone numbers.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputPhoneNumber"
          }
        },
        "photos": {
          "description": "Output only. The Contact's photo(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputPhoto"
          },
          "readOnly": true
        },
        "timezones": {
          "description": "The Contact's timezone preference(s).",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputTimezone"
          }
        },
        "variables": {
          "description": "Arbitrary client data that is populated by clients.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.InputVariable"
          }
        }
      }
    },
    "webitel.contacts.InputEmailAddress": {
      "description": "Input of the Contact's email address.",
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "The email address.",
          "type": "string"
        },
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the email address.\nLookup value from CommunicationType dictionary.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'email' communication channel ?"
        }
      },
      "example": {
        "email": "user@domain",
        "etag": "1679792219687",
        "primary": true,
        "type": {
          "name": "personal"
        },
        "verified": false
      }
    },
    "webitel.contacts.InputIMClient": {
      "description": "Input of the contact IM client.",
      "type": "object",
      "properties": {
        "created_by": {
          "description": "Id of Agent created this IM client.",
          "type": "string"
        },
        "external_user": {
          "type": "string",
          "title": "External user id"
        },
        "gateway_id": {
          "description": "App (Text-Gateway) used to connect the IM client.",
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "via": {
          "description": "[Via] App(-specific) peer(-id) to connect[from] the IM client.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.InputLabel": {
      "description": "A Contact's associated Tag.\nOutput purpose only.",
      "type": "object",
      "required": [
        "tag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "label": {
          "description": "REQUIRED. Hashtag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.InputLanguage": {
      "description": "An input of the Contact's language.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing association.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default\namong others of the same type.",
          "type": "boolean"
        },
        "tag": {
          "type": "string",
          "title": "NEW, well-formed IETF BCP 47 language tag representing the locale.\nhttps://www.rfc-editor.org/info/bcp47"
        }
      },
      "example": {
        "primary": false,
        "tag": "uk"
      }
    },
    "webitel.contacts.InputManager": {
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default among others.",
          "type": "boolean"
        },
        "user": {
          "description": "Responsible User.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      },
      "example": {
        "primary": true,
        "user": {
          "id": "357",
          "name": "Bruce Wayne"
        }
      }
    },
    "webitel.contacts.InputName": {
      "type": "object",
      "properties": {
        "common_name": {
          "description": "REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
          "type": "string"
        },
        "family_name": {
          "type": "string",
          "title": "OPTIONAL. Surname(s) or last name(s) of the End-User.\nNote that in some cultures, people can have multiple family names or no family name;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name"
        },
        "given_name": {
          "type": "string",
          "title": "OPTIONAL. Given name(s) or first name(s) of the End-User.\nNote that in some cultures, people can have multiple given names;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name"
        },
        "middle_name": {
          "description": "OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.",
          "type": "string"
        },
        "verified": {
          "description": "Indicate whether Contact, as a Person, realy owns this associated name.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.InputPhoneNumber": {
      "description": "Input of the contact phone number.",
      "type": "object",
      "required": [
        "number"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
        }
      }
    },
    "webitel.contacts.InputPhoto": {
      "description": "Input of the photo.",
      "type": "object",
      "required": [
        "file_url"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing association.",
          "type": "string"
        },
        "photo_id": {
          "type": "string",
          "format": "int64",
          "title": "File unique ID within 'storage' service"
        },
        "photo_url": {
          "type": "string",
          "title": "The URL of the photo.\nYou can change the desired size by appending\na query parameter sz={size} at the end of the url,\nwhere {size} is the size in pixels.\nExample: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50"
        },
        "primary": {
          "description": "True if the photo is a default photo; false if the photo is a user-provided photo.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.InputTimezone": {
      "description": "An input of the Contact's timezones.",
      "type": "object",
      "required": [
        "etag"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resource.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association must be default among others.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone dictionary reference value associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        }
      }
    },
    "webitel.contacts.InputVariable": {
      "description": "Input of the Contact's variable.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "etag": {
          "description": "Unique ID of the latest version of an existing resorce.",
          "type": "string"
        },
        "key": {
          "description": "NEW Key.",
          "type": "string",
          "pattern": "^\\w+$"
        },
        "value": {
          "description": "NEW Value."
        }
      },
      "example": {
        "key": "var_rename",
        "value": [
          "string_item",
          [
            3,
            7
          ],
          false,
          null
        ]
      }
    },
    "webitel.contacts.Label": {
      "description": "A Contact's associated Tag.\nOutput purpose only.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "label": {
          "description": "REQUIRED. Tag value;\nNOTE: Keep in mind, hashtags are not case-sensitive,\nbut adding capital letters does make them easier to read:\n#MakeAWish vs. #makeawish.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LabelInfo": {
      "type": "object",
      "title": "LabelInfo about the Label's tag",
      "properties": {
        "label": {
          "description": "Label tag.\n\nCount of sources.\nint32 count = 2;\n Sources of Contacts assigned.\nrepeated string sources = 3;",
          "type": "string"
        }
      }
    },
    "webitel.contacts.LabelList": {
      "description": "LabelList dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Label(s) dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Label"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "Page number of partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LabelTags": {
      "description": "LabelTags dataset list of label's info.",
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "title": "Labels info dataset",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.LabelInfo"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next page available ?"
        },
        "page": {
          "description": "Page number of partial result.",
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "type": "array",
          "title": "Contact sources dataset",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Lookup"
          }
        }
      }
    },
    "webitel.contacts.Language": {
      "description": "A Contact's locale preference.\nOutput purpose only.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "uk              ; golang.org/x/text/language.MustParse(s).Base()"
        },
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "lang": {
          "type": "string",
          "title": "Ukrainian       ; golang.org/x/text/language/display.English.Languages().Name(tag)"
        },
        "name": {
          "type": "string",
          "title": "українська      ; golang.org/x/text/language/display.Self().Name(tag)"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "region": {
          "type": "string",
          "title": "UA              ; golang.org/x/text/language.MustParse(s).Region()"
        },
        "script": {
          "type": "string",
          "title": "Cyrl; (Cyrillic); golang.org/x/text/language.MustParse(s).Script()"
        },
        "tag": {
          "type": "string",
          "title": "The well-formed IETF BCP 47 language tag representing the locale.\nhttps://www.rfc-editor.org/info/bcp47"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.LanguageList": {
      "description": "LabelsData\nNOTE: Edge represents connection between two nodes.\nSo this ContactLabels.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Page of the Contact's Language(s) dataset.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Language"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Next indicate whether there are more result records(page+) available.\nIf set - next page is available with query ?size=$(data.length)\u0026page=$(page++)"
        },
        "page": {
          "description": "Page number of partial result dataset records.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "code": "uk",
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "7",
            "lang": "Ukrainian",
            "name": "українська",
            "primary": true,
            "region": "UA",
            "script": "Cyrl",
            "tag": "uk-UA",
            "updated_at": "1680516785357",
            "updated_by": {
              "name": "Jane Lee (deleted)"
            },
            "ver": "3"
          }
        ],
        "next": true,
        "page": 1
      }
    },
    "webitel.contacts.Lookup": {
      "description": "Lookup reference information.\nSimplified search filter to uniquely identify related object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Reference Object unique ID.",
          "type": "string"
        },
        "name": {
          "description": "Reference Object display name.",
          "type": "string"
        },
        "type": {
          "description": "Reference Object well-known type.",
          "type": "string"
        }
      }
    },
    "webitel.contacts.Manager": {
      "description": "Manager. The Contact's responsible User.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "user": {
          "description": "Responsible User.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.ManagerList": {
      "description": "Manager dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Manager dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Manager"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.Name": {
      "description": "A contact's name.\nIf the name is a mononym, the family name is empty.\n\nInspired:\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\nhttps://developers.google.com/people/api/rest/v1/people#name",
      "type": "object",
      "properties": {
        "common_name": {
          "description": "REQUIRED. End-User's full name in displayable form\nincluding all name parts, possibly including titles and suffixes,\nordered according to the End-User's locale and preferences.",
          "type": "string"
        },
        "family_name": {
          "type": "string",
          "title": "OPTIONAL. Surname(s) or last name(s) of the End-User.\nNote that in some cultures, people can have multiple family names or no family name;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #family_name"
        },
        "given_name": {
          "type": "string",
          "title": "OPTIONAL. Given name(s) or first name(s) of the End-User.\nNote that in some cultures, people can have multiple given names;\nall can be present, with the names being separated by space characters.\nhttps://openid.net/specs/openid-connect-core-1_0.html#StandardClaims #given_name"
        },
        "middle_name": {
          "description": "OPTIONAL. Middle name(s) of the End-User.\nNote that in some cultures, people can have multiple middle names;\nall can be present, with the names being separated by space characters.\nAlso note that in some cultures, middle names are not used.",
          "type": "string"
        },
        "verified": {
          "description": "Indicate whether Contact, as a Person, realy owns this associated name.",
          "type": "boolean"
        }
      }
    },
    "webitel.contacts.PhoneList": {
      "description": "PhoneNumber dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "PhoneNumber dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.PhoneNumber"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.PhoneNumber": {
      "description": "The Contact's phone number.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this phone number is default within other channels of the same type(phone).",
          "type": "boolean"
        },
        "type": {
          "title": "The type of the phone number.\nReference on CommunicationType dictionary.\nUsed for outbound routing while dialup a phone number.\nThe type can be custom or one of these predefined values:\n- home\n- work\n- mobile\n- homeFax\n- workFax\n- otherFax\n- pager\n- workMobile\n- workPager\n- main\n- googleVoice\n- other",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        },
        "verified": {
          "type": "boolean",
          "title": "Indicate whether Contact, as a Person, realy owns this associated phone number.\nIn other words: whether Contact is reachable thru this 'phone' communication channel ?"
        }
      }
    },
    "webitel.contacts.Photo": {
      "description": "A contact's photo.\nA picture shown next to the contact's name\nto help others recognize the contact.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "photo_id": {
          "type": "string",
          "format": "int64",
          "title": "File unique ID within 'storage' service"
        },
        "photo_url": {
          "type": "string",
          "title": "The URL of the photo.\nYou can change the desired size by appending\na query parameter sz={size} at the end of the url,\nwhere {size} is the size in pixels.\nExample: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50"
        },
        "primary": {
          "description": "True if the photo is a default photo; false if the photo is a user-provided photo.",
          "type": "boolean"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.PhotoList": {
      "description": "Photo dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Photo dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Photo"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.TimelineEventType": {
      "type": "string",
      "default": "chat",
      "enum": [
        "chat",
        "call"
      ]
    },
    "webitel.contacts.TimelineRecord": {
      "type": "object",
      "properties": {
        "closed_at": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "int64"
        },
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "flow_scheme": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "gateway": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "id": {
          "type": "string"
        },
        "is_inbound": {
          "type": "boolean"
        },
        "is_missed": {
          "type": "boolean"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Lookup"
          }
        },
        "queue": {
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "type": {
          "$ref": "#/definitions/webitel.contacts.TimelineEventType"
        }
      }
    },
    "webitel.contacts.Timezone": {
      "description": "A Contact's timezone preference.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "primary": {
          "description": "Indicates whether this association is the default\namong others of the same type.",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone dictionary reference value associated.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.TimezoneList": {
      "description": "Timezone dataset.\nNOTE: Edge represents connection between two nodes.\nSo this ContactTimezones.data are always subordinate to some contact.id.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Timezone dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Timezone"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "webitel.contacts.Variable": {
      "description": "The Contact's variable.\nArbitrary data that is populated by users or clients.\nDuplicate keys and values are allowed.",
      "type": "object",
      "properties": {
        "created_at": {
          "description": "The user who created this Field.",
          "type": "string",
          "format": "int64"
        },
        "created_by": {
          "description": "Timestamp(milli) of the Field creation.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "etag": {
          "description": "Unique ID of the latest version of the update.\nThis ID changes after any update to the underlying value(s).",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of the association. Never changes.",
          "type": "string"
        },
        "key": {
          "description": "Key name of the variable.",
          "type": "string"
        },
        "updated_at": {
          "description": "Timestamp(milli) of the last Field update.\nTake part in Etag generation.",
          "type": "string",
          "format": "int64"
        },
        "updated_by": {
          "description": "The user who performed last Update.",
          "$ref": "#/definitions/webitel.contacts.Lookup"
        },
        "value": {
          "description": "JSON value of the variable."
        },
        "ver": {
          "description": "Version of the latest update. Numeric sequence.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "created_at": "1680268507698",
        "created_by": {
          "id": "34",
          "name": "John Doe"
        },
        "etag": "FqaTCDLbhpaoUreL",
        "id": "6",
        "key": "var_complex",
        "updated_at": "1680516785357",
        "updated_by": {
          "name": "Ja Lee (deleted)"
        },
        "value": {
          "inner_var": null,
          "value_arr": [
            "string",
            [
              null
            ],
            false,
            1
          ]
        },
        "ver": "2"
      }
    },
    "webitel.contacts.VariableList": {
      "description": "Variable dataset.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Variable dataset page.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/webitel.contacts.Variable"
          }
        },
        "next": {
          "type": "boolean",
          "title": "Indicates that this is a partial result.\nMore data available upon query: ?size=${data.len}\u0026page=${page++}"
        },
        "page": {
          "description": "The page number of the partial result.",
          "type": "integer",
          "format": "int32"
        }
      },
      "example": {
        "data": [
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "FqaTCDLbhpaoUreL",
            "id": "4",
            "key": "my_string",
            "updated_at": "1680268507698",
            "updated_by": {
              "id": "34",
              "name": "John Doe"
            },
            "value": "string_value"
          },
          {
            "created_at": "1680268507698",
            "created_by": {
              "id": "34",
              "name": "John Doe"
            },
            "etag": "ogTsuZAIA1CcEZGC",
            "id": "6",
            "key": "var_complex",
            "updated_at": "1680516785357",
            "updated_by": {
              "name": "Ja Lee (deleted)"
            },
            "value": {
              "inner_var": null,
              "value_arr": [
                "string",
                [
                  null
                ],
                false,
                1
              ]
            },
            "ver": "2"
          }
        ],
        "next": true,
        "page": 1
      }
    }
  },
  "securityDefinitions": {
    "AccessToken": {
      "type": "apiKey",
      "name": "X-Webitel-Access",
      "in": "header"
    }
  },
  "security": [
    {
      "AccessToken": []
    }
  ]
}